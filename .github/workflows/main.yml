# This file configure a GitHub workflow responsible to perform
# various checks related to the codebase.
#
# For that reason it's runned on every pull request and push to main.
#
# It does the following:
#  - Check linting passes (no eslint error on files)
#  - Run tests and ensure none is failing

name: main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-12, windows-2022]
        node: [19.8.1]
    runs-on: ${{ matrix.os }}
    name: test on ${{ matrix.os }} and node ${{ matrix.node }}
    env:
      CI: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: set linux fs limits
        if: runner.os == 'Linux'
        run: |
          sudo sysctl fs.inotify.max_user_watches=524288
          sudo sysctl -p
          sudo sh -c "ulimit -n 65536 && exec su $LOGNAME"
          ulimit -n
        # sudo ulimit should prevent npm link failure
      - name: Install node modules
        run: npm install
      - name: Install playwright
        run: npm run playwright:install
      - name: Install certificate # needed for @jsenv/server and @jsenv/service-worker tests
        if: runner.os == 'Linux' # https://docs.github.com/en/actions/learn-github-actions/contexts#runner-context
        run: node ./scripts/test/certificate_install.mjs
      - name: Run ESLint
        run: npm run eslint
      - name: Run packages tests
        # env:
        #   NODE_V8_COVERAGE: .coverage/packages
        run: npm run test:workspace
      - name: Run core tests
        run: npm test
      # - name: Run core tests
      #   env:
      #     NODE_V8_COVERAGE: .coverage/core
      #   run: npm run test -- --coverage
      # - name: Upload coverage
      #   uses: codecov/codecov-action@v2
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: ./.coverage/coverage.json,./packages/integrity/.coverage/coverage.json,./packages/utils/.coverage/coverage.json
      #     verbose: true
