# This file configure a GitHub workflow responsible to perform
# various checks related to the codebase.
#
# For that reason it's runned on every pull request and push to main.
#
# It does the following:
#  - Check linting passes (no eslint error on files)
#  - Run tests and ensure none is failing
#  - Update tests code coverage
#
# If all these steps are passing the workflow ends up
# publishing package on npm if needed. It will publish the npm package
# using the token found in secrets.NPM_TOKEN. Be sure to create this
# token in the GitHub repository.

name: main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [16.3.0]
    runs-on: ${{ matrix.os }}
    name: test on ${{ matrix.os }} and node ${{ matrix.node }}
    env:
      CI: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: set linux fs limits
        if: runner.os == 'Linux'
        run: |
          sudo sysctl fs.inotify.max_user_watches=524288
          sudo sysctl -p
          sudo sh -c "ulimit -n 65536 && exec su $LOGNAME"
          ulimit -n
        # sudo ulimit should prevent npm link failure
      - name: npm install
        run: npm install
      - name: install playwright deps
        run: npx playwright install-deps
      - name: check lint
        run: npm run eslint-check
      - name: check tests
        run: npm run test-with-coverage
      - name: upload coverage
        run: npm run upload-coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    needs: [test]
    if: success() && github.event_name == 'push'
    runs-on: ubuntu-latest
    name: release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "16.3.0"
      - name: set linux fs limits
        run: |
          sudo sh -c "ulimit -n 65536 && exec su $LOGNAME"
          ulimit -n
        # sudo ulimit should prevent npm link failure
      - name: npm install
        run: npm install
      - name: publish package
        run: node --experimental-top-level-await ./.github/workflows/main/publish-package.js
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: ensure github release
        run: node --experimental-top-level-await ./.github/workflows/main/ensure-github-release-for-package.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
