{"version":3,"sources":["../../bin/chromium-vscode-server-start.js"],"names":["port","Number","root","process","cwd","getClientScript","compileURL","url","fileRelativeToRoot","pathname","slice","open","rootLocation","then","server","runServer","addRequestHandler","request","script","html","status","headers","Buffer","byteLength","body","console","log"],"mappings":";;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,OAAOC,OAAO,sDAAwB,MAAxB,KAAmC,MAA1C,CAAb;AACA,IAAMC,OAAO,sDAAwB,MAAxB,KAAmCC,QAAQC,GAAR,EAAhD;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAyB;AAAA,MAAtBC,UAAsB,QAAtBA,UAAsB;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAC/C,MAAMC,qBAAqBD,IAAIE,QAAJ,CAAaC,KAAb,CAAmB,CAAnB,CAA3B;;AAEA,qCAAgCJ,UAAhC,SAA8CE,kBAA9C;AACD,CAJD;;AAMA,IAAMG,OAAO,SAAPA,IAAO,GAAM;AACjB,4CAAkB;AAChBJ,SAAK,oBADW;AAEhBK,kBAAcV;AAFE,GAAlB,EAGGW,IAHH,CAGQ,UAACC,MAAD,EAAY;AAClB,gCAAW,EAAEP,2BAAyBP,IAA3B,EAAX,EAAgDa,IAAhD,CAAqD,UAACE,SAAD,EAAe;AAClEA,gBAAUC,iBAAV,CAA4B,UAACC,OAAD,EAAa;AACvC,eAAO,gDAAqB;AAC1BC,kBAAQb,gBAAgB,EAAEC,YAAYQ,OAAOR,UAArB,EAAiCC,KAAKU,QAAQV,GAA9C,EAAhB;AADkB,SAArB,EAEJM,IAFI,CAEC,UAACM,IAAD,EAAU;AAChB,iBAAO;AACLC,oBAAQ,GADH;AAELC,qBAAS;AACP,8BAAgB,WADT;AAEP,gCAAkBC,OAAOC,UAAP,CAAkBJ,IAAlB,CAFX;AAGP,+BAAiB;AAHV,aAFJ;AAOLK,kBAAML;AAPD,WAAP;AASD,SAZM,CAAP;AAaD,OAdD;;AAgBAM,cAAQC,GAAR,mCAA4CX,UAAUR,GAAtD;AACD,KAlBD;AAmBD,GAvBD;AAwBD,CAzBD;;AA2BA,2BAASP,IAAT,EAAea,IAAf,CAAoBF,IAApB","file":"chromium-vscode-server-start.js","sourcesContent":["\n\nimport { getFromProcessArguments } from \"./getFromProcessArguments.js\"\nimport { openCompileServer } from \"../src/openCompileServer/openCompileServer.js\"\nimport { openServer } from \"../src/openServer/openServer.js\"\nimport { createHTMLForBrowser } from \"../src/createHTMLForBrowser.js\"\nimport killPort from \"kill-port\"\n\nconst port = Number(getFromProcessArguments(\"port\") || \"3000\")\nconst root = getFromProcessArguments(\"root\") || process.cwd()\n\nconst getClientScript = ({ compileURL, url }) => {\n  const fileRelativeToRoot = url.pathname.slice(1)\n\n  return `window.System.import(\"${compileURL}/${fileRelativeToRoot}\")`\n}\n\nconst open = () => {\n  openCompileServer({\n    url: \"http://127.0.0.1:0\",\n    rootLocation: root,\n  }).then((server) => {\n    openServer({ url: `http://127.0.0.1:${port}` }).then((runServer) => {\n      runServer.addRequestHandler((request) => {\n        return createHTMLForBrowser({\n          script: getClientScript({ compileURL: server.compileURL, url: request.url }),\n        }).then((html) => {\n          return {\n            status: 200,\n            headers: {\n              \"content-type\": \"text/html\",\n              \"content-length\": Buffer.byteLength(html),\n              \"cache-control\": \"no-store\",\n            },\n            body: html,\n          }\n        })\n      })\n\n      console.log(`chromium server listening at ${runServer.url}`)\n    })\n  })\n}\n\nkillPort(port).then(open)\n"]}