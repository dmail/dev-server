{"version":3,"sources":["../../bin/jsrun.js"],"names":["root","process","cwd","file","argv","port","platform","watch","instrument","headless"],"mappings":";;AAEA;;AACA;;AAEA;AACA;AACA,IAAMA,OAAOC,QAAQC,GAAR,EAAb;AACA,IAAMC,OAAOF,QAAQG,IAAR,CAAa,CAAb,CAAb;AACA,IAAMC,OAAO,sDAAwB,MAAxB,KAAmC,CAAhD;AACA,IAAMC,WAAW,sDAAwB,UAAxB,KAAuC,MAAxD;AACA,IAAMC,QAAQ,sDAAwB,OAAxB,KAAoC,KAAlD;AACA,IAAMC,aAAa,sDAAwB,YAAxB,KAAyC,KAA5D;AACA,IAAMC,WAAW,sDAAwB,UAAxB,KAAuC,KAAxD;;AAEA,cAAI;AACFT,YADE;AAEFG,YAFE;AAGFE,YAHE;AAIFC,oBAJE;AAKFC,cALE;AAMFC,wBANE;AAOFC;AAPE,CAAJ","file":"jsrun.js","sourcesContent":["\n\nimport { getFromProcessArguments } from \"./getFromProcessArguments.js\"\nimport { run } from \"../src/run/run.js\"\n\n// ce qu'on fera ptet pour rendre le truc generique c'4est utiliser un chemin de fichier absolu\n// et en deduire root\nconst root = process.cwd()\nconst file = process.argv[1]\nconst port = getFromProcessArguments(\"port\") || 0\nconst platform = getFromProcessArguments(\"platform\") || \"node\"\nconst watch = getFromProcessArguments(\"watch\") || false\nconst instrument = getFromProcessArguments(\"instrument\") || false\nconst headless = getFromProcessArguments(\"headless\") || false\n\nrun({\n  root,\n  file,\n  port,\n  platform,\n  watch,\n  instrument,\n  headless,\n})\n"]}