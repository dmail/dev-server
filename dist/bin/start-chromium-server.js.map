{"version":3,"sources":["../../bin/start-chromium-server.js"],"names":["getFromArguments","name","foundRawArg","process","argv","find","arg","startsWith","slice","length","compileURL","port","Number","getClientScript","url","fileRelativeToRoot","pathname","then","runServer","addRequestHandler","request","script","html","status","headers","Buffer","byteLength","body","console","log"],"mappings":";;AAEA;;AACA;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;AACjC,MAAMC,cAAcC,QAAQC,IAAR,CAAaC,IAAb,CAAkB,UAACC,GAAD,EAAS;AAC7C,WAAOA,IAAIC,UAAJ,QAAoBN,IAApB,OAAP;AACD,GAFmB,CAApB;AAGA,MAAI,CAACC,WAAL,EAAkB;AAChB;AACD;AACD,SAAOA,YAAYM,KAAZ,CAAkB,QAAKP,IAAL,QAAaQ,MAA/B,CAAP;AACD,CARD;;AAUA,IAAMC,aAAaV,iBAAiB,aAAjB,KAAmC,gCAAtD;AACA,IAAMW,OAAOC,OAAOZ,iBAAiB,MAAjB,KAA4B,MAAnC,CAAb;;AAEA,IAAMa,kBAAkB,SAAlBA,eAAkB,OAAyB;AAAA,MAAtBH,UAAsB,QAAtBA,UAAsB;AAAA,MAAVI,GAAU,QAAVA,GAAU;;AAC/C,MAAMC,qBAAqBD,IAAIE,QAAJ,CAAaR,KAAb,CAAmB,CAAnB,CAA3B;;AAEA,qCAAgCE,UAAhC,SAA8CK,kBAA9C;AAID,CAPD;;AASA,4BAAW,EAAED,2BAAyBH,IAA3B,EAAX,EAAgDM,IAAhD,CAAqD,UAACC,SAAD,EAAe;AAClEA,YAAUC,iBAAV,CAA4B,UAACC,OAAD,EAAa;AACvC,WAAO,gDAAqB;AAC1BC,cAAQR,gBAAgB,EAAEH,sBAAF,EAAcI,KAAKM,QAAQN,GAA3B,EAAhB;AADkB,KAArB,EAEJG,IAFI,CAEC,UAACK,IAAD,EAAU;AAChB,aAAO;AACLC,gBAAQ,GADH;AAELC,iBAAS;AACP,0BAAgB,WADT;AAEP,4BAAkBC,OAAOC,UAAP,CAAkBJ,IAAlB,CAFX;AAGP,2BAAiB;AAHV,SAFJ;AAOLK,cAAML;AAPD,OAAP;AASD,KAZM,CAAP;AAaD,GAdD;;AAgBAM,UAAQC,GAAR,mCAA4CX,UAAUJ,GAAtD;AACAc,UAAQC,GAAR;AACD,CAnBD","file":"start-chromium-server.js","sourcesContent":["\n\nimport { openServer } from \"../src/openServer/openServer.js\"\nimport { createHTMLForBrowser } from \"../src/createHTMLForBrowser.js\"\n\nconst getFromArguments = (name) => {\n  const foundRawArg = process.argv.find((arg) => {\n    return arg.startsWith(`--${name}=`)\n  })\n  if (!foundRawArg) {\n    return\n  }\n  return foundRawArg.slice(`--${name}=`.length)\n}\n\nconst compileURL = getFromArguments(\"compile-url\") || \"http://127.0.0.1:3001/compiled\"\nconst port = Number(getFromArguments(\"port\") || \"3000\")\n\nconst getClientScript = ({ compileURL, url }) => {\n  const fileRelativeToRoot = url.pathname.slice(1)\n\n  return `window.System.import(\"${compileURL}/${fileRelativeToRoot}\")\nif(\"__test__\" in window) {\n\twindow.__test__()\n}`\n}\n\nopenServer({ url: `http://127.0.0.1:${port}` }).then((runServer) => {\n  runServer.addRequestHandler((request) => {\n    return createHTMLForBrowser({\n      script: getClientScript({ compileURL, url: request.url }),\n    }).then((html) => {\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"text/html\",\n          \"content-length\": Buffer.byteLength(html),\n          \"cache-control\": \"no-store\",\n        },\n        body: html,\n      }\n    })\n  })\n\n  console.log(`chromium server listening at ${runServer.url}`)\n  console.log(`test`)\n})\n"]}