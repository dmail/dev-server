{"version":3,"sources":["../../bin/start-compile-server.js"],"names":["getFromArguments","name","foundRawArg","process","argv","find","arg","startsWith","slice","length","root","resolve","__dirname","port","Number","folder","open","rootLocation","abstractFolderRelativeLocation","url","then","compileServer","console","log"],"mappings":";;AAEA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;AACjC,MAAMC,cAAcC,QAAQC,IAAR,CAAaC,IAAb,CAAkB,UAACC,GAAD,EAAS;AAC7C,WAAOA,IAAIC,UAAJ,QAAoBN,IAApB,OAAP;AACD,GAFmB,CAApB;AAGA,MAAI,CAACC,WAAL,EAAkB;AAChB;AACD;AACD,SAAOA,YAAYM,KAAZ,CAAkB,QAAKP,IAAL,QAAaQ,MAA/B,CAAP;AACD,CARD;;AAUA,IAAMC,OAAOV,iBAAiB,MAAjB,KAA4B,kBAAKW,OAAL,CAAaC,SAAb,EAAwB,QAAxB,CAAzC;AACA,IAAMC,OAAOC,OAAOd,iBAAiB,MAAjB,KAA4B,MAAnC,CAAb;AACA,IAAMe,SAASf,iBAAiB,QAAjB,KAA8B,UAA7C;;AAEA,IAAMgB,OAAO,SAAPA,IAAO;AAAA,SACX,0CAAkB;AAChBC,kBAAcP,IADE;AAEhBQ,oCAAgCH,MAFhB;AAGhBI,+BAAyBN,IAHT,CAGiB;AAHjB,GAAlB,EAIGO,IAJH,CAIQ,UAACC,aAAD,EAAmB;AACzBC,YAAQC,GAAR,kCAA2CF,cAAcF,GAAzD;AACD,GAND,CADW;AAAA,CAAb;;AASA,2BAASN,IAAT,EAAeO,IAAf,CAAoBJ,IAApB","file":"start-compile-server.js","sourcesContent":["\n\nimport { openCompileServer } from \"../src/openCompileServer/openCompileServer.js\"\nimport path from \"path\"\nimport killPort from \"kill-port\"\n\nconst getFromArguments = (name) => {\n  const foundRawArg = process.argv.find((arg) => {\n    return arg.startsWith(`--${name}=`)\n  })\n  if (!foundRawArg) {\n    return\n  }\n  return foundRawArg.slice(`--${name}=`.length)\n}\n\nconst root = getFromArguments(\"root\") || path.resolve(__dirname, \"../../\")\nconst port = Number(getFromArguments(\"port\") || \"3001\")\nconst folder = getFromArguments(\"folder\") || \"compiled\"\n\nconst open = () =>\n  openCompileServer({\n    rootLocation: root,\n    abstractFolderRelativeLocation: folder,\n    url: `http://127.0.0.1:${port}`, // avoid https for now because certificates are self signed\n  }).then((compileServer) => {\n    console.log(`compile server listening at ${compileServer.url}`)\n  })\n\nkillPort(port).then(open)\n"]}