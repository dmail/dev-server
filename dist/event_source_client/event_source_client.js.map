{
  "version": 3,
  "file": "event_source_client.js",
  "sources": [
    "../../src/internal/dev_server/event_source_client/event_source_connection.js",
    "../../src/internal/dev_server/event_source_client/livereload_preference.js",
    "../../src/internal/dev_server/event_source_client/url_context.js",
    "../../src/internal/dev_server/event_source_client/reload.js",
    "../../src/internal/dev_server/event_source_client/event_source_client.js"
  ],
  "sourcesContent": [
    "/* eslint-env browser */\n\nexport const createEventSourceConnection = (\n  eventSourceUrl,\n  events = {},\n  { retryMaxAttempt = Infinity, retryAllocatedMs = Infinity, lastEventId } = {},\n) => {\n  const { EventSource } = window\n  if (typeof EventSource !== \"function\") {\n    return () => {}\n  }\n\n  const eventSourceOrigin = new URL(eventSourceUrl).origin\n  Object.keys(events).forEach((eventName) => {\n    const eventCallback = events[eventName]\n    events[eventName] = (e) => {\n      if (e.origin === eventSourceOrigin) {\n        if (e.lastEventId) {\n          lastEventId = e.lastEventId\n        }\n        eventCallback(e)\n      }\n    }\n  })\n\n  const status = {\n    value: \"default\",\n    goTo: (value) => {\n      if (value === status.value) {\n        return\n      }\n      status.value = value\n      status.onchange()\n    },\n    onchange: () => {},\n  }\n  let _disconnect = () => {}\n\n  const attemptConnection = (url) => {\n    const eventSource = new EventSource(url, {\n      withCredentials: true,\n    })\n    _disconnect = () => {\n      if (status.value !== \"connecting\" && status.value !== \"connected\") {\n        console.warn(\n          `disconnect() ignored because connection is ${status.value}`,\n        )\n        return\n      }\n      eventSource.onerror = undefined\n      eventSource.close()\n      Object.keys(events).forEach((eventName) => {\n        eventSource.removeEventListener(eventName, events[eventName])\n      })\n      status.goTo(\"disconnected\")\n    }\n    let retryCount = 0\n    let firstRetryMs = Date.now()\n    eventSource.onerror = (errorEvent) => {\n      if (errorEvent.target.readyState === EventSource.CONNECTING) {\n        if (retryCount > retryMaxAttempt) {\n          console.info(`could not connect after ${retryMaxAttempt} attempt`)\n          _disconnect()\n          return\n        }\n\n        if (retryCount === 0) {\n          firstRetryMs = Date.now()\n        } else {\n          const allRetryDuration = Date.now() - firstRetryMs\n          if (retryAllocatedMs && allRetryDuration > retryAllocatedMs) {\n            console.info(\n              `could not connect in less than ${retryAllocatedMs} ms`,\n            )\n            _disconnect()\n            return\n          }\n        }\n\n        retryCount++\n        status.goTo(\"connecting\")\n        return\n      }\n\n      if (errorEvent.target.readyState === EventSource.CLOSED) {\n        _disconnect()\n        return\n      }\n    }\n    eventSource.onopen = () => {\n      status.goTo(\"connected\")\n    }\n    Object.keys(events).forEach((eventName) => {\n      eventSource.addEventListener(eventName, events[eventName])\n    })\n    if (!events.hasOwnProperty(\"welcome\")) {\n      eventSource.addEventListener(\"welcome\", (e) => {\n        if (e.origin === eventSourceOrigin && e.lastEventId) {\n          lastEventId = e.lastEventId\n        }\n      })\n    }\n    status.goTo(\"connecting\")\n  }\n\n  let connect = () => {\n    attemptConnection(eventSourceUrl)\n    connect = () => {\n      attemptConnection(\n        lastEventId\n          ? addLastEventIdIntoUrlSearchParams(eventSourceUrl, lastEventId)\n          : eventSourceUrl,\n      )\n    }\n  }\n\n  const removePageUnloadListener = listenPageUnload(() => {\n    _disconnect()\n  })\n\n  const destroy = () => {\n    removePageUnloadListener()\n    _disconnect()\n  }\n\n  return {\n    status,\n    connect,\n    disconnect: () => _disconnect(),\n    destroy,\n  }\n}\n\nconst addLastEventIdIntoUrlSearchParams = (url, lastEventId) => {\n  if (url.indexOf(\"?\") === -1) {\n    url += \"?\"\n  } else {\n    url += \"&\"\n  }\n  return `${url}last-event-id=${encodeURIComponent(lastEventId)}`\n}\n\n// const listenPageMightFreeze = (callback) => {\n//   const removePageHideListener = listenEvent(window, \"pagehide\", (pageHideEvent) => {\n//     if (pageHideEvent.persisted === true) {\n//       callback(pageHideEvent)\n//     }\n//   })\n//   return removePageHideListener\n// }\n\n// const listenPageFreeze = (callback) => {\n//   const removeFreezeListener = listenEvent(document, \"freeze\", (freezeEvent) => {\n//     callback(freezeEvent)\n//   })\n//   return removeFreezeListener\n// }\n\n// const listenPageIsRestored = (callback) => {\n//   const removeResumeListener = listenEvent(document, \"resume\", (resumeEvent) => {\n//     removePageshowListener()\n//     callback(resumeEvent)\n//   })\n//   const removePageshowListener = listenEvent(window, \"pageshow\", (pageshowEvent) => {\n//     if (pageshowEvent.persisted === true) {\n//       removePageshowListener()\n//       removeResumeListener()\n//       callback(pageshowEvent)\n//     }\n//   })\n//   return () => {\n//     removeResumeListener()\n//     removePageshowListener()\n//   }\n// }\n\nconst listenPageUnload = (callback) => {\n  const removePageHideListener = listenEvent(\n    window,\n    \"pagehide\",\n    (pageHideEvent) => {\n      if (pageHideEvent.persisted !== true) {\n        callback(pageHideEvent)\n      }\n    },\n  )\n  return removePageHideListener\n}\n\nconst listenEvent = (emitter, event, callback) => {\n  emitter.addEventListener(event, callback)\n  return () => {\n    emitter.removeEventListener(event, callback)\n  }\n}\n",
    "/* eslint-env browser */\n\nexport const isLivereloadEnabled = () => {\n  const value = window.localStorage.getItem(\"livereload\")\n  if (value === \"0\") {\n    return false\n  }\n  return true\n}\n\nexport const setLivereloadPreference = (value) => {\n  window.localStorage.setItem(\"livereload\", value ? \"1\" : \"0\")\n}\n",
    "export const createUrlContext = () => {\n  const { origin, pathname, search } = new URL(window.location)\n  if (!pathname.includes(\"/.jsenv/\")) {\n    return {\n      asUrlToFetch: (relativeUrl) => {\n        return `${origin}/${relativeUrl}`\n      },\n    }\n  }\n  const ressource = `${pathname}${search}`\n  const slashIndex = ressource.indexOf(\"/\", 1)\n  const compileDirectoryRelativeUrl = ressource.slice(1, slashIndex)\n  const afterCompileDirectory = ressource.slice(slashIndex + 1)\n  const nextSlashIndex = afterCompileDirectory.indexOf(\"/\")\n  const compileId = afterCompileDirectory.slice(0, nextSlashIndex)\n  return {\n    asUrlToFetch: (relativeUrl) => {\n      return `${origin}/${compileDirectoryRelativeUrl}/${compileId}/${relativeUrl}`\n    },\n  }\n}\n",
    "export const reloadPage = () => {\n  window.parent.location.reload(true)\n}\n\nexport const reloadAllCss = () => {\n  const links = Array.from(window.parent.document.getElementsByTagName(\"link\"))\n  links.forEach((link) => {\n    if (link.rel === \"stylesheet\") {\n      const url = new URL(link.href)\n      url.searchParams.set(\"t\", Date.now())\n      link.href = String(url)\n    }\n  })\n}\n",
    "import { createEventSourceConnection } from \"./event_source_connection.js\"\nimport {\n  isLivereloadEnabled,\n  setLivereloadPreference,\n} from \"./livereload_preference.js\"\nimport { createUrlContext } from \"./url_context.js\"\nimport { reloadPage } from \"./reload.js\"\n\nconst urlContext = createUrlContext()\n\nconst reloadMessages = []\nconst urlHotMetas = {}\nconst reloadMessagesSignal = { onchange: () => {} }\nconst applyReloadMessageEffects = async () => {\n  const someEffectIsFullReload = reloadMessages.some(\n    (reloadMessage) => reloadMessage.instruction.type === \"full_reload\",\n  )\n  if (someEffectIsFullReload) {\n    reloadPage()\n    return\n  }\n\n  const onApplied = (reloadMessage) => {\n    const index = reloadMessages.indexOf(reloadMessage)\n    reloadMessages.splice(index, 1)\n    reloadMessagesSignal.onchange()\n  }\n  const setReloadMessagePromise = (reloadMessage, promise) => {\n    reloadMessage.status = \"pending\"\n    promise.then(\n      () => {\n        onApplied(reloadMessage)\n      },\n      (e) => {\n        console.error(e)\n        console.error(\n          `[hmr] Failed to reload after ${reloadMessage.reason}.\nThis could be due to syntax errors or importing non-existent modules (see errors above)`,\n        )\n        reloadMessage.status = \"failed\"\n        reloadMessagesSignal.onchange()\n      },\n    )\n  }\n  await Promise.all(\n    reloadMessages.map(async (reloadMessage) => {\n      if (reloadMessage.instruction.type === \"hot_reload\") {\n        setReloadMessagePromise(\n          reloadMessage,\n          applyHotReload(reloadMessage.instruction),\n        )\n        return\n      }\n      onApplied(reloadMessage)\n    }),\n  )\n}\n\nconst applyHotReload = async ({ updates }) => {\n  await Promise.all(\n    updates.map(async ({ type, relativeUrl }) => {\n      // maybe rename \"js\" into \"import\"\n      // \"js\" is too generic it could apply to a regular js file\n      if (type === \"js\") {\n        const urlToFetch = urlContext.asUrlToFetch(relativeUrl)\n        const urlWithHmr = injectQuery(urlToFetch, { hmr: Date.now() })\n        const namespace = await import(urlWithHmr)\n        console.log(`[jsenv] hot updated: ${relativeUrl}`)\n        return namespace\n      }\n      throw new Error(`unknown update type: \"${type}\"`)\n    }),\n  )\n}\n\nconst injectQuery = (url, query) => {\n  const urlObject = new URL(url)\n  const { searchParams } = urlObject\n  Object.keys(query).forEach((key) => {\n    searchParams.set(key, query[key])\n  })\n  return String(urlObject)\n}\n\nconst addReloadMessage = (reloadMessage) => {\n  reloadMessages.push(reloadMessage)\n  if (isLivereloadEnabled()) {\n    applyReloadMessageEffects()\n  } else {\n    reloadMessagesSignal.onchange()\n  }\n}\n\nconst eventsourceConnection = createEventSourceConnection(\n  document.location.href,\n  {\n    reload: ({ data }) => {\n      const reloadMessage = JSON.parse(data)\n      addReloadMessage(reloadMessage)\n    },\n  },\n  {\n    retryMaxAttempt: Infinity,\n    retryAllocatedMs: 20 * 1000,\n  },\n)\n\nconst { status, connect, disconnect } = eventsourceConnection\nconnect()\nwindow.__jsenv_event_source_client__ = {\n  status,\n  connect,\n  disconnect,\n  isLivereloadEnabled,\n  setLivereloadPreference,\n  urlHotMetas,\n  reloadMessages,\n  reloadMessagesSignal,\n  applyReloadMessageEffects,\n  addReloadMessage,\n}\n\n// const findHotMetaUrl = (originalFileRelativeUrl) => {\n//   return Object.keys(urlHotMetas).find((compileUrl) => {\n//     return (\n//       parseCompiledUrl(compileUrl).fileRelativeUrl === originalFileRelativeUrl\n//     )\n//   })\n// }\n"
  ],
  "names": [
    "createEventSourceConnection",
    "eventSourceUrl",
    "events",
    "retryMaxAttempt",
    "Infinity",
    "retryAllocatedMs",
    "lastEventId",
    "EventSource",
    "window",
    "eventSourceOrigin",
    "URL",
    "origin",
    "Object",
    "keys",
    "forEach",
    "eventName",
    "eventCallback",
    "e",
    "status",
    "value",
    "goTo",
    "onchange",
    "_disconnect",
    "attemptConnection",
    "url",
    "eventSource",
    "withCredentials",
    "console",
    "warn",
    "onerror",
    "undefined",
    "close",
    "removeEventListener",
    "retryCount",
    "firstRetryMs",
    "Date",
    "now",
    "errorEvent",
    "target",
    "readyState",
    "CONNECTING",
    "info",
    "allRetryDuration",
    "CLOSED",
    "onopen",
    "addEventListener",
    "hasOwnProperty",
    "connect",
    "addLastEventIdIntoUrlSearchParams",
    "removePageUnloadListener",
    "listenPageUnload",
    "destroy",
    "disconnect",
    "indexOf",
    "encodeURIComponent",
    "callback",
    "removePageHideListener",
    "listenEvent",
    "pageHideEvent",
    "persisted",
    "emitter",
    "event",
    "isLivereloadEnabled",
    "localStorage",
    "getItem",
    "setLivereloadPreference",
    "setItem",
    "createUrlContext",
    "pathname",
    "search",
    "location",
    "includes",
    "asUrlToFetch",
    "relativeUrl",
    "ressource",
    "slashIndex",
    "compileDirectoryRelativeUrl",
    "slice",
    "afterCompileDirectory",
    "nextSlashIndex",
    "compileId",
    "reloadPage",
    "parent",
    "reload",
    "urlContext",
    "reloadMessages",
    "urlHotMetas",
    "reloadMessagesSignal",
    "applyReloadMessageEffects",
    "someEffectIsFullReload",
    "some",
    "reloadMessage",
    "instruction",
    "type",
    "onApplied",
    "index",
    "splice",
    "setReloadMessagePromise",
    "promise",
    "then",
    "error",
    "reason",
    "Promise",
    "all",
    "map",
    "applyHotReload",
    "updates",
    "urlToFetch",
    "urlWithHmr",
    "injectQuery",
    "hmr",
    "namespace",
    "log",
    "Error",
    "query",
    "urlObject",
    "searchParams",
    "key",
    "set",
    "String",
    "addReloadMessage",
    "push",
    "eventsourceConnection",
    "document",
    "href",
    "data",
    "JSON",
    "parse",
    "__jsenv_event_source_client__"
  ],
  "mappings": "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"
}