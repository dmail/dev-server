{
  "version": 3,
  "file": "event_source_client.js",
  "sources": [
    "../../src/internal/dev_server/event_source_client/event_source_connection.js",
    "../../src/internal/dev_server/event_source_client/livereload_preference.js",
    "../../src/internal/dev_server/event_source_client/reload.js",
    "../../src/internal/dev_server/event_source_client/event_source_client.js"
  ],
  "sourcesContent": [
    "/* eslint-env browser */\n\nexport const createEventSourceConnection = (\n  eventSourceUrl,\n  events = {},\n  { retryMaxAttempt = Infinity, retryAllocatedMs = Infinity, lastEventId } = {},\n) => {\n  const { EventSource } = window\n  if (typeof EventSource !== \"function\") {\n    return () => {}\n  }\n\n  const eventSourceOrigin = new URL(eventSourceUrl).origin\n  Object.keys(events).forEach((eventName) => {\n    const eventCallback = events[eventName]\n    events[eventName] = (e) => {\n      if (e.origin === eventSourceOrigin) {\n        if (e.lastEventId) {\n          lastEventId = e.lastEventId\n        }\n        eventCallback(e)\n      }\n    }\n  })\n\n  const status = {\n    value: \"default\",\n    goTo: (value) => {\n      if (value === status.value) {\n        return\n      }\n      status.value = value\n      status.onchange()\n    },\n    onchange: () => {},\n  }\n  let _disconnect = () => {}\n\n  const attemptConnection = (url) => {\n    const eventSource = new EventSource(url, {\n      withCredentials: true,\n    })\n    _disconnect = () => {\n      if (status.value !== \"connecting\" && status.value !== \"connected\") {\n        console.warn(\n          `disconnect() ignored because connection is ${status.value}`,\n        )\n        return\n      }\n      eventSource.onerror = undefined\n      eventSource.close()\n      Object.keys(events).forEach((eventName) => {\n        eventSource.removeEventListener(eventName, events[eventName])\n      })\n      status.goTo(\"disconnected\")\n    }\n    let retryCount = 0\n    let firstRetryMs = Date.now()\n    eventSource.onerror = (errorEvent) => {\n      if (errorEvent.target.readyState === EventSource.CONNECTING) {\n        if (retryCount > retryMaxAttempt) {\n          console.info(`could not connect after ${retryMaxAttempt} attempt`)\n          _disconnect()\n          return\n        }\n\n        if (retryCount === 0) {\n          firstRetryMs = Date.now()\n        } else {\n          const allRetryDuration = Date.now() - firstRetryMs\n          if (retryAllocatedMs && allRetryDuration > retryAllocatedMs) {\n            console.info(\n              `could not connect in less than ${retryAllocatedMs} ms`,\n            )\n            _disconnect()\n            return\n          }\n        }\n\n        retryCount++\n        status.goTo(\"connecting\")\n        return\n      }\n\n      if (errorEvent.target.readyState === EventSource.CLOSED) {\n        _disconnect()\n        return\n      }\n    }\n    eventSource.onopen = () => {\n      status.goTo(\"connected\")\n    }\n    Object.keys(events).forEach((eventName) => {\n      eventSource.addEventListener(eventName, events[eventName])\n    })\n    if (!events.hasOwnProperty(\"welcome\")) {\n      eventSource.addEventListener(\"welcome\", (e) => {\n        if (e.origin === eventSourceOrigin && e.lastEventId) {\n          lastEventId = e.lastEventId\n        }\n      })\n    }\n    status.goTo(\"connecting\")\n  }\n\n  let connect = () => {\n    attemptConnection(eventSourceUrl)\n    connect = () => {\n      attemptConnection(\n        lastEventId\n          ? addLastEventIdIntoUrlSearchParams(eventSourceUrl, lastEventId)\n          : eventSourceUrl,\n      )\n    }\n  }\n\n  const removePageUnloadListener = listenPageUnload(() => {\n    _disconnect()\n  })\n\n  const destroy = () => {\n    removePageUnloadListener()\n    _disconnect()\n  }\n\n  return {\n    status,\n    connect,\n    disconnect: () => _disconnect(),\n    destroy,\n  }\n}\n\nconst addLastEventIdIntoUrlSearchParams = (url, lastEventId) => {\n  if (url.indexOf(\"?\") === -1) {\n    url += \"?\"\n  } else {\n    url += \"&\"\n  }\n  return `${url}last-event-id=${encodeURIComponent(lastEventId)}`\n}\n\n// const listenPageMightFreeze = (callback) => {\n//   const removePageHideListener = listenEvent(window, \"pagehide\", (pageHideEvent) => {\n//     if (pageHideEvent.persisted === true) {\n//       callback(pageHideEvent)\n//     }\n//   })\n//   return removePageHideListener\n// }\n\n// const listenPageFreeze = (callback) => {\n//   const removeFreezeListener = listenEvent(document, \"freeze\", (freezeEvent) => {\n//     callback(freezeEvent)\n//   })\n//   return removeFreezeListener\n// }\n\n// const listenPageIsRestored = (callback) => {\n//   const removeResumeListener = listenEvent(document, \"resume\", (resumeEvent) => {\n//     removePageshowListener()\n//     callback(resumeEvent)\n//   })\n//   const removePageshowListener = listenEvent(window, \"pageshow\", (pageshowEvent) => {\n//     if (pageshowEvent.persisted === true) {\n//       removePageshowListener()\n//       removeResumeListener()\n//       callback(pageshowEvent)\n//     }\n//   })\n//   return () => {\n//     removeResumeListener()\n//     removePageshowListener()\n//   }\n// }\n\nconst listenPageUnload = (callback) => {\n  const removePageHideListener = listenEvent(\n    window,\n    \"pagehide\",\n    (pageHideEvent) => {\n      if (pageHideEvent.persisted !== true) {\n        callback(pageHideEvent)\n      }\n    },\n  )\n  return removePageHideListener\n}\n\nconst listenEvent = (emitter, event, callback) => {\n  emitter.addEventListener(event, callback)\n  return () => {\n    emitter.removeEventListener(event, callback)\n  }\n}\n",
    "/* eslint-env browser */\n\nexport const isLivereloadEnabled = () => {\n  const value = window.localStorage.getItem(\"livereload\")\n  if (value === \"0\") {\n    return false\n  }\n  return true\n}\n\nexport const setLivereloadPreference = (value) => {\n  window.localStorage.setItem(\"livereload\", value ? \"1\" : \"0\")\n}\n",
    "export const reloadPage = () => {\n  window.parent.location.reload(true)\n}\n\nexport const reloadAllCss = () => {\n  const links = Array.from(window.parent.document.getElementsByTagName(\"link\"))\n  links.forEach((link) => {\n    if (link.rel === \"stylesheet\") {\n      const url = new URL(link.href)\n      url.searchParams.set(\"t\", Date.now())\n      link.href = String(url)\n    }\n  })\n}\n",
    "import { createEventSourceConnection } from \"./event_source_connection.js\"\nimport {\n  isLivereloadEnabled,\n  setLivereloadPreference,\n} from \"./livereload_preference.js\"\nimport { reloadPage } from \"./reload.js\"\n\nconst reloadMessages = []\nconst urlHotMetas = {}\nconst reloadMessagesSignal = { onchange: () => {} }\nconst applyReloadMessageEffects = async () => {\n  const someEffectIsFullReload = reloadMessages.some(\n    (reloadMessage) => reloadMessage.instruction.type === \"full_reload\",\n  )\n  if (someEffectIsFullReload) {\n    reloadPage()\n    return\n  }\n  await Promise.all(\n    reloadMessages.map(async (reloadMessage, index) => {\n      if (reloadMessage.instruction.type === \"hot_reload\") {\n        await applyHotReload(reloadMessage.instruction)\n        reloadMessages.splice(index, 1)\n        reloadMessagesSignal.onchange()\n      }\n    }),\n  )\n}\n\nconst applyHotReload = async ({ timestamp, updates }) => {\n  await Promise.all(\n    updates.map(async ({ type, url }) => {\n      if (type === \"js\") {\n        const urlWithHmr = injectQuery(url, { hmr: timestamp })\n        const namespace = await import(urlWithHmr)\n        console.log(`[jsenv] hot updated: ${url}`)\n        return namespace\n      }\n      throw new Error(`unknown update type: \"${type}\"`)\n    }),\n  )\n}\n\nconst injectQuery = (url, query) => {\n  const urlObject = new URL(url)\n  const { searchParams } = urlObject\n  Object.keys(query).forEach((key) => {\n    searchParams.set(key, query[key])\n  })\n  return String(urlObject)\n}\n\nconst eventsourceConnection = createEventSourceConnection(\n  document.location.href,\n  {\n    reload: ({ data }) => {\n      const { reason, fileRelativeUrl, instruction } = JSON.parse(data)\n      reloadMessages.push({\n        reason,\n        fileRelativeUrl,\n        instruction,\n      })\n      if (isLivereloadEnabled()) {\n        applyReloadMessageEffects()\n      } else {\n        reloadMessagesSignal.onchange()\n      }\n    },\n  },\n  {\n    retryMaxAttempt: Infinity,\n    retryAllocatedMs: 20 * 1000,\n  },\n)\n\nconst { status, connect, disconnect } = eventsourceConnection\nconnect()\nwindow.__jsenv_event_source_client__ = {\n  status,\n  connect,\n  disconnect,\n  isLivereloadEnabled,\n  setLivereloadPreference,\n  urlHotMetas,\n  reloadMessages,\n  reloadMessagesSignal,\n  applyReloadMessageEffects,\n}\n\n// const findHotMetaUrl = (originalFileRelativeUrl) => {\n//   return Object.keys(urlHotMetas).find((compileUrl) => {\n//     return (\n//       parseCompiledUrl(compileUrl).fileRelativeUrl === originalFileRelativeUrl\n//     )\n//   })\n// }\n\n// // TODO: the following \"parseCompiledUrl\"\n// // already exists somewhere in the codebase: reuse the other one\n// const parseCompiledUrl = (url) => {\n//   const { pathname, search } = new URL(url)\n//   const ressource = `${pathname}${search}`\n//   const slashIndex = ressource.indexOf(\"/\", 1)\n//   const compileDirectoryRelativeUrl = ressource.slice(1, slashIndex)\n//   const afterCompileDirectory = ressource.slice(slashIndex)\n//   const nextSlashIndex = afterCompileDirectory.indexOf(\"/\")\n//   const compileId = afterCompileDirectory.slice(0, nextSlashIndex)\n//   const afterCompileId = afterCompileDirectory.slice(nextSlashIndex)\n//   return {\n//     compileDirectoryRelativeUrl,\n//     compileId,\n//     fileRelativeUrl: afterCompileId,\n//   }\n// }\n"
  ],
  "names": [
    "createEventSourceConnection",
    "eventSourceUrl",
    "events",
    "retryMaxAttempt",
    "Infinity",
    "retryAllocatedMs",
    "lastEventId",
    "window",
    "EventSource",
    "eventSourceOrigin",
    "URL",
    "origin",
    "Object",
    "keys",
    "forEach",
    "eventName",
    "eventCallback",
    "e",
    "status",
    "value",
    "goTo",
    "onchange",
    "_disconnect",
    "attemptConnection",
    "url",
    "eventSource",
    "withCredentials",
    "console",
    "warn",
    "onerror",
    "undefined",
    "close",
    "removeEventListener",
    "retryCount",
    "firstRetryMs",
    "Date",
    "now",
    "errorEvent",
    "target",
    "readyState",
    "CONNECTING",
    "info",
    "allRetryDuration",
    "CLOSED",
    "onopen",
    "addEventListener",
    "hasOwnProperty",
    "connect",
    "addLastEventIdIntoUrlSearchParams",
    "removePageUnloadListener",
    "listenPageUnload",
    "destroy",
    "disconnect",
    "indexOf",
    "encodeURIComponent",
    "callback",
    "removePageHideListener",
    "listenEvent",
    "pageHideEvent",
    "persisted",
    "emitter",
    "event",
    "isLivereloadEnabled",
    "localStorage",
    "getItem",
    "setLivereloadPreference",
    "setItem",
    "reloadPage",
    "parent",
    "location",
    "reload",
    "_empty",
    "reloadMessages",
    "_awaitIgnored",
    "direct",
    "then",
    "Promise",
    "resolve",
    "urlHotMetas",
    "_async",
    "f",
    "args",
    "i",
    "arguments",
    "length",
    "apply",
    "reject",
    "reloadMessagesSignal",
    "_await",
    "applyReloadMessageEffects",
    "someEffectIsFullReload",
    "some",
    "reloadMessage",
    "instruction",
    "type",
    "all",
    "map",
    "index",
    "applyHotReload",
    "splice",
    "_invokeIgnored",
    "body",
    "result",
    "timestamp",
    "updates",
    "urlWithHmr",
    "injectQuery",
    "hmr",
    "namespace",
    "log",
    "Error",
    "_invoke",
    "query",
    "urlObject",
    "searchParams",
    "key",
    "set",
    "String",
    "eventsourceConnection",
    "document",
    "href",
    "data",
    "JSON",
    "parse",
    "reason",
    "fileRelativeUrl",
    "push",
    "__jsenv_event_source_client__"
  ],
  "mappings": "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"
}