{
  "version": 3,
  "sources": [
    "../../../src/createCompile/createCompile.js"
  ],
  "names": [
    "transform",
    "context",
    "transformer",
    "Promise",
    "resolve",
    "inputSource",
    "outputSource",
    "inputSourceMap",
    "outputSourceMap",
    "inputAst",
    "outputAst",
    "then",
    "result",
    "createDefaultOptions",
    "groupId",
    "abstractFolderRelativeLocation",
    "transpile",
    "instrument",
    "remap",
    "identify",
    "identifyMethod",
    "minify",
    "optimize",
    "remapMethod",
    "createCompile",
    "createOptions",
    "transpiler",
    "defaultTranspiler",
    "minifier",
    "defaultMinifier",
    "instrumenter",
    "defaultInstrumenter",
    "optimizer",
    "defaultOptimizer",
    "instrumentPredicate",
    "getOptions",
    "all",
    "defaultOptions",
    "customOptions",
    "compile",
    "compileContext",
    "options",
    "inputRelativeLocation",
    "generate",
    "generateContext",
    "outputSourceMapName",
    "path",
    "basename",
    "getSourceNameForSourceMap",
    "rootLocation",
    "getSourceLocationForSourceMap",
    "identifier",
    "remapper",
    "outputAssets",
    "output",
    "Object",
    "keys",
    "map",
    "name",
    "content"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import { identifier } from \"./identifier.js\"\nimport { instrumenter as defaultInstrumenter } from \"./instrumenter-babel.js\"\nimport { minifier as defaultMinifier } from \"./minifier.js\"\nimport { optimizer as defaultOptimizer } from \"./optimizer.js\"\nimport { remapper } from \"./remapper.js\"\nimport { transpiler as defaultTranspiler } from \"./transpiler.js\"\nimport { resolvePath } from \"../createCompileService/helpers.js\"\nimport path from \"path\"\n\nconst transform = (context, transformer) => {\n  return Promise.resolve(\n    transformer({\n      ...context,\n      inputSource: context.outputSource,\n      inputSourceMap: context.outputSourceMap,\n      inputAst: context.outputAst,\n    }),\n  ).then((result) => {\n    // for now result is expected to null, undefined, or an object with any properties named\n    // outputSource, outputAst, outputSourceMap, outputSourceMapName, outputAssets\n\n    if (result) {\n      return {\n        ...context,\n        ...result,\n      }\n    }\n    return context\n  })\n}\n\nconst createDefaultOptions = ({ groupId, abstractFolderRelativeLocation }) => {\n  let transpile = false\n  if (abstractFolderRelativeLocation === \"compiled\") {\n    transpile = true\n  }\n\n  let instrument = false\n  if (abstractFolderRelativeLocation === \"instrumented\") {\n    transpile = true\n    instrument = true\n  }\n\n  const remap = true\n\n  return {\n    groupId,\n    identify: false,\n    identifyMethod: \"relative\",\n    transpile,\n    minify: false,\n    instrument,\n    optimize: false,\n    remap,\n    remapMethod: \"comment\", // 'comment', 'inline'\n  }\n}\n\nexport const createCompile = (\n  {\n    createOptions = () => {},\n    transpiler = defaultTranspiler,\n    minifier = defaultMinifier,\n    instrumenter = defaultInstrumenter,\n    optimizer = defaultOptimizer,\n    instrumentPredicate = () => true,\n  } = {},\n) => {\n  const getOptions = (context) => {\n    return Promise.all([createDefaultOptions(context), createOptions(context)]).then(\n      ([defaultOptions, customOptions = {}]) => {\n        return {\n          ...defaultOptions,\n          ...customOptions,\n        }\n      },\n    )\n  }\n\n  const compile = (compileContext) => {\n    return getOptions(compileContext).then((options) => {\n      let { identify, transpile, instrument, minify, optimize, remap } = options\n      // no location -> cannot identify\n      if (!compileContext.inputRelativeLocation) {\n        identify = false\n      }\n      // if sourceMap are appended as comment do not put any //#sourceURL=../../file.js\n      // because sourceMappingURL will try to resolve against sourceURL\n      if (remap) {\n        identify = false\n      }\n\n      const generate = (generateContext) => {\n        // generateContext.outputRelativeLocation dependent from options:\n        // there is a 1/1 relationship between JSON.stringify(options) & outputRelativeLocation\n        // it means we can get options from outputRelativeLocation & vice versa\n        // this is how compile output gets cached\n\n        return Promise.resolve({\n          outputSource: compileContext.inputSource,\n          outputSourceMap: compileContext.inputSourceMap,\n          // folder/file.js -> file.js.map\n          outputSourceMapName: `${path.basename(compileContext.inputRelativeLocation)}.map`,\n          outputAst: compileContext.inputAst,\n          getSourceNameForSourceMap: ({ rootLocation, inputRelativeLocation }) => {\n            return resolvePath(rootLocation, inputRelativeLocation)\n          },\n          getSourceLocationForSourceMap: ({ inputRelativeLocation }) => {\n            return inputRelativeLocation\n          },\n          ...compileContext,\n          ...generateContext,\n          options,\n        })\n          .then((context) => (transpile ? transform(context, transpiler) : context))\n          .then((context) => {\n            if (instrument && instrumentPredicate(context)) {\n              return transform(context, instrumenter)\n            }\n            return context\n          })\n          .then((context) => (minify ? transform(context, minifier) : context))\n          .then((context) => (optimize ? transform(context, optimizer) : context))\n          .then((context) => (identify ? transform(context, identifier) : context))\n          .then((context) => (remap ? transform(context, remapper) : context))\n          .then(({ outputSource, outputAssets = {} }) => {\n            return {\n              output: outputSource,\n              outputAssets: Object.keys(outputAssets).map((name) => {\n                return {\n                  name,\n                  content: outputAssets[name],\n                }\n              }),\n            }\n          })\n      }\n\n      return { options, generate }\n    })\n  }\n\n  return compile\n}\n"
  ]
}