{
  "version": 3,
  "sources": [
    "../../../src/createCompile/createCompile.js"
  ],
  "names": [
    "transform",
    "context",
    "transformer",
    "Promise",
    "resolve",
    "inputSource",
    "outputSource",
    "inputSourceMap",
    "outputSourceMap",
    "inputAst",
    "outputAst",
    "then",
    "result",
    "createDefaultOptions",
    "groupId",
    "abstractFolderRelativeLocation",
    "transpile",
    "instrument",
    "remap",
    "identify",
    "identifyMethod",
    "minify",
    "optimize",
    "remapMethod",
    "createCompile",
    "createOptions",
    "transpiler",
    "defaultTranspiler",
    "minifier",
    "defaultMinifier",
    "instrumenter",
    "defaultInstrumenter",
    "optimizer",
    "defaultOptimizer",
    "instrumentPredicate",
    "getOptions",
    "all",
    "defaultOptions",
    "customOptions",
    "compile",
    "compileContext",
    "options",
    "inputRelativeLocation",
    "generate",
    "generateContext",
    "outputSourceMapName",
    "path",
    "basename",
    "getSourceNameForSourceMap",
    "rootLocation",
    "getSourceLocationForSourceMap",
    "identifier",
    "remapper",
    "outputAssets",
    "output",
    "Object",
    "keys",
    "map",
    "name",
    "content"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import { identifier } from \"./identifier.js\"\nimport { instrumenter as defaultInstrumenter } from \"./instrumenter-babel.js\"\nimport { minifier as defaultMinifier } from \"./minifier.js\"\nimport { optimizer as defaultOptimizer } from \"./optimizer.js\"\nimport { remapper } from \"./remapper.js\"\nimport { transpiler as defaultTranspiler } from \"./transpiler.js\"\nimport { resolvePath } from \"../createCompileService/helpers.js\"\nimport path from \"path\"\n\nconst transform = (context, transformer) => {\n  return Promise.resolve(\n    transformer({\n      ...context,\n      inputSource: context.outputSource,\n      inputSourceMap: context.outputSourceMap,\n      inputAst: context.outputAst,\n    }),\n  ).then((result) => {\n    // for now result is expected to null, undefined, or an object with any properties named\n    // outputSource, outputAst, outputSourceMap, outputSourceMapName, outputAssets\n\n    if (result) {\n      return {\n        ...context,\n        ...result,\n      }\n    }\n    return context\n  })\n}\n\nconst createDefaultOptions = ({ groupId, abstractFolderRelativeLocation }) => {\n  let transpile = false\n  if (abstractFolderRelativeLocation === \"compiled\") {\n    transpile = true\n  }\n\n  let instrument = false\n  if (abstractFolderRelativeLocation === \"instrumented\") {\n    transpile = true\n    instrument = true\n  }\n\n  const remap = true\n\n  return {\n    groupId,\n    identify: false,\n    identifyMethod: \"relative\",\n    transpile,\n    minify: false,\n    instrument,\n    optimize: false,\n    remap,\n    remapMethod: \"comment\", // 'comment', 'inline'\n  }\n}\n\nexport const createCompile = (\n  {\n    createOptions = () => {},\n    transpiler = defaultTranspiler,\n    minifier = defaultMinifier,\n    instrumenter = defaultInstrumenter,\n    optimizer = defaultOptimizer,\n    instrumentPredicate = () => true,\n  } = {},\n) => {\n  const getOptions = (context) => {\n    return Promise.all([createDefaultOptions(context), createOptions(context)]).then(\n      ([defaultOptions, customOptions = {}]) => {\n        return {\n          ...defaultOptions,\n          ...customOptions,\n        }\n      },\n    )\n  }\n\n  const compile = (compileContext) => {\n    return getOptions(compileContext).then((options) => {\n      let { identify, transpile, instrument, minify, optimize, remap } = options\n      // no location -> cannot identify\n      if (!compileContext.inputRelativeLocation) {\n        identify = false\n      }\n      // if sourceMap are appended as comment do not put any //#sourceURL=../../file.js\n      // because sourceMappingURL will try to resolve against sourceURL\n      if (remap) {\n        identify = false\n      }\n\n      const generate = (generateContext) => {\n        // generateContext.outputRelativeLocation dependent from options:\n        // there is a 1/1 relationship between JSON.stringify(options) & outputRelativeLocation\n        // it means we can get options from outputRelativeLocation & vice versa\n        // this is how compile output gets cached\n\n        return Promise.resolve({\n          outputSource: compileContext.inputSource,\n          outputSourceMap: compileContext.inputSourceMap,\n          // folder/file.js -> file.js.map\n          outputSourceMapName: `${path.basename(compileContext.inputRelativeLocation)}.map`,\n          outputAst: compileContext.inputAst,\n          getSourceNameForSourceMap: ({ rootLocation, inputRelativeLocation }) => {\n            return resolvePath(rootLocation, inputRelativeLocation)\n          },\n          getSourceLocationForSourceMap: ({ inputRelativeLocation }) => {\n            return inputRelativeLocation\n          },\n          ...compileContext,\n          ...generateContext,\n          options,\n        })\n          .then((context) => (transpile ? transform(context, transpiler) : context))\n          .then((context) => {\n            if (instrument && instrumentPredicate(context)) {\n              return transform(context, instrumenter)\n            }\n            return context\n          })\n          .then((context) => (minify ? transform(context, minifier) : context))\n          .then((context) => (optimize ? transform(context, optimizer) : context))\n          .then((context) => (identify ? transform(context, identifier) : context))\n          .then((context) => (remap ? transform(context, remapper) : context))\n          .then(({ outputSource, outputAssets = {} }) => {\n            return {\n              output: outputSource,\n              outputAssets: Object.keys(outputAssets).map((name) => {\n                return {\n                  name,\n                  content: outputAssets[name],\n                }\n              }),\n            }\n          })\n      }\n\n      return { options, generate }\n    })\n  }\n\n  return compile\n}\n"
  ]
}