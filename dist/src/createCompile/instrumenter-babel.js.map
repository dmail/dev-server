{
  "version": 3,
  "sources": [
    "../../../src/createCompile/instrumenter-babel.js"
  ],
  "names": [
    "createInstrumentPlugin",
    "filename",
    "useInlineSourceMaps",
    "types",
    "visitor",
    "Program",
    "enter",
    "path",
    "__dv__",
    "inputSourceMap",
    "opts",
    "file",
    "inputMap",
    "sourcemap",
    "coverageVariable",
    "exit",
    "object",
    "metadata",
    "coverage",
    "fileCoverage",
    "instrumenter",
    "context",
    "inputRelativeLocation",
    "inputSource",
    "inputAst",
    "outputSourceMapName",
    "options",
    "getSourceNameForSourceMap",
    "getSourceLocationForSourceMap",
    "babelOptions",
    "plugins",
    "remap",
    "sourceLocationForSourceMap",
    "sourceNameForSourceMap"
  ],
  "mappings": ";;;;;;;AAAA;;AACA;;;;;;AAEA;AAEA,MAAMA,sBAAsB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,mBAAmB,GAAG;AAAlC,IAA4C,EAA7C,KAAoD;AACjF,SAAO,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAe;AACpB,WAAO;AACLC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,CAACC,IAAD,EAAO;AACV,iBAAKC,MAAL,GAAc,IAAd;AAEA,gBAAIC,cAAJ;;AACA,gBAAIP,mBAAJ,EAAyB;AACvB;AACAO,cAAAA,cAAc,GACZ,KAAKC,IAAL,CAAUD,cAAV,IAA4B,KAAKE,IAAL,CAAUC,QAAtC,GAAiD,KAAKD,IAAL,CAAUC,QAAV,CAAmBC,SAApE,GAAgF,IADlF;AAED,aAJD,MAIO;AACLJ,cAAAA,cAAc,GAAG,KAAKC,IAAL,CAAUD,cAA3B;AACD;;AAED,iBAAKD,MAAL,GAAc,2CAAeL,KAAf,EAAsBF,QAAtB,EAAgC;AAC5Ca,cAAAA,gBAAgB,EAAE,cAD0B;AAE5CL,cAAAA;AAF4C,aAAhC,CAAd;;AAIA,iBAAKD,MAAL,CAAYF,KAAZ,CAAkBC,IAAlB;AACD,WAlBM;;AAoBPQ,UAAAA,IAAI,CAACR,IAAD,EAAO;AACT,gBAAI,CAAC,KAAKC,MAAV,EAAkB;AAChB;AACD;;AACD,kBAAMQ,MAAM,GAAG,KAAKR,MAAL,CAAYO,IAAZ,CAAiBR,IAAjB,CAAf,CAJS,CAKT;;;AACA,iBAAKI,IAAL,CAAUM,QAAV,CAAmBC,QAAnB,GAA8BF,MAAM,CAACG,YAArC;AACD;;AA3BM;AADF;AADJ,KAAP;AAiCD,GAlCD;AAmCD,CApCD;;AAsCO,MAAMC,YAAY,GAAIC,OAAD,IAAa;AACvC,QAAM;AACJC,IAAAA,qBADI;AAEJC,IAAAA,WAFI;AAGJd,IAAAA,cAHI;AAIJe,IAAAA,QAJI;AAKJC,IAAAA,mBALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,yBAPI;AAQJC,IAAAA;AARI,MASFP,OATJ;AAWA,QAAMQ,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,CACP;AACA;AACA9B,IAAAA,sBAAsB,CAAC;AAAEC,MAAAA,QAAQ,EAAEqB,qBAAZ;AAAmCpB,MAAAA,mBAAmB,EAAE;AAAxD,KAAD,CAHf,CADU;AAMnBD,IAAAA,QAAQ,EAAEqB,qBANS;AAOnBb,IAAAA;AAPmB,GAArB;AAUA,SAAO;AACLe,IAAAA,QADK;AAELD,IAAAA,WAFK;AAGLG,IAAAA,OAAO,EAAEG;AAHJ,KAIDH,OAAO,CAACK,KAAR,GACA;AACEN,IAAAA,mBADF;AAEEO,IAAAA,0BAA0B,EAAEJ,6BAA6B,CAACP,OAAD,CAF3D;AAGEY,IAAAA,sBAAsB,EAAEN,yBAAyB,CAACN,OAAD;AAHnD,GADA,GAMA,EAVC,EAAP;AAYD,CAlCM",
  "sourcesContent": [
    "import { programVisitor } from \"istanbul-lib-instrument\"\nimport { transpileWithBabel } from \"./transpileWithBabel.js\"\n\n// https://github.com/istanbuljs/babel-plugin-istanbul/blob/321740f7b25d803f881466ea819d870f7ed6a254/src/index.js\n\nconst createInstrumentPlugin = ({ filename, useInlineSourceMaps = false } = {}) => {\n  return ({ types }) => {\n    return {\n      visitor: {\n        Program: {\n          enter(path) {\n            this.__dv__ = null\n\n            let inputSourceMap\n            if (useInlineSourceMaps) {\n              // https://github.com/istanbuljs/babel-plugin-istanbul/commit/a9e15643d249a2985e4387e4308022053b2cd0ad#diff-1fdf421c05c1140f6d71444ea2b27638R65\n              inputSourceMap =\n                this.opts.inputSourceMap || this.file.inputMap ? this.file.inputMap.sourcemap : null\n            } else {\n              inputSourceMap = this.opts.inputSourceMap\n            }\n\n            this.__dv__ = programVisitor(types, filename, {\n              coverageVariable: \"__coverage__\",\n              inputSourceMap,\n            })\n            this.__dv__.enter(path)\n          },\n\n          exit(path) {\n            if (!this.__dv__) {\n              return\n            }\n            const object = this.__dv__.exit(path)\n            // object got two properties: fileCoverage and sourceMappingURL\n            this.file.metadata.coverage = object.fileCoverage\n          },\n        },\n      },\n    }\n  }\n}\n\nexport const instrumenter = (context) => {\n  const {\n    inputRelativeLocation,\n    inputSource,\n    inputSourceMap,\n    inputAst,\n    outputSourceMapName,\n    options,\n    getSourceNameForSourceMap,\n    getSourceLocationForSourceMap,\n  } = context\n\n  const babelOptions = {\n    plugins: [\n      // we are missing some plugins here, the syntax plugins are required to be able to traverse the tree no ?\n      // yes indeed, we could copy/paste all syntax plugins here\n      createInstrumentPlugin({ filename: inputRelativeLocation, useInlineSourceMaps: false }),\n    ],\n    filename: inputRelativeLocation,\n    inputSourceMap,\n  }\n\n  return transpileWithBabel({\n    inputAst,\n    inputSource,\n    options: babelOptions,\n    ...(options.remap\n      ? {\n          outputSourceMapName,\n          sourceLocationForSourceMap: getSourceLocationForSourceMap(context),\n          sourceNameForSourceMap: getSourceNameForSourceMap(context),\n        }\n      : {}),\n  })\n}\n"
  ]
}