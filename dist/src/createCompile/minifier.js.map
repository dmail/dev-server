{
  "version": 3,
  "sources": [
    "../../../src/createCompile/minifier.js"
  ],
  "names": [
    "minifier",
    "context",
    "inputRelativeLocation",
    "inputSource",
    "inputAst",
    "inputSourceMap",
    "options",
    "outputSourceMapName",
    "getSourceNameForSourceMap",
    "getSourceLocationForSourceMap",
    "babelOptions",
    "plugins",
    "filename",
    "remap",
    "sourceLocationForSourceMap",
    "sourceNameForSourceMap"
  ],
  "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAa;AAAA,MAEjCC,qBAFiC,GAU/BD,OAV+B,CAEjCC,qBAFiC;AAAA,MAGjCC,WAHiC,GAU/BF,OAV+B,CAGjCE,WAHiC;AAAA,MAIjCC,QAJiC,GAU/BH,OAV+B,CAIjCG,QAJiC;AAAA,MAKjCC,cALiC,GAU/BJ,OAV+B,CAKjCI,cALiC;AAAA,MAMjCC,OANiC,GAU/BL,OAV+B,CAMjCK,OANiC;AAAA,MAOjCC,mBAPiC,GAU/BN,OAV+B,CAOjCM,mBAPiC;AAAA,MAQjCC,yBARiC,GAU/BP,OAV+B,CAQjCO,yBARiC;AAAA,MASjCC,6BATiC,GAU/BR,OAV+B,CASjCQ,6BATiC;AAYnC,MAAMC,YAAY,GAAG;AACnB;AACAC,IAAAA,OAAO,EAAE,EAFU;AAGnBC,IAAAA,QAAQ,EAAEV,qBAHS;AAInBG,IAAAA,cAAc,EAAdA;AAJmB,GAArB;AAOA,SAAO;AACLD,IAAAA,QAAQ,EAARA,QADK;AAELD,IAAAA,WAAW,EAAXA,WAFK;AAGLG,IAAAA,OAAO,EAAEI;AAHJ,KAIDJ,OAAO,CAACO,KAAR,GACA;AACEN,IAAAA,mBAAmB,EAAnBA,mBADF;AAEEO,IAAAA,0BAA0B,EAAEL,6BAA6B,CAACR,OAAD,CAF3D;AAGEc,IAAAA,sBAAsB,EAAEP,yBAAyB,CAACP,OAAD;AAHnD,GADA,GAMA,EAVC,EAAP;AAYD,CA/BM",
  "sourcesContent": [
    "import { transpileWithBabel } from \"./transpileWithBabel.js\"\n\nexport const minifier = (context) => {\n  const {\n    inputRelativeLocation,\n    inputSource,\n    inputAst,\n    inputSourceMap,\n    options,\n    outputSourceMapName,\n    getSourceNameForSourceMap,\n    getSourceLocationForSourceMap,\n  } = context\n\n  const babelOptions = {\n    // we need a list of plugin that minify the outputs\n    plugins: [],\n    filename: inputRelativeLocation,\n    inputSourceMap,\n  }\n\n  return transpileWithBabel({\n    inputAst,\n    inputSource,\n    options: babelOptions,\n    ...(options.remap\n      ? {\n          outputSourceMapName,\n          sourceLocationForSourceMap: getSourceLocationForSourceMap(context),\n          sourceNameForSourceMap: getSourceNameForSourceMap(context),\n        }\n      : {}),\n  })\n}\n"
  ]
}