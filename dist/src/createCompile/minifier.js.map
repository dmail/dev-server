{"version":3,"sources":["../../../src/createCompile/minifier.js"],"names":["minifier","inputSource","inputAst","inputSourceMap","options","outputSourceMapName","babelConfig","sourceMaps","remap","babelrc","ast","code","map","outputSource","outputSourceMap","outputAst","outputAssets","JSON","stringify"],"mappings":";;;;;;;AAAA;;AAKA;;;;AAEO,IAAMA,8BAAW,SAAXA,QAAW,OAMlB;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,cAGI,QAHJA,cAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,mBACI,QADJA,mBACI;;AACJ,MAAMC,cAAc,yBAClB,yBAAa,kCAAb,EAAqC;AACnCC,gBAAYH,QAAQI,KADe;AAEnCL,kCAFmC;AAGnCM,aAAS,KAH0B,EAGnB;AAChBC,SAAK;AAJ8B,GAArC,CADkB,CAApB;;AASA,MAAIR,QAAJ,EAAc;AAAA,4BACe,iCAAiBA,QAAjB,EAA2BD,WAA3B,EAAwCK,WAAxC,CADf;AAAA,QACJK,KADI,qBACJA,IADI;AAAA,QACED,IADF,qBACEA,GADF;AAAA,QACOE,IADP,qBACOA,GADP;;AAEZ,WAAO;AACLC,oBAAcF,KADT;AAELG,uBAAiBF,IAFZ;AAGLG,iBAAWL,IAHN;AAILM,wCACGX,mBADH,EACyBY,KAAKC,SAAL,CAAeN,IAAf,EAAoB,IAApB,EAA0B,IAA1B,CADzB;AAJK,KAAP;AAQD;;AApBG,mBAsBuB,0BAAUX,WAAV,EAAuBK,WAAvB,CAtBvB;AAAA,MAsBIK,IAtBJ,cAsBIA,IAtBJ;AAAA,MAsBUD,GAtBV,cAsBUA,GAtBV;AAAA,MAsBeE,GAtBf,cAsBeA,GAtBf;;AAuBJ,SAAO;AACLC,kBAAcF,IADT;AAELG,qBAAiBF,GAFZ;AAGLG,eAAWL,GAHN;AAILM,sCACGX,mBADH,EACyBY,KAAKC,SAAL,CAAeN,GAAf,EAAoB,IAApB,EAA0B,IAA1B,CADzB;AAJK,GAAP;AAQD,CArCM","file":"minifier.js","sourcesContent":["import {\n  createConfig,\n  createMinifiyOptions,\n  mergeOptions,\n} from \"@dmail/shared-config/dist/babel.js\"\nimport { transform, transformFromAst } from \"babel-core\"\n\nexport const minifier = ({\n  inputSource,\n  inputAst,\n  inputSourceMap,\n  options,\n  outputSourceMapName,\n}) => {\n  const babelConfig = createConfig(\n    mergeOptions(createMinifiyOptions(), {\n      sourceMaps: options.remap,\n      inputSourceMap,\n      babelrc: false, // trust only these options, do not read any babelrc config file\n      ast: true,\n    }),\n  )\n\n  if (inputAst) {\n    const { code, ast, map } = transformFromAst(inputAst, inputSource, babelConfig)\n    return {\n      outputSource: code,\n      outputSourceMap: map,\n      outputAst: ast,\n      outputAssets: {\n        [outputSourceMapName]: JSON.stringify(map, null, \"  \"),\n      },\n    }\n  }\n\n  const { code, ast, map } = transform(inputSource, babelConfig)\n  return {\n    outputSource: code,\n    outputSourceMap: map,\n    outputAst: ast,\n    outputAssets: {\n      [outputSourceMapName]: JSON.stringify(map, null, \"  \"),\n    },\n  }\n}\n"]}