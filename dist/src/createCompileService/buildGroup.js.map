{
  "version": 3,
  "sources": [
    "../../../src/createCompileService/buildGroup.js"
  ],
  "names": [
    "stringifyGroups",
    "groups",
    "lightGroups",
    "map",
    "group",
    "id",
    "pluginNames",
    "compatMap",
    "JSON",
    "stringify",
    "buildGroup",
    "root",
    "config",
    "moduleOutput",
    "getGroupForPlatform",
    "getAllGroup",
    "sortedGroups",
    "sort",
    "a",
    "b",
    "length",
    "reverse",
    "slice",
    "forEach",
    "intermediateGroup",
    "index",
    "getGroupIdForPlatform",
    "platformName",
    "platformVersion",
    "getPluginsFromGroupId",
    "groupId",
    "find",
    "plugins"
  ],
  "mappings": ";;;;;;;AAAA;;AAKA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;AAClC,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAP,CAAW,UAACC,KAAD,EAAW;AACxC,WAAO;AACLC,MAAAA,EAAE,EAAED,KAAK,CAACC,EADL;AAELC,MAAAA,WAAW,EAAEF,KAAK,CAACE,WAFd;AAGLC,MAAAA,SAAS,EAAEH,KAAK,CAACG;AAHZ,KAAP;AAKD,GANmB,CAApB;AAQA,SAAOC,IAAI,CAACC,SAAL,CAAeP,WAAf,EAA4B,IAA5B,EAAkC,IAAlC,CAAP;AACD,CAVD;;AAYO,IAAMQ,UAAU,GAAG,SAAbA,UAAa,OAA4C;AAAA,MAAzCC,IAAyC,QAAzCA,IAAyC;AAAA,yBAAnCC,MAAmC;AAAA,MAAnCA,MAAmC,4BAA1B,mBAA0B;;AAAA,8BACvB,6DAA0B;AACrEC,IAAAA,YAAY,EAAE;AADuD,GAA1B,CADuB;AAAA,MAC5DC,mBAD4D,yBAC5DA,mBAD4D;AAAA,MACvCC,WADuC,yBACvCA,WADuC;;AAKpE,MAAMd,MAAM,GAAGc,WAAW,EAA1B;AACA;AACA,MAAMC,YAAY,GAAGf,MAAM,CAACgB,IAAP,CAAY,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,CAACZ,WAAF,CAAcc,MAAd,GAAuBD,CAAC,CAACb,WAAF,CAAcc,MAA/C;AAAA,GAAZ,EAAmEC,OAAnE,EAArB;AAEAL,EAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBX,EAAhB,GAAqB,OAArB;AACAW,EAAAA,YAAY,CAACM,KAAb,CAAmB,CAAnB,EAAsB,CAAC,CAAvB,EAA0BC,OAA1B,CAAkC,UAACC,iBAAD,EAAoBC,KAApB,EAA8B;AAC9DD,IAAAA,iBAAiB,CAACnB,EAAlB,0BAAuCoB,KAAK,GAAG,CAA/C;AACD,GAFD;AAGAT,EAAAA,YAAY,CAACA,YAAY,CAACI,MAAb,GAAsB,CAAvB,CAAZ,CAAsCf,EAAtC,GAA2C,MAA3C;AACAW,EAAAA,YAAY,CAACA,YAAY,CAACI,MAAb,GAAsB,CAAvB,CAAZ,CAAsCf,EAAtC,GAA2C,OAA3C;AAEA,mEAAuBM,IAAvB,cAA+BC,MAA/B,GAAyCZ,eAAe,CAACC,MAAD,CAAxD;AAEA,SAAO;AACLA,IAAAA,MAAM,EAANA,MADK;AAELyB,IAAAA,qBAAqB,EAAE,sCAAuC;AAAA,UAApCC,YAAoC,SAApCA,YAAoC;AAAA,UAAtBC,eAAsB,SAAtBA,eAAsB;AAC5D,aAAOd,mBAAmB,CAAC;AAAEa,QAAAA,YAAY,EAAZA,YAAF;AAAgBC,QAAAA,eAAe,EAAfA;AAAhB,OAAD,CAAnB,CAAuDvB,EAA9D;AACD,KAJI;AAKLwB,IAAAA,qBAAqB,EAAE,+BAACC,OAAD,EAAa;AAClC,aAAO7B,MAAM,CAAC8B,IAAP,CAAY,UAAC3B,KAAD,EAAW;AAC5B,eAAOA,KAAK,CAACC,EAAN,KAAayB,OAApB;AACD,OAFM,EAEJE,OAFH;AAGD;AATI,GAAP;AAWD,CA7BM",
  "sourcesContent": [
    "import {\n  createGetGroupForPlatform,\n  writeFileFromString,\n} from \"@dmail/project-structure-compile-babel\"\n\nconst stringifyGroups = (groups) => {\n  const lightGroups = groups.map((group) => {\n    return {\n      id: group.id,\n      pluginNames: group.pluginNames,\n      compatMap: group.compatMap,\n    }\n  })\n\n  return JSON.stringify(lightGroups, null, \"  \")\n}\n\nexport const buildGroup = ({ root, config = \"group.config.json\" }) => {\n  const { getGroupForPlatform, getAllGroup } = createGetGroupForPlatform({\n    moduleOutput: \"systemjs\",\n  })\n\n  const groups = getAllGroup()\n  debugger\n  const sortedGroups = groups.sort((a, b) => a.pluginNames.length - b.pluginNames.length).reverse()\n\n  sortedGroups[0].id = \"worst\"\n  sortedGroups.slice(1, -1).forEach((intermediateGroup, index) => {\n    intermediateGroup.id = `intermediate-${index + 1}`\n  })\n  sortedGroups[sortedGroups.length - 2].id = \"best\"\n  sortedGroups[sortedGroups.length - 1].id = \"ideal\"\n\n  writeFileFromString(`${root}/${config}`, stringifyGroups(groups))\n\n  return {\n    groups,\n    getGroupIdForPlatform: ({ platformName, platformVersion }) => {\n      return getGroupForPlatform({ platformName, platformVersion }).id\n    },\n    getPluginsFromGroupId: (groupId) => {\n      return groups.find((group) => {\n        return group.id === groupId\n      }).plugins\n    },\n  }\n}\n"
  ]
}