{"version":3,"sources":["../../../src/createCompileService/createCompileService.js"],"names":["compareBranch","branchA","branchB","lastMatchDiff","lastMatchMs","matchCount","getInputRelativeLocation","abstractFolderRelativeLocation","filename","slice","length","getCacheFolderLocation","rootLocation","cacheFolderRelativeLocation","rest","getCacheDataLocation","param","getBranchRelativeLocation","branch","name","getOutputRelativeLocation","basename","getBranchLocation","getOutputLocation","getOutputAssetLocation","asset","readBranchMain","inputLocation","inputETagClient","cache","location","then","content","inputETag","Promise","resolve","status","inputETagCached","outputLocation","errorHandler","error","output","moreData","input","readBranchAsset","outputAssetLocation","actual","expected","eTag","inputRelativeLocation","readBranch","all","outputAssets","map","outputAsset","mainData","assetsData","computedStatus","invalidAsset","find","assetData","getSourceAbstractLocation","getSourceMapLocation","outputRelativeLocation","outputSourceMapName","dirname","sourceMapKnowsExactLocation","getSourceMapAbstractpLocation","getFileBranch","compile","cacheDataLocation","branches","JSON","parse","Error","inputSource","getSourceNameForSourceMap","getSourceLocationForSourceMap","context","sourceMapUseAbsoluteLocation","sourceLocation","sourceMapLocation","sourceLocationRelativeToSourceMapLocation","relative","options","generate","branchIsValid","stringify","outputMeta","cachedBranch","getFileReport","updateBranch","cacheAutoClean","cacheTrackHit","isCached","isNew","isUpdated","promises","mainLocation","push","string","assetLocation","branchesToRemove","index","indexOf","splice","forEach","branchLocation","console","log","updatedBranches","branchToUpdate","Number","Date","now","lastModifiedMs","createdMs","sort","updatedCache","undefined","getFileCompiled","cacheEnabled","fileLock","chain","createCompileService","fileService","service","method","url","headers","pathname","endsWith","script","scriptCompiledFolder","search","reason","reject","has","get","Etag","Buffer","byteLength","body","compileFile","relativeLocation"],"mappings":";;;;;;;;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;;;;;;;6NAjBA;;;AAmBA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,OAAV,EAAsB;AAC1C,MAAMC,gBAAgBF,QAAQG,WAAR,GAAsBF,QAAQE,WAApD;;AAEA,MAAID,kBAAkB,CAAtB,EAAyB;AACvB,WAAOF,QAAQI,UAAR,GAAqBH,QAAQG,UAApC;AACD;AACD,SAAOF,aAAP;AACD,CAPD;;AASA,IAAMG,2BAA2B,SAA3BA,wBAA2B,OAAkD;AAAA,MAA/CC,8BAA+C,QAA/CA,8BAA+C;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACjF;AACA,SAAOA,SAASC,KAAT,CAAeF,+BAA+BG,MAA/B,GAAwC,CAAvD,CAAP;AACD,CAHD;;AAKA,IAAMC,yBAAyB,SAAzBA,sBAAyB,QAA4D;AAAA,MAAzDC,YAAyD,SAAzDA,YAAyD;AAAA,MAA3CC,2BAA2C,SAA3CA,2BAA2C;AAAA,MAAXC,IAAW;;AACzF,SAAO,0BAAYF,YAAZ,EAA0BC,2BAA1B,EAAuDP,yBAAyBQ,IAAzB,CAAvD,CAAP;AACD,CAFD;;AAIA,IAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AACtC,SAAO,0BAAYL,uBAAuBK,KAAvB,CAAZ,mBAAP;AACD,CAFD;;AAIA,IAAMC,4BAA4B,SAA5BA,yBAA4B,QAAsD;AAAA,MAAnDJ,2BAAmD,SAAnDA,2BAAmD;AAAA,MAAtBK,MAAsB,SAAtBA,MAAsB;AAAA,MAAXJ,IAAW;;AACtF,SAAO,0BAAYD,2BAAZ,EAAyCP,yBAAyBQ,IAAzB,CAAzC,EAAyEI,OAAOC,IAAhF,CAAP;AACD,CAFD;;AAIA,IAAMC,4BAA4B,SAA5BA,yBAA4B,QAA2B;AAAA,MAAxBZ,QAAwB,SAAxBA,QAAwB;AAAA,MAAXM,IAAW;;AAC3D,SAAO,0BAAYG,qCAA4BT,kBAA5B,IAAyCM,IAAzC,EAAZ,EAA8D,kBAAKO,QAAL,CAAcb,QAAd,CAA9D,CAAP;AACD,CAFD;;AAIA,IAAMc,oBAAoB,SAApBA,iBAAoB,QAA+B;AAAA,MAA5BV,YAA4B,SAA5BA,YAA4B;AAAA,MAAXE,IAAW;;AACvD,SAAO,0BAAYF,YAAZ,EAA0BK,0BAA0BH,IAA1B,CAA1B,CAAP;AACD,CAFD;;AAIA,IAAMS,oBAAoB,SAApBA,iBAAoB,QAA+B;AAAA,MAA5BX,YAA4B,SAA5BA,YAA4B;AAAA,MAAXE,IAAW;;AACvD,SAAO,0BAAYF,YAAZ,EAA0BQ,0BAA0BN,IAA1B,CAA1B,CAAP;AACD,CAFD;;AAIA,IAAMU,yBAAyB,SAAzBA,sBAAyB,QAAwB;AAAA,MAArBC,KAAqB,SAArBA,KAAqB;AAAA,MAAXX,IAAW;;AACrD,SAAO,0BAAYQ,kBAAkBR,IAAlB,CAAZ,EAAqCW,MAAMN,IAA3C,CAAP;AACD,CAFD;;AAIA,IAAMO,iBAAiB,SAAjBA,cAAiB,QASjB;AAAA,MARJd,YAQI,SARJA,YAQI;AAAA,MAPJC,2BAOI,SAPJA,2BAOI;AAAA,MANJN,8BAMI,SANJA,8BAMI;AAAA,MALJC,QAKI,SALJA,QAKI;AAAA,MAJJmB,aAII,SAJJA,aAII;AAAA,MAHJC,eAGI,SAHJA,eAGI;AAAA,MAFJC,KAEI,SAFJA,KAEI;AAAA,MADJX,MACI,SADJA,MACI;;AACJ,SAAO,wBAAS,EAAEY,UAAUH,aAAZ,EAAT,EAAsCI,IAAtC,CAA2C,iBAAiB;AAAA,QAAdC,OAAc,SAAdA,OAAc;;AACjE,QAAMC,YAAY,yBAAWD,OAAX,CAAlB;;AAEA,WAAOE,QAAQC,OAAR,GACJJ,IADI,CACC,YAAM;AACV;AACA,UAAIH,eAAJ,EAAqB;AACnB,YAAIK,cAAcL,eAAlB,EAAmC;AACjC,iBAAO;AACLQ,0CAA4BT,aAA5B,mCADK;AAELC;AAFK,WAAP;AAID;AACD,eAAO,EAAEQ,QAAQ,OAAV,EAAP;AACD;;AAED,UAAMC,kBAAkBR,MAAMI,SAA9B;AACA,UAAIA,cAAcI,eAAlB,EAAmC;AACjC,eAAO;AACLD,wCAA4BT,aAA5B,uCADK;AAELU;AAFK,SAAP;AAID;;AAED,UAAMC,iBAAiBf,kBAAkB;AACvCX,kCADuC;AAEvCC,gEAFuC;AAGvCN,sEAHuC;AAIvCC,0BAJuC;AAKvCU;AALuC,OAAlB,CAAvB;AAOA,aAAO,wBAAS;AACdY,kBAAUQ,cADI;AAEdC;AAFc,OAAT,EAGJR,IAHI,CAGC,kBAAwB;AAAA,YAArBC,OAAqB,UAArBA,OAAqB;AAAA,YAAZQ,KAAY,UAAZA,KAAY;;AAC9B,YAAIA,KAAJ,EAAW;AACT,iBAAO;AACLJ,4CAA8BE;AADzB,WAAP;AAGD;AACD,eAAO,EAAEF,QAAQ,OAAV,EAAmBK,QAAQT,OAA3B,EAAP;AACD,OAVM,CAAP;AAWD,KAvCI,EAwCJD,IAxCI,CAwCC,UAACW,QAAD,EAAc;AAClB;AACEC,eAAOX,OADT;AAEEC;AAFF,SAGKS,QAHL;AAKD,KA9CI,CAAP;AA+CD,GAlDM,CAAP;AAmDD,CA7DD;;AA+DA,IAAME,kBAAkB,SAAlBA,eAAkB,SAQlB;AAAA,MAPJhC,YAOI,UAPJA,YAOI;AAAA,MANJC,2BAMI,UANJA,2BAMI;AAAA,MALJN,8BAKI,UALJA,8BAKI;AAAA,MAJJC,QAII,UAJJA,QAII;AAAA,MAHJqB,KAGI,UAHJA,KAGI;AAAA,MAFJX,MAEI,UAFJA,MAEI;AAAA,MADJO,KACI,UADJA,KACI;;AACJ,MAAMoB,sBAAsBrB,uBAAuB;AACjDZ,8BADiD;AAEjDC,4DAFiD;AAGjDN,kEAHiD;AAIjDC,sBAJiD;AAKjDU,kBALiD;AAMjDO;AANiD,GAAvB,CAA5B;AAQA,MAAMN,OAAOM,MAAMN,IAAnB;;AAEA,SAAO,wBAAS;AACdW,cAAUe,mBADI;AAEdN;AAFc,GAAT,EAGJR,IAHI,CAGC,kBAAwB;AAAA,QAArBC,OAAqB,UAArBA,OAAqB;AAAA,QAAZQ,KAAY,UAAZA,KAAY;;AAC9B,QAAIA,KAAJ,EAAW;AACT,aAAO;AACLJ,0CAAgCS,mBAD3B;AAEL1B;AAFK,OAAP;AAID;;AAED,QAAM2B,SAAS,yBAAWd,OAAX,CAAf;AACA,QAAMe,WAAWtB,MAAMuB,IAAvB;AACA,QAAIF,WAAWC,QAAf,EAAyB;AACvB,aAAO;AACLX,gCAAsBX,MAAMN,IAA5B,mBACEU,MAAMoB,qBADR,sBADK;AAIL9B,kBAJK;AAKLa;AALK,OAAP;AAOD;AACD,WAAO;AACLI,cAAQ,OADH;AAELjB,gBAFK;AAGLa;AAHK,KAAP;AAKD,GA3BM,CAAP;AA4BD,CA/CD;;AAiDA,IAAMkB,aAAa,SAAbA,UAAa,SASb;AAAA,MARJtC,YAQI,UARJA,YAQI;AAAA,MAPJC,2BAOI,UAPJA,2BAOI;AAAA,MANJN,8BAMI,UANJA,8BAMI;AAAA,MALJC,QAKI,UALJA,QAKI;AAAA,MAJJmB,aAII,UAJJA,aAII;AAAA,MAHJC,eAGI,UAHJA,eAGI;AAAA,MAFJC,KAEI,UAFJA,KAEI;AAAA,MADJX,MACI,UADJA,MACI;;AACJ,SAAOgB,QAAQiB,GAAR,EACLzB,eAAe;AACbd,8BADa;AAEbC,4DAFa;AAGbN,kEAHa;AAIbC,sBAJa;AAKbmB,gCALa;AAMbC,oCANa;AAObC,gBAPa;AAQbX;AARa,GAAf,CADK,4BAWFA,OAAOkC,YAAP,CAAoBC,GAApB,CAAwB,UAACC,WAAD,EAAiB;AAC1C,WAAOV,gBAAgB;AACrBhC,gCADqB;AAErBC,8DAFqB;AAGrBN,oEAHqB;AAIrBC,wBAJqB;AAKrBqB,kBALqB;AAMrBX,oBANqB;AAOrBO,aAAO6B;AAPc,KAAhB,CAAP;AASD,GAVE,CAXE,IAsBJvB,IAtBI,CAsBC,kBAA+B;AAAA;AAAA,QAA7BwB,QAA6B;AAAA,QAAhBC,UAAgB;;AAAA,QAC7BpB,MAD6B,GACQmB,QADR,CAC7BnB,MAD6B;AAAA,QACrBO,KADqB,GACQY,QADR,CACrBZ,KADqB;AAAA,QACdV,SADc,GACQsB,QADR,CACdtB,SADc;AAAA,QACHQ,MADG,GACQc,QADR,CACHd,MADG;;;AAGrC,QAAIgB,uBAAJ;AACA,QAAIrB,WAAW,OAAf,EAAwB;AACtB,UAAMsB,eAAeF,WAAWG,IAAX,CAAgB,UAACC,SAAD;AAAA,eAAeA,UAAUxB,MAAV,KAAqB,OAApC;AAAA,OAAhB,CAArB;AACAqB,uBAAiBC,eAAeA,aAAatB,MAA5B,GAAqC,OAAtD;AACD,KAHD,MAGO;AACLqB,uBAAiBrB,MAAjB;AACD;;AAED,WAAO;AACLA,cAAQqB,cADH;AAELd,kBAFK;AAGLV,0BAHK;AAILQ,oBAJK;AAKLW,oBAAcI;AALT,KAAP;AAOD,GAxCM,CAAP;AAyCD,CAnDD;;AAqDA,IAAMK,4BAA4B,SAA5BA,yBAA4B;AAAA,MAAGjD,YAAH,UAAGA,YAAH;AAAA,MAAiBqC,qBAAjB,UAAiBA,qBAAjB;AAAA,SAChC,0BAAYrC,YAAZ,EAA0BqC,qBAA1B,CADgC;AAAA,CAAlC;;AAGA,IAAMa,uBAAuB,SAAvBA,oBAAuB;AAAA,MAAGlD,YAAH,UAAGA,YAAH;AAAA,MAAiBmD,sBAAjB,UAAiBA,sBAAjB;AAAA,MAAyCC,mBAAzC,UAAyCA,mBAAzC;AAAA,SAC3B,0BAAYpD,YAAZ,EAA0B,kBAAKqD,OAAL,CAAaF,sBAAb,CAA1B,EAAgEC,mBAAhE,CAD2B;AAAA,CAA7B;;AAGA,IAAME,8BAA8B,KAApC;;AAEA,IAAMC,gCAAgC,SAAhCA,6BAAgC;AAAA,MACpCvD,YADoC,UACpCA,YADoC;AAAA,MAEpCL,8BAFoC,UAEpCA,8BAFoC;AAAA,MAGpC0C,qBAHoC,UAGpCA,qBAHoC;AAAA,MAIpCe,mBAJoC,UAIpCA,mBAJoC;AAAA,SAMpC,0BACEpD,YADF,EAEEL,8BAFF,EAGE,kBAAK0D,OAAL,CAAahB,qBAAb,CAHF,EAIEe,mBAJF,CANoC;AAAA,CAAtC;;AAaA,IAAMI,gBAAgB,SAAhBA,aAAgB,SAMhB;AAAA,MALJxD,YAKI,UALJA,YAKI;AAAA,MAJJC,2BAII,UAJJA,2BAII;AAAA,MAHJN,8BAGI,UAHJA,8BAGI;AAAA,MAFJC,QAEI,UAFJA,QAEI;AAAA,MADJ6D,OACI,UADJA,OACI;;AACJ,MAAMpB,wBAAwB3C,yBAAyB;AACrDC,kEADqD;AAErDC;AAFqD,GAAzB,CAA9B;;AAKA,MAAM8D,oBAAoBvD,qBAAqB;AAC7CH,8BAD6C;AAE7CC,4DAF6C;AAG7CN,kEAH6C;AAI7CC;AAJ6C,GAArB,CAA1B;;AAOA,SAAO0B,QAAQiB,GAAR,CAAY,CACjB,4BAAWF,qBAAX,EAAkCrC,YAAlC,CADiB,EAEjB,wBAAS;AACPkB,cAAUwC,iBADH;AAEP/B;AAFO,GAAT,EAGGR,IAHH,CAGQ,kBAAwB;AAAA,QAArBC,OAAqB,UAArBA,OAAqB;AAAA,QAAZQ,KAAY,UAAZA,KAAY;;AAC9B,QAAIA,KAAJ,EAAW;AACT,aAAO;AACL+B,kBAAU;AADL,OAAP;AAGD;AACD,QAAM1C,QAAQ2C,KAAKC,KAAL,CAAWzC,OAAX,CAAd;AACA,QAAIH,MAAMoB,qBAAN,KAAgCA,qBAApC,EAA2D;AACzD,YAAM,IAAIyB,KAAJ,sEAEF7C,MAAMoB,qBAFJ,qBAGYA,qBAHZ,CAAN;AAKD;AACD,WAAOpB,KAAP;AACD,GAlBD,CAFiB,CAAZ,EAsBJE,IAtBI,CAsBC,kBAA4B;AAAA;AAAA,QAA1BJ,aAA0B;AAAA,QAAXE,KAAW;;AAChC,WAAO;AACLF,kCADK;AAELE;AAFK,KAAP;AAID,GA3BI,EA4BJE,IA5BI,CA4BC,kBAA8B;AAAA,QAA3BJ,aAA2B,UAA3BA,aAA2B;AAAA,QAAZE,KAAY,UAAZA,KAAY;;AAClC;AACA;AACA;AACA,WAAO,wBAAS;AACdC,gBAAUH;AADI,KAAT,EAEJI,IAFI,CAEC,kBAAiB;AAAA,UAAdC,OAAc,UAAdA,OAAc;;AACvB,aAAOqC,QAAQ;AACbzD,kCADa;AAEbL,sEAFa;AAGb0C,oDAHa;AAIb0B,qBAAa3C,OAJA;AAKbxB,0BALa;AAMboE,mCAA2B,qCAAM;AAC/B,iBAAOpE,QAAP;AACD,SARY;AASbqE,uCAA+B,uCAACC,OAAD,EAAa;AAC1C,cAAMC,+BAA+B,IAArC;;AAEA,cAAIA,4BAAJ,EAAkC;AAChC,yBAAWD,QAAQ7B,qBAAnB;AACD;;AAED,cAAM+B,iBAAiBnB,0BAA0BiB,OAA1B,CAAvB;AACA,cAAMG,oBAAoBf,8BACtBJ,qBAAqBgB,OAArB,CADsB,GAEtBX,8BAA8BW,OAA9B,CAFJ;AAGA,cAAMI,4CAA4C,kCAChD,kBAAKC,QAAL,CAAc,kBAAKlB,OAAL,CAAagB,iBAAb,CAAd,EAA+CD,cAA/C,CADgD,CAAlD;;AAIA,iBAAOE,yCAAP;AACD;AAzBY,OAAR,EA0BJnD,IA1BI,CA0BC,kBAA2B;AAAA,YAAxBqD,OAAwB,UAAxBA,OAAwB;AAAA,YAAfC,QAAe,UAAfA,QAAe;;AACjC,YAAMC,gBAAgB,SAAhBA,aAAgB,CAACpE,MAAD,EAAY;AAChC,iBAAOsD,KAAKe,SAAL,CAAerE,OAAOsE,UAAtB,MAAsChB,KAAKe,SAAL,CAAeH,OAAf,CAA7C;AACD,SAFD;;AAIA,YAAMK,eAAe5D,MAAM0C,QAAN,CAAeZ,IAAf,CAAoB,UAACzC,MAAD;AAAA,iBAAYoE,cAAcpE,MAAd,CAAZ;AAAA,SAApB,CAArB;;AAEA,eAAO;AACLS,sCADK;AAELE,sBAFK;AAGLuD,0BAHK;AAILC,4BAJK;AAKL1C,iBAAOX,OALF;AAMLd,kBAAQuE;AANH,SAAP;AAQD,OAzCM,CAAP;AA0CD,KA7CM,CAAP;AA8CD,GA9EI,CAAP;AA+ED,CAlGD;;AAoGA,IAAMC,gBAAgB,SAAhBA,aAAgB,SAOhB;AAAA,MANJ9E,YAMI,UANJA,YAMI;AAAA,MALJC,2BAKI,UALJA,2BAKI;AAAA,MAJJN,8BAII,UAJJA,8BAII;AAAA,MAHJC,QAGI,UAHJA,QAGI;AAAA,qCAFJoB,eAEI;AAAA,MAFJA,eAEI,yCAFc,IAEd;AAAA,MADJyC,OACI,UADJA,OACI;;AACJ,SAAOD,cAAc;AACnBxD,8BADmB;AAEnBC,4DAFmB;AAGnBN,kEAHmB;AAInBC,sBAJmB;AAKnB6D;AALmB,GAAd,EAMJtC,IANI,CAMC,kBAAgE;AAAA,QAA7DJ,aAA6D,UAA7DA,aAA6D;AAAA,QAA9CE,KAA8C,UAA9CA,KAA8C;AAAA,QAAvCuD,OAAuC,UAAvCA,OAAuC;AAAA,QAA9BC,QAA8B,UAA9BA,QAA8B;AAAA,QAApB1C,KAAoB,UAApBA,KAAoB;AAAA,QAAbzB,MAAa,UAAbA,MAAa;;AACtE,QAAI,CAACA,MAAL,EAAa;AACX,aAAO;AACLS,oCADK;AAELS,gBAAQ,SAFH;AAGLP,oBAHK;AAILuD,wBAJK;AAKLC,0BALK;AAMLnE,gBAAQ;AACNC,gBAAM;AADA,SANH;AASLwB;AATK,OAAP;AAWD;;AAED,WAAOO,WAAW;AAChBtC,gCADgB;AAEhBC,8DAFgB;AAGhBN,oEAHgB;AAIhBC,wBAJgB;AAKhBmB,kCALgB;AAMhBC,sCANgB;AAOhBC,kBAPgB;AAQhBX;AARgB,KAAX,EASJa,IATI,CASC,kBAA6C;AAAA,UAA1CK,MAA0C,UAA1CA,MAA0C;AAAA,UAAlCO,KAAkC,UAAlCA,KAAkC;AAAA,UAA3BF,MAA2B,UAA3BA,MAA2B;AAAA,UAAnBW,YAAmB,UAAnBA,YAAmB;;AACnD,aAAO;AACLzB,oCADK;AAELS,sBAFK;AAGLP,oBAHK;AAILuD,wBAJK;AAKLC,0BALK;AAMLnE,sBANK;AAOLyB,oBAPK;AAQLF,sBARK;AASLW;AATK,OAAP;AAWD,KArBM,CAAP;AAsBD,GA3CM,CAAP;AA4CD,CApDD;;AAsDA,IAAMuC,eAAe,SAAfA,YAAe,SAef;AAAA,MAdJ/E,YAcI,UAdJA,YAcI;AAAA,MAbJC,2BAaI,UAbJA,2BAaI;AAAA,MAZJN,8BAYI,UAZJA,8BAYI;AAAA,MAXJC,QAWI,UAXJA,QAWI;AAAA,MAVJmB,aAUI,UAVJA,aAUI;AAAA,MATJS,MASI,UATJA,MASI;AAAA,MARJP,KAQI,UARJA,KAQI;AAAA,MAPJuD,OAOI,UAPJA,OAOI;AAAA,MANJlE,MAMI,UANJA,MAMI;AAAA,MALJe,SAKI,UALJA,SAKI;AAAA,MAJJQ,MAII,UAJJA,MAII;AAAA,MAHJW,YAGI,UAHJA,YAGI;AAAA,MAFJwC,cAEI,UAFJA,cAEI;AAAA,MADJC,aACI,UADJA,aACI;AAAA,MACItB,QADJ,GACiB1C,KADjB,CACI0C,QADJ;;AAEJ,MAAMuB,WAAW1D,WAAW,QAA5B;AACA,MAAM2D,QAAQ3D,WAAW,SAAzB;AACA,MAAM4D,YAAY5D,WAAW,SAA7B;;AAEA,MAAM6D,WAAW,EAAjB;;AAEA,MAAIF,SAASC,SAAb,EAAwB;AACtB,QAAME,eAAe3E,kBAAkB;AACrCX,gCADqC;AAErCC,8DAFqC;AAGrCN,oEAHqC;AAIrCC,wBAJqC;AAKrCU;AALqC,KAAlB,CAArB;;AAQA+E,aAASE,IAAT,kBACE,0BAAU;AACRrE,gBAAUoE,YADF;AAERE,cAAQ3D;AAFA,KAAV,CADF,4BAKKW,aAAaC,GAAb,CAAiB,UAAC5B,KAAD,EAAW;AAC7B,UAAM4E,gBAAgB7E,uBAAuB;AAC3CZ,kCAD2C;AAE3CC,gEAF2C;AAG3CN,sEAH2C;AAI3CC,0BAJ2C;AAK3CU,sBAL2C;AAM3CO;AAN2C,OAAvB,CAAtB;;AASA,aAAO,0BAAU;AACfK,kBAAUuE,aADK;AAEfD,gBAAQ3E,MAAMO;AAFC,OAAV,CAAP;AAID,KAdE,CALL;AAqBD;;AAED,MAAI+D,SAASC,SAAT,IAAuBF,YAAYD,aAAvC,EAAuD;AACrD,QAAID,cAAJ,EAAoB;AAClB,UAAI3D,cAAcJ,MAAMI,SAAxB,EAAmC;AACjC,YAAMqE,mBAAmB/B,SAAS9D,KAAT,EAAzB;;AAEA;AACA,YAAM8F,QAAQD,iBAAiBE,OAAjB,CAAyBtF,MAAzB,CAAd;AACAoF,yBAAiBG,MAAjB,CAAwBF,KAAxB,EAA+B,CAA/B;;AAEAhC,iBAAS7D,MAAT,GAAkB,CAAlB;AACA4F,yBAAiBI,OAAjB,CAAyB,UAACxF,MAAD,EAAY;AACnC,cAAMyF,iBAAiBrF,kBAAkB;AACvCV,sCADuC;AAEvCC,oEAFuC;AAGvCN,0EAHuC;AAIvCC,8BAJuC;AAKvCU;AALuC,WAAlB,CAAvB;AAOA0F,kBAAQC,GAAR,2BAAoCF,cAApC;AACA;AACA,yCAAiBA,cAAjB;AACD,SAXD;AAYD;AACF;;AAED,QAAIZ,KAAJ,EAAW;AACTxB,eAAS4B,IAAT,CAAcjF,MAAd;AACD;;AAED,QAAM4F,kBAAkBvC,SACrBlB,GADqB,CACjB,UAAC0D,cAAD,EAAoB;AACvB,UAAIA,eAAe5F,IAAf,KAAwBD,OAAOC,IAAnC,EAAyC;AACvC,4BAAY4F,cAAZ;AACD;AACD,UAAIjB,QAAJ,EAAc;AACZ,4BACKiB,cADL;AAEE1G,sBAAYa,OAAOb,UAAP,GAAoB,CAFlC;AAGED,uBAAa4G,OAAOC,KAAKC,GAAL,EAAP;AAHf;AAKD;AACD,UAAIlB,SAAJ,EAAe;AACb,4BACKe,cADL;AAEE1G,sBAAYa,OAAOb,UAAP,GAAoB,CAFlC;AAGED,uBAAa4G,OAAOC,KAAKC,GAAL,EAAP,CAHf;AAIEC,0BAAgBH,OAAOC,KAAKC,GAAL,EAAP,CAJlB;AAKE9D,wBAAcA,aAAaC,GAAb,CAAiB,kBAAuB;AAAA,gBAApBlC,IAAoB,UAApBA,IAAoB;AAAA,gBAAda,OAAc,UAAdA,OAAc;;AACpD,mBAAO,EAAEb,UAAF,EAAQ6B,MAAM,yBAAWhB,OAAX,CAAd,EAAP;AACD,WAFa;AALhB;AASD;AACD;AACA,aAAO;AACLb,cAAMD,OAAOC,IADR;AAELd,oBAAY,CAFP;AAGL+G,mBAAWJ,OAAOC,KAAKC,GAAL,EAAP,CAHN;AAILC,wBAAgBH,OAAOC,KAAKC,GAAL,EAAP,CAJX;AAKL9G,qBAAa4G,OAAOC,KAAKC,GAAL,EAAP,CALR;AAML1B,oBAAYJ,OANP;AAOLhC,sBAAcA,aAAaC,GAAb,CAAiB,kBAAuB;AAAA,cAApBlC,IAAoB,UAApBA,IAAoB;AAAA,cAAda,OAAc,UAAdA,OAAc;;AACpD,iBAAO,EAAEb,UAAF,EAAQ6B,MAAM,yBAAWhB,OAAX,CAAd,EAAP;AACD,SAFa;AAPT,OAAP;AAWD,KAnCqB,EAoCrBqF,IApCqB,CAoChBrH,aApCgB,CAAxB;;AAsCA,QAAMiD,wBAAwB3C,yBAAyB;AACrDC,oEADqD;AAErDC;AAFqD,KAAzB,CAA9B;;AAKA,QAAM8G,eAAe;AACnBrE,kDADmB;AAEnBhB,iBAAW6D,WAAWjE,MAAMI,SAAjB,GAA6BA,SAFrB;AAGnBN,qBACEA,kBAAkB,0BAAYf,YAAZ,EAA0BqC,qBAA1B,CAAlB,GACIsE,SADJ,GAEI5F,aANa;AAOnB4C,gBAAUuC;AAPS,KAArB;;AAUA,QAAMxC,oBAAoBvD,qBAAqB;AAC7CH,gCAD6C;AAE7CC,8DAF6C;AAG7CN,oEAH6C;AAI7CC;AAJ6C,KAArB,CAA1B;;AAOAyF,aAASE,IAAT,CACE,0BAAU;AACRrE,gBAAUwC,iBADF;AAER8B,cAAQ5B,KAAKe,SAAL,CAAe+B,YAAf,EAA6B,IAA7B,EAAmC,IAAnC;AAFA,KAAV,CADF;AAMD;;AAED,SAAOpF,QAAQiB,GAAR,CAAY8C,QAAZ,CAAP;AACD,CAzJD;;AA2JA,IAAMuB,kBAAkB,SAAlBA,eAAkB,SAUlB;AAAA,MATJ5G,YASI,UATJA,YASI;AAAA,MARJC,2BAQI,UARJA,2BAQI;AAAA,MAPJN,8BAOI,UAPJA,8BAOI;AAAA,MANJC,QAMI,UANJA,QAMI;AAAA,MALJ6D,OAKI,UALJA,OAKI;AAAA,MAJJzC,eAII,UAJJA,eAII;AAAA,MAHJ6F,YAGI,UAHJA,YAGI;AAAA,MAFJ7B,cAEI,UAFJA,cAEI;AAAA,MADJC,aACI,UADJA,aACI;;AACJ,MAAM6B,WAAW,yCACf3G,qBAAqB;AACnBH,8BADmB;AAEnBC,4DAFmB;AAGnBN,kEAHmB;AAInBC;AAJmB,GAArB,CADe,CAAjB;;AASA,SAAOkH,SAASC,KAAT,CAAe,YAAM;AAC1B,WAAOjC,cAAc;AACnB9E,gCADmB;AAEnBC,8DAFmB;AAGnBN,oEAHmB;AAInBC,wBAJmB;AAKnB6D,sBALmB;AAMnBzC;AANmB,KAAd,EAQJG,IARI,CASH,kBAWM;AAAA,UAVJJ,aAUI,UAVJA,aAUI;AAAA,UATJS,MASI,UATJA,MASI;AAAA,UARJP,KAQI,UARJA,KAQI;AAAA,UAPJuD,OAOI,UAPJA,OAOI;AAAA,UANJC,QAMI,UANJA,QAMI;AAAA,UALJnE,MAKI,UALJA,MAKI;AAAA,UAJJyB,KAII,UAJJA,KAII;AAAA,UAHJV,SAGI,UAHJA,SAGI;AAAA,UAFJQ,MAEI,UAFJA,MAEI;AAAA,UADJW,YACI,UADJA,YACI;;AACJ,UAAIqE,iBAAiB,KAArB,EAA4B;AAC1BrF,iBAAS,SAAT;AACD;;AAED,UAAM2B,yBAAyB3C,0BAA0B;AACvDP,gEADuD;AAEvDN,sEAFuD;AAGvDC,0BAHuD;AAIvDU;AAJuD,OAA1B,CAA/B;;AAOA,UAAIkB,WAAW,OAAf,EAAwB;AACtB,eAAO;AACLT,sCADK;AAELS,kBAAQ,QAFH;AAGLP,sBAHK;AAILuD,0BAJK;AAKLlE,wBALK;AAMLyB,sBANK;AAOLV,8BAPK;AAQL8B,wDARK;AASLtB,wBATK;AAULW;AAVK,SAAP;AAYD;;AAED,aAAOlB,QAAQC,OAAR,CAAgBkD,SAAS,EAAEtB,8CAAF,EAAT,CAAhB,EAAsDhC,IAAtD,CACL,kBAA8B;AAAA,YAA3BU,MAA2B,UAA3BA,MAA2B;AAAA,YAAnBW,YAAmB,UAAnBA,YAAmB;;AAC5B,eAAO;AACLzB,sCADK;AAELS,kBAAQA,WAAW,SAAX,GAAuB,SAAvB,GAAmC,SAFtC;AAGLP,sBAHK;AAILuD,0BAJK;AAKLlE,wBALK;AAMLyB,sBANK;AAOLV,qBAAW,yBAAWU,KAAX,CAPN;AAQLoB,wDARK;AASLtB,wBATK;AAULW;AAVK,SAAP;AAYD,OAdI,CAAP;AAgBD,KA/DE,EAiEJrB,IAjEI,CAkEH,kBAWM;AAAA,UAVJJ,aAUI,UAVJA,aAUI;AAAA,UATJS,MASI,UATJA,MASI;AAAA,UARJP,KAQI,UARJA,KAQI;AAAA,UAPJuD,OAOI,UAPJA,OAOI;AAAA,UANJlE,MAMI,UANJA,MAMI;AAAA,UALJyB,KAKI,UALJA,KAKI;AAAA,UAJJV,SAII,UAJJA,SAII;AAAA,UAHJ8B,sBAGI,UAHJA,sBAGI;AAAA,UAFJtB,MAEI,UAFJA,MAEI;AAAA,UADJW,YACI,UADJA,YACI;;AACJ,aAAOuC,aAAa;AAClB/E,kCADkB;AAElBC,gEAFkB;AAGlBN,sEAHkB;AAIlBC,0BAJkB;AAKlBmB,oCALkB;AAMlBS,sBANkB;AAOlBP,oBAPkB;AAQlBuD,wBARkB;AASlBlE,sBATkB;AAUlByB,oBAVkB;AAWlBV,4BAXkB;AAYlBQ,sBAZkB;AAalBW,kCAbkB;AAclByC,oCAdkB;AAelBD;AAfkB,OAAb,EAgBJ7D,IAhBI,CAgBC,YAAM;AACZ,eAAO;AACLK,wBADK;AAELH,8BAFK;AAGLQ,wBAHK;AAILsB;AAJK,SAAP;AAMD,OAvBM,CAAP;AAwBD,KAtGE,CAAP;AAwGD,GAzGM,CAAP;AA0GD,CA9HD;;AAgIO,IAAM6D,sDAAuB,SAAvBA,oBAAuB,SAQ9B;AAAA,MAPJhH,YAOI,UAPJA,YAOI;AAAA,qCANJC,2BAMI;AAAA,MANJA,2BAMI,yCAN0B,OAM1B;AAAA,qCALJN,8BAKI;AAAA,MALJA,8BAKI,yCAL6B,UAK7B;AAAA,8BAJJ8D,OAII;AAAA,MAJJA,OAII,kCAJM,mCAIN;AAAA,mCAHJoD,YAGI;AAAA,MAHJA,YAGI,uCAHW,KAGX;AAAA,qCAFJ7B,cAEI;AAAA,MAFJA,cAEI,yCAFa,IAEb;AAAA,oCADJC,aACI;AAAA,MADJA,aACI,wCADY,KACZ;;AACJ,MAAMgC,cAAc,2CAApB;;AAEA,MAAMC,UAAU,SAAVA,OAAU,SAA8B;AAAA,QAA3BC,MAA2B,UAA3BA,MAA2B;AAAA,QAAnBC,GAAmB,UAAnBA,GAAmB;AAAA,QAAdC,OAAc,UAAdA,OAAc;;AAC5C,QAAMC,WAAWF,IAAIE,QAArB;AACA;AACA,QAAM1H,WAAW0H,SAASzH,KAAT,CAAe,CAAf,CAAjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAID,SAAS2H,QAAT,CAAkB,MAAlB,CAAJ,EAA+B;AAC7B,UAAMT,WAAW,yCACf3G,qBAAqB;AACnBH,kCADmB;AAEnBC,gEAFmB;AAGnBN,sEAHmB;AAInBC;AAJmB,OAArB,CADe,CAAjB;;AASA,aAAOkH,SAASC,KAAT,CAAe,YAAM;AAC1B,YAAMS,SAAS5H,SAASC,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAf,CAD0B,CACW;;AAErC;AACA;;AAEA,eAAO2D,cAAc;AACnBxD,oCADmB;AAEnBC,kEAFmB;AAGnBN,wEAHmB;AAInBC,oBAAU4H,MAJS;AAKnB/D;AALmB,SAAd,EAMJtC,IANI,CAOL,kBAAgB;AAAA,cAAbb,MAAa,UAAbA,MAAa;;AACd,cAAI,CAACA,MAAL,EAAa;AACX,mBAAO;AACLkB,sBAAQ;AADH,aAAP;AAGD;;AAED,cAAMiG,uBAAuB,0BAC3BzH,YAD2B,EAE3BK,0BAA0B;AACxBJ,oEADwB;AAExBN,0EAFwB;AAGxBC,sBAAU4H,MAHc;AAIxBlH;AAJwB,WAA1B,CAF2B,CAA7B;;AAUA,iBAAO2G,YAAY;AACjBE,0BADiB;AAEjBC,iBAAK,0BACQK,oBADR,SACgC,kBAAKhH,QAAL,CAAcb,QAAd,CADhC,GAC0DwH,IAAIM,MAD9D,CAFY;AAKjBL;AALiB,WAAZ,CAAP;AAOD,SA/BI,EAgCL,UAACzF,KAAD,EAAW;AACT,cAAIA,SAASA,MAAM+F,MAAN,KAAiB,gCAA9B,EAAgE;AAC9D,mBAAO;AACLnG,sBAAQ;AADH,aAAP;AAGD;AACD,iBAAOF,QAAQsG,MAAR,CAAehG,KAAf,CAAP;AACD,SAvCI,CAAP;AAyCD,OA/CM,CAAP;AAgDD;;AAED,WAAOgF,gBAAgB;AACrB5G,gCADqB;AAErBC,8DAFqB;AAGrBN,oEAHqB;AAIrBC,wBAJqB;AAKrB6D,sBALqB;AAMrBzC,uBAAiBqG,QAAQQ,GAAR,CAAY,eAAZ,IAA+BR,QAAQS,GAAR,CAAY,eAAZ,CAA/B,GAA8DnB,SAN1D;AAOrBE,gCAPqB;AAQrB7B,oCARqB;AASrBC;AATqB,KAAhB,EAUJ9D,IAVI,CAWL,kBAA2D;AAAA,UAAxDK,MAAwD,UAAxDA,MAAwD;AAAA,UAAhDH,SAAgD,UAAhDA,SAAgD;AAAA,UAArC8B,sBAAqC,UAArCA,sBAAqC;AAAA,UAAbtB,MAAa,UAAbA,MAAa;;AACzD;;AAEA;AACA;AACA;AACA,UAAIwF,QAAQQ,GAAR,CAAY,eAAZ,KAAgCrG,WAAW,QAA/C,EAAyD;AACvD,eAAO;AACLA,kBAAQ,GADH;AAEL6F,mBAAS;AACP,6BAAiB,UADV;AAEP,0BAAclE;AAFP;AAFJ,SAAP;AAOD;;AAED,aAAO;AACL3B,gBAAQ,GADH;AAEL6F,iBAAS;AACPU,gBAAM1G,SADC;AAEP,4BAAkB2G,OAAOC,UAAP,CAAkBpG,MAAlB,CAFX;AAGP,0BAAgB,wBAHT;AAIP,2BAAiB,UAJV;AAKP,wBAAcsB;AALP,SAFJ;AASL+E,cAAMrG;AATD,OAAP;AAWD,KAtCI,EAuCL,UAACD,KAAD,EAAW;AACT,UAAIA,SAASA,MAAM+F,MAAN,KAAiB,gCAA9B,EAAgE;AAC9D,eAAO;AACLnG,kBAAQ;AADH,SAAP;AAGD;AACD,aAAOF,QAAQsG,MAAR,CAAehG,KAAf,CAAP;AACD,KA9CI,CAAP;AAgDD,GA3HD;;AA6HA,MAAMuG,cAAc,SAAdA,WAAc,CAACC,gBAAD;AAAA,WAClBxB,gBAAgB;AACd5G,gCADc;AAEdC,8DAFc;AAGdN,oEAHc;AAIdC,gBAAaD,8BAAb,SAA+CyI,gBAJjC;AAKd3E,sBALc;AAMdoD,gCANc;AAOd7B,oCAPc;AAQdC;AARc,KAAhB,CADkB;AAAA,GAApB;;AAYA,SAAO,EAAEiC,gBAAF,EAAWiB,wBAAX,EAAP;AACD,CArJM","file":"createCompileService.js","sourcesContent":["/* eslint-disable import/max-dependencies */\nimport cuid from \"cuid\"\nimport path from \"path\"\nimport { URL } from \"url\"\nimport { createCompile } from \"../createCompile/createCompile.js\"\nimport { JSON_FILE } from \"./cache.js\"\nimport {\n  createETag,\n  isFileNotFoundError,\n  resolvePath,\n  removeFolderDeep,\n  normalizeSeparation,\n} from \"./helpers.js\"\nimport { locateFile } from \"./locateFile.js\"\nimport { readFile } from \"./readFile.js\"\nimport { lockForRessource } from \"./ressourceRegistry.js\"\nimport { writeFile } from \"./writeFile.js\"\nimport { createFileService } from \"../createFileService/createFileService.js\"\n\nconst compareBranch = (branchA, branchB) => {\n  const lastMatchDiff = branchA.lastMatchMs - branchB.lastMatchMs\n\n  if (lastMatchDiff === 0) {\n    return branchA.matchCount - branchB.matchCount\n  }\n  return lastMatchDiff\n}\n\nconst getInputRelativeLocation = ({ abstractFolderRelativeLocation, filename }) => {\n  // 'compiled/folder/file.js' -> 'folder/file.js'\n  return filename.slice(abstractFolderRelativeLocation.length + 1)\n}\n\nconst getCacheFolderLocation = ({ rootLocation, cacheFolderRelativeLocation, ...rest }) => {\n  return resolvePath(rootLocation, cacheFolderRelativeLocation, getInputRelativeLocation(rest))\n}\n\nconst getCacheDataLocation = (param) => {\n  return resolvePath(getCacheFolderLocation(param), JSON_FILE)\n}\n\nconst getBranchRelativeLocation = ({ cacheFolderRelativeLocation, branch, ...rest }) => {\n  return resolvePath(cacheFolderRelativeLocation, getInputRelativeLocation(rest), branch.name)\n}\n\nconst getOutputRelativeLocation = ({ filename, ...rest }) => {\n  return resolvePath(getBranchRelativeLocation({ filename, ...rest }), path.basename(filename))\n}\n\nconst getBranchLocation = ({ rootLocation, ...rest }) => {\n  return resolvePath(rootLocation, getBranchRelativeLocation(rest))\n}\n\nconst getOutputLocation = ({ rootLocation, ...rest }) => {\n  return resolvePath(rootLocation, getOutputRelativeLocation(rest))\n}\n\nconst getOutputAssetLocation = ({ asset, ...rest }) => {\n  return resolvePath(getBranchLocation(rest), asset.name)\n}\n\nconst readBranchMain = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  inputLocation,\n  inputETagClient,\n  cache,\n  branch,\n}) => {\n  return readFile({ location: inputLocation }).then(({ content }) => {\n    const inputETag = createETag(content)\n\n    return Promise.resolve()\n      .then(() => {\n        // faudra pouvoir désactiver ce check lorsqu'on veut juste connaitre l'état du cache\n        if (inputETagClient) {\n          if (inputETag !== inputETagClient) {\n            return {\n              status: `eTag modified on ${inputLocation} since it was cached by client`,\n              inputETagClient,\n            }\n          }\n          return { status: \"valid\" }\n        }\n\n        const inputETagCached = cache.inputETag\n        if (inputETag !== inputETagCached) {\n          return {\n            status: `eTag modified on ${inputLocation} since it was cached on filesystem`,\n            inputETagCached,\n          }\n        }\n\n        const outputLocation = getOutputLocation({\n          rootLocation,\n          cacheFolderRelativeLocation,\n          abstractFolderRelativeLocation,\n          filename,\n          branch,\n        })\n        return readFile({\n          location: outputLocation,\n          errorHandler: isFileNotFoundError,\n        }).then(({ content, error }) => {\n          if (error) {\n            return {\n              status: `cache not found at ${outputLocation}`,\n            }\n          }\n          return { status: \"valid\", output: content }\n        })\n      })\n      .then((moreData) => {\n        return {\n          input: content,\n          inputETag,\n          ...moreData,\n        }\n      })\n  })\n}\n\nconst readBranchAsset = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  cache,\n  branch,\n  asset,\n}) => {\n  const outputAssetLocation = getOutputAssetLocation({\n    rootLocation,\n    cacheFolderRelativeLocation,\n    abstractFolderRelativeLocation,\n    filename,\n    branch,\n    asset,\n  })\n  const name = asset.name\n\n  return readFile({\n    location: outputAssetLocation,\n    errorHandler: isFileNotFoundError,\n  }).then(({ content, error }) => {\n    if (error) {\n      return {\n        status: `asset file not found ${outputAssetLocation}`,\n        name,\n      }\n    }\n\n    const actual = createETag(content)\n    const expected = asset.eTag\n    if (actual !== expected) {\n      return {\n        status: `unexpected ${asset.name} asset for ${\n          cache.inputRelativeLocation\n        }: unexpected eTag`,\n        name,\n        content,\n      }\n    }\n    return {\n      status: \"valid\",\n      name,\n      content,\n    }\n  })\n}\n\nconst readBranch = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  inputLocation,\n  inputETagClient,\n  cache,\n  branch,\n}) => {\n  return Promise.all([\n    readBranchMain({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n      inputLocation,\n      inputETagClient,\n      cache,\n      branch,\n    }),\n    ...branch.outputAssets.map((outputAsset) => {\n      return readBranchAsset({\n        rootLocation,\n        cacheFolderRelativeLocation,\n        abstractFolderRelativeLocation,\n        filename,\n        cache,\n        branch,\n        asset: outputAsset,\n      })\n    }),\n  ]).then(([mainData, ...assetsData]) => {\n    const { status, input, inputETag, output } = mainData\n\n    let computedStatus\n    if (status === \"valid\") {\n      const invalidAsset = assetsData.find((assetData) => assetData.status !== \"valid\")\n      computedStatus = invalidAsset ? invalidAsset.status : \"valid\"\n    } else {\n      computedStatus = status\n    }\n\n    return {\n      status: computedStatus,\n      input,\n      inputETag,\n      output,\n      outputAssets: assetsData,\n    }\n  })\n}\n\nconst getSourceAbstractLocation = ({ rootLocation, inputRelativeLocation }) =>\n  resolvePath(rootLocation, inputRelativeLocation)\n\nconst getSourceMapLocation = ({ rootLocation, outputRelativeLocation, outputSourceMapName }) =>\n  resolvePath(rootLocation, path.dirname(outputRelativeLocation), outputSourceMapName)\n\nconst sourceMapKnowsExactLocation = false\n\nconst getSourceMapAbstractpLocation = ({\n  rootLocation,\n  abstractFolderRelativeLocation,\n  inputRelativeLocation,\n  outputSourceMapName,\n}) =>\n  resolvePath(\n    rootLocation,\n    abstractFolderRelativeLocation,\n    path.dirname(inputRelativeLocation),\n    outputSourceMapName,\n  )\n\nconst getFileBranch = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  compile,\n}) => {\n  const inputRelativeLocation = getInputRelativeLocation({\n    abstractFolderRelativeLocation,\n    filename,\n  })\n\n  const cacheDataLocation = getCacheDataLocation({\n    rootLocation,\n    cacheFolderRelativeLocation,\n    abstractFolderRelativeLocation,\n    filename,\n  })\n\n  return Promise.all([\n    locateFile(inputRelativeLocation, rootLocation),\n    readFile({\n      location: cacheDataLocation,\n      errorHandler: isFileNotFoundError,\n    }).then(({ content, error }) => {\n      if (error) {\n        return {\n          branches: [],\n        }\n      }\n      const cache = JSON.parse(content)\n      if (cache.inputRelativeLocation !== inputRelativeLocation) {\n        throw new Error(\n          `${JSON_FILE} corrupted: unexpected inputRelativeLocation ${\n            cache.inputRelativeLocation\n          }, it must be ${inputRelativeLocation}`,\n        )\n      }\n      return cache\n    }),\n  ])\n    .then(([inputLocation, cache]) => {\n      return {\n        inputLocation,\n        cache,\n      }\n    })\n    .then(({ inputLocation, cache }) => {\n      // here, if readFile returns ENOENT we could/should check is there is something in cache for that file\n      // and take that chance to remove the cached version of that file\n      // but it's not supposed to happen\n      return readFile({\n        location: inputLocation,\n      }).then(({ content }) => {\n        return compile({\n          rootLocation,\n          abstractFolderRelativeLocation,\n          inputRelativeLocation,\n          inputSource: content,\n          filename,\n          getSourceNameForSourceMap: () => {\n            return filename\n          },\n          getSourceLocationForSourceMap: (context) => {\n            const sourceMapUseAbsoluteLocation = true\n\n            if (sourceMapUseAbsoluteLocation) {\n              return `/${context.inputRelativeLocation}`\n            }\n\n            const sourceLocation = getSourceAbstractLocation(context)\n            const sourceMapLocation = sourceMapKnowsExactLocation\n              ? getSourceMapLocation(context)\n              : getSourceMapAbstractpLocation(context)\n            const sourceLocationRelativeToSourceMapLocation = normalizeSeparation(\n              path.relative(path.dirname(sourceMapLocation), sourceLocation),\n            )\n\n            return sourceLocationRelativeToSourceMapLocation\n          },\n        }).then(({ options, generate }) => {\n          const branchIsValid = (branch) => {\n            return JSON.stringify(branch.outputMeta) === JSON.stringify(options)\n          }\n\n          const cachedBranch = cache.branches.find((branch) => branchIsValid(branch))\n\n          return {\n            inputLocation,\n            cache,\n            options,\n            generate,\n            input: content,\n            branch: cachedBranch,\n          }\n        })\n      })\n    })\n}\n\nconst getFileReport = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  inputETagClient = null,\n  compile,\n}) => {\n  return getFileBranch({\n    rootLocation,\n    cacheFolderRelativeLocation,\n    abstractFolderRelativeLocation,\n    filename,\n    compile,\n  }).then(({ inputLocation, cache, options, generate, input, branch }) => {\n    if (!branch) {\n      return {\n        inputLocation,\n        status: \"missing\",\n        cache,\n        options,\n        generate,\n        branch: {\n          name: cuid(),\n        },\n        input,\n      }\n    }\n\n    return readBranch({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n      inputLocation,\n      inputETagClient,\n      cache,\n      branch,\n    }).then(({ status, input, output, outputAssets }) => {\n      return {\n        inputLocation,\n        status,\n        cache,\n        options,\n        generate,\n        branch,\n        input,\n        output,\n        outputAssets,\n      }\n    })\n  })\n}\n\nconst updateBranch = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  inputLocation,\n  status,\n  cache,\n  options,\n  branch,\n  inputETag,\n  output,\n  outputAssets,\n  cacheAutoClean,\n  cacheTrackHit,\n}) => {\n  const { branches } = cache\n  const isCached = status === \"cached\"\n  const isNew = status === \"created\"\n  const isUpdated = status === \"updated\"\n\n  const promises = []\n\n  if (isNew || isUpdated) {\n    const mainLocation = getOutputLocation({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n      branch,\n    })\n\n    promises.push(\n      writeFile({\n        location: mainLocation,\n        string: output,\n      }),\n      ...outputAssets.map((asset) => {\n        const assetLocation = getOutputAssetLocation({\n          rootLocation,\n          cacheFolderRelativeLocation,\n          abstractFolderRelativeLocation,\n          filename,\n          branch,\n          asset,\n        })\n\n        return writeFile({\n          location: assetLocation,\n          string: asset.content,\n        })\n      }),\n    )\n  }\n\n  if (isNew || isUpdated || (isCached && cacheTrackHit)) {\n    if (cacheAutoClean) {\n      if (inputETag !== cache.inputETag) {\n        const branchesToRemove = branches.slice()\n\n        // no need to remove the updated branch\n        const index = branchesToRemove.indexOf(branch)\n        branchesToRemove.splice(index, 1)\n\n        branches.length = 0\n        branchesToRemove.forEach((branch) => {\n          const branchLocation = getBranchLocation({\n            rootLocation,\n            cacheFolderRelativeLocation,\n            abstractFolderRelativeLocation,\n            filename,\n            branch,\n          })\n          console.log(`file changed, remove ${branchLocation}`)\n          // the line below is async but non blocking\n          removeFolderDeep(branchLocation)\n        })\n      }\n    }\n\n    if (isNew) {\n      branches.push(branch)\n    }\n\n    const updatedBranches = branches\n      .map((branchToUpdate) => {\n        if (branchToUpdate.name !== branch.name) {\n          return { ...branchToUpdate }\n        }\n        if (isCached) {\n          return {\n            ...branchToUpdate,\n            matchCount: branch.matchCount + 1,\n            lastMatchMs: Number(Date.now()),\n          }\n        }\n        if (isUpdated) {\n          return {\n            ...branchToUpdate,\n            matchCount: branch.matchCount + 1,\n            lastMatchMs: Number(Date.now()),\n            lastModifiedMs: Number(Date.now()),\n            outputAssets: outputAssets.map(({ name, content }) => {\n              return { name, eTag: createETag(content) }\n            }),\n          }\n        }\n        // new branch\n        return {\n          name: branch.name,\n          matchCount: 1,\n          createdMs: Number(Date.now()),\n          lastModifiedMs: Number(Date.now()),\n          lastMatchMs: Number(Date.now()),\n          outputMeta: options,\n          outputAssets: outputAssets.map(({ name, content }) => {\n            return { name, eTag: createETag(content) }\n          }),\n        }\n      })\n      .sort(compareBranch)\n\n    const inputRelativeLocation = getInputRelativeLocation({\n      abstractFolderRelativeLocation,\n      filename,\n    })\n\n    const updatedCache = {\n      inputRelativeLocation,\n      inputETag: isCached ? cache.inputETag : inputETag,\n      inputLocation:\n        inputLocation === resolvePath(rootLocation, inputRelativeLocation)\n          ? undefined\n          : inputLocation,\n      branches: updatedBranches,\n    }\n\n    const cacheDataLocation = getCacheDataLocation({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n    })\n\n    promises.push(\n      writeFile({\n        location: cacheDataLocation,\n        string: JSON.stringify(updatedCache, null, \"  \"),\n      }),\n    )\n  }\n\n  return Promise.all(promises)\n}\n\nconst getFileCompiled = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  compile,\n  inputETagClient,\n  cacheEnabled,\n  cacheAutoClean,\n  cacheTrackHit,\n}) => {\n  const fileLock = lockForRessource(\n    getCacheDataLocation({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n    }),\n  )\n\n  return fileLock.chain(() => {\n    return getFileReport({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n      compile,\n      inputETagClient,\n    })\n      .then(\n        ({\n          inputLocation,\n          status,\n          cache,\n          options,\n          generate,\n          branch,\n          input,\n          inputETag,\n          output,\n          outputAssets,\n        }) => {\n          if (cacheEnabled === false) {\n            status = \"missing\"\n          }\n\n          const outputRelativeLocation = getOutputRelativeLocation({\n            cacheFolderRelativeLocation,\n            abstractFolderRelativeLocation,\n            filename,\n            branch,\n          })\n\n          if (status === \"valid\") {\n            return {\n              inputLocation,\n              status: \"cached\",\n              cache,\n              options,\n              branch,\n              input,\n              inputETag,\n              outputRelativeLocation,\n              output,\n              outputAssets,\n            }\n          }\n\n          return Promise.resolve(generate({ outputRelativeLocation })).then(\n            ({ output, outputAssets }) => {\n              return {\n                inputLocation,\n                status: status === \"missing\" ? \"created\" : \"updated\",\n                cache,\n                options,\n                branch,\n                input,\n                inputETag: createETag(input),\n                outputRelativeLocation,\n                output,\n                outputAssets,\n              }\n            },\n          )\n        },\n      )\n      .then(\n        ({\n          inputLocation,\n          status,\n          cache,\n          options,\n          branch,\n          input,\n          inputETag,\n          outputRelativeLocation,\n          output,\n          outputAssets,\n        }) => {\n          return updateBranch({\n            rootLocation,\n            cacheFolderRelativeLocation,\n            abstractFolderRelativeLocation,\n            filename,\n            inputLocation,\n            status,\n            cache,\n            options,\n            branch,\n            input,\n            inputETag,\n            output,\n            outputAssets,\n            cacheTrackHit,\n            cacheAutoClean,\n          }).then(() => {\n            return {\n              status,\n              inputETag,\n              output,\n              outputRelativeLocation,\n            }\n          })\n        },\n      )\n  })\n}\n\nexport const createCompileService = ({\n  rootLocation,\n  cacheFolderRelativeLocation = \"build\",\n  abstractFolderRelativeLocation = \"compiled\",\n  compile = createCompile(),\n  cacheEnabled = false,\n  cacheAutoClean = true,\n  cacheTrackHit = false,\n}) => {\n  const fileService = createFileService()\n\n  const service = ({ method, url, headers }) => {\n    const pathname = url.pathname\n    // '/compiled/folder/file.js' -> 'compiled/folder/file.js'\n    const filename = pathname.slice(1)\n\n    // je crois, que, normalement\n    // il faudrait \"aider\" le browser pour que tout ça ait du sens\n    // genre lui envoyer une redirection vers le fichier en cache\n    // genre renvoyer 201 vers le cache lorsqu'il a été update ou créé\n    // https://developer.mozilla.org/fr/docs/Web/HTTP/Status/201\n    // renvoyer 302 ou 307 lorsque le cache existe\n    // l'intérêt c'est que si jamais le browser fait une requête vers le cache\n    // il sait à quoi ça correspond vraiment\n    // par contre ça fait 2 requête http\n\n    if (filename.endsWith(\".map\")) {\n      const fileLock = lockForRessource(\n        getCacheDataLocation({\n          rootLocation,\n          cacheFolderRelativeLocation,\n          abstractFolderRelativeLocation,\n          filename,\n        }),\n      )\n\n      return fileLock.chain(() => {\n        const script = filename.slice(0, -4) // 'folder/file.js.map' -> 'folder.file.js'\n\n        // if we receive something like compiled/folder/file.js.map\n        // we redirect to build/folder/file.js/jqjcijjojio/file.js.map\n\n        return getFileBranch({\n          rootLocation,\n          cacheFolderRelativeLocation,\n          abstractFolderRelativeLocation,\n          filename: script,\n          compile,\n        }).then(\n          ({ branch }) => {\n            if (!branch) {\n              return {\n                status: 404,\n              }\n            }\n\n            const scriptCompiledFolder = resolvePath(\n              rootLocation,\n              getBranchRelativeLocation({\n                cacheFolderRelativeLocation,\n                abstractFolderRelativeLocation,\n                filename: script,\n                branch,\n              }),\n            )\n\n            return fileService({\n              method,\n              url: new URL(\n                `file:///${scriptCompiledFolder}/${path.basename(filename)}${url.search}`,\n              ),\n              headers,\n            })\n          },\n          (error) => {\n            if (error && error.reason === \"Unexpected directory operation\") {\n              return {\n                status: 403,\n              }\n            }\n            return Promise.reject(error)\n          },\n        )\n      })\n    }\n\n    return getFileCompiled({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n      compile,\n      inputETagClient: headers.has(\"if-none-match\") ? headers.get(\"if-none-match\") : undefined,\n      cacheEnabled,\n      cacheAutoClean,\n      cacheTrackHit,\n    }).then(\n      ({ status, inputETag, outputRelativeLocation, output }) => {\n        // here status can be \"created\", \"updated\", \"cached\"\n\n        // c'est un peu optimiste ici de se dire que si c'est cached et qu'on a\n        // if-none-match c'est forcément le etag du client qui a match\n        // faudra changer ça non?\n        if (headers.has(\"if-none-match\") && status === \"cached\") {\n          return {\n            status: 304,\n            headers: {\n              \"cache-control\": \"no-store\",\n              \"x-location\": outputRelativeLocation,\n            },\n          }\n        }\n\n        return {\n          status: 200,\n          headers: {\n            Etag: inputETag,\n            \"content-length\": Buffer.byteLength(output),\n            \"content-type\": \"application/javascript\",\n            \"cache-control\": \"no-store\",\n            \"x-location\": outputRelativeLocation,\n          },\n          body: output,\n        }\n      },\n      (error) => {\n        if (error && error.reason === \"Unexpected directory operation\") {\n          return {\n            status: 403,\n          }\n        }\n        return Promise.reject(error)\n      },\n    )\n  }\n\n  const compileFile = (relativeLocation) =>\n    getFileCompiled({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename: `${abstractFolderRelativeLocation}/${relativeLocation}`,\n      compile,\n      cacheEnabled,\n      cacheAutoClean,\n      cacheTrackHit,\n    })\n\n  return { service, compileFile }\n}\n"]}