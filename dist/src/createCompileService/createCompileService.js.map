{
  "version": 3,
  "sources": [
    "../../../src/createCompileService/createCompileService.js"
  ],
  "names": [
    "readBranchMain",
    "rootLocation",
    "cacheFolderRelativeLocation",
    "abstractFolderRelativeLocation",
    "filename",
    "inputLocation",
    "inputETagClient",
    "cache",
    "branch",
    "location",
    "then",
    "content",
    "inputETag",
    "Promise",
    "resolve",
    "status",
    "inputETagCached",
    "outputLocation",
    "errorHandler",
    "isFileNotFoundError",
    "error",
    "output",
    "moreData",
    "input",
    "readBranchAsset",
    "asset",
    "outputAssetLocation",
    "name",
    "actual",
    "expected",
    "eTag",
    "inputRelativeLocation",
    "readBranch",
    "all",
    "outputAssets",
    "map",
    "outputAsset",
    "mainData",
    "assetsData",
    "computedStatus",
    "invalidAsset",
    "find",
    "assetData",
    "getFileBranch",
    "groupId",
    "compile",
    "cacheDataLocation",
    "branches",
    "JSON",
    "parse",
    "Error",
    "JSON_FILE",
    "inputSource",
    "getSourceNameForSourceMap",
    "getSourceLocationForSourceMap",
    "options",
    "generate",
    "branchIsValid",
    "stringify",
    "outputMeta",
    "cachedBranch",
    "getFileReport",
    "compareBranch",
    "branchA",
    "branchB",
    "lastMatchDiff",
    "lastMatchMs",
    "matchCount",
    "updateBranch",
    "cacheAutoClean",
    "cacheTrackHit",
    "isCached",
    "isNew",
    "isUpdated",
    "promises",
    "mainLocation",
    "push",
    "assetLocation",
    "branchesToRemove",
    "slice",
    "index",
    "indexOf",
    "splice",
    "length",
    "forEach",
    "branchLocation",
    "console",
    "log",
    "updatedBranches",
    "branchToUpdate",
    "Number",
    "Date",
    "now",
    "lastModifiedMs",
    "createdMs",
    "sort",
    "updatedCache",
    "undefined",
    "getFileCompiled",
    "getBabelPlugins",
    "cacheEnabled",
    "fileLock",
    "chain",
    "outputRelativeLocation",
    "createCompileService",
    "fileService",
    "getGroupIdForPlatform",
    "getPluginsFromGroupId",
    "root",
    "service",
    "method",
    "url",
    "headers",
    "pathname",
    "endsWith",
    "script",
    "URL",
    "search",
    "reason",
    "reject",
    "platformName",
    "platformVersion",
    "has",
    "get",
    "Etag",
    "Buffer",
    "byteLength",
    "body",
    "compileFile",
    "relativeLocation"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* eslint-disable import/max-dependencies */\nimport cuid from \"cuid\"\nimport { URL } from \"url\"\nimport { createCompile } from \"../createCompile/createCompile.js\"\nimport { JSON_FILE } from \"./cache.js\"\nimport { createETag, isFileNotFoundError, removeFolderDeep } from \"./helpers.js\"\nimport { locateFile } from \"./locateFile.js\"\nimport { readFile } from \"./readFile.js\"\nimport { lockForRessource } from \"./ressourceRegistry.js\"\nimport { writeFileFromString } from \"@dmail/project-structure-compile-babel\"\nimport { createFileService } from \"../createFileService/createFileService.js\"\nimport { getPlatformAndVersionFromHeaders } from \"./getPlatformAndVersionFromHeaders.js\"\nimport {\n  getInputRelativeLocation,\n  getCacheDataLocation,\n  getOutputRelativeLocation,\n  getBranchLocation,\n  getOutputLocation,\n  getOutputAssetLocation,\n  getSourceAbstractLocation,\n  getSourceLocationForSourceMap,\n} from \"./locaters.js\"\nimport { buildGroup } from \"./buildGroup.js\"\n\nconst readBranchMain = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  inputLocation,\n  inputETagClient,\n  cache,\n  branch,\n}) => {\n  return readFile({ location: inputLocation }).then(({ content }) => {\n    const inputETag = createETag(content)\n\n    return Promise.resolve()\n      .then(() => {\n        // faudra pouvoir désactiver ce check lorsqu'on veut juste connaitre l'état du cache\n        if (inputETagClient) {\n          if (inputETag !== inputETagClient) {\n            return {\n              status: `eTag modified on ${inputLocation} since it was cached by client`,\n              inputETagClient,\n            }\n          }\n          return { status: \"valid\" }\n        }\n\n        const inputETagCached = cache.inputETag\n        if (inputETag !== inputETagCached) {\n          return {\n            status: `eTag modified on ${inputLocation} since it was cached on filesystem`,\n            inputETagCached,\n          }\n        }\n\n        const outputLocation = getOutputLocation({\n          rootLocation,\n          cacheFolderRelativeLocation,\n          abstractFolderRelativeLocation,\n          filename,\n          branch,\n        })\n        return readFile({\n          location: outputLocation,\n          errorHandler: isFileNotFoundError,\n        }).then(({ content, error }) => {\n          if (error) {\n            return {\n              status: `cache not found at ${outputLocation}`,\n            }\n          }\n          return { status: \"valid\", output: content }\n        })\n      })\n      .then((moreData) => {\n        return {\n          input: content,\n          inputETag,\n          ...moreData,\n        }\n      })\n  })\n}\n\nconst readBranchAsset = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  cache,\n  branch,\n  asset,\n}) => {\n  const outputAssetLocation = getOutputAssetLocation({\n    rootLocation,\n    cacheFolderRelativeLocation,\n    abstractFolderRelativeLocation,\n    filename,\n    branch,\n    asset,\n  })\n  const name = asset.name\n\n  return readFile({\n    location: outputAssetLocation,\n    errorHandler: isFileNotFoundError,\n  }).then(({ content, error }) => {\n    if (error) {\n      return {\n        status: `asset file not found ${outputAssetLocation}`,\n        name,\n      }\n    }\n\n    const actual = createETag(content)\n    const expected = asset.eTag\n    if (actual !== expected) {\n      return {\n        status: `unexpected ${asset.name} asset for ${\n          cache.inputRelativeLocation\n        }: unexpected eTag`,\n        name,\n        content,\n      }\n    }\n    return {\n      status: \"valid\",\n      name,\n      content,\n    }\n  })\n}\n\nconst readBranch = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  inputLocation,\n  inputETagClient,\n  cache,\n  branch,\n}) => {\n  return Promise.all([\n    readBranchMain({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n      inputLocation,\n      inputETagClient,\n      cache,\n      branch,\n    }),\n    ...branch.outputAssets.map((outputAsset) => {\n      return readBranchAsset({\n        rootLocation,\n        cacheFolderRelativeLocation,\n        abstractFolderRelativeLocation,\n        filename,\n        cache,\n        branch,\n        asset: outputAsset,\n      })\n    }),\n  ]).then(([mainData, ...assetsData]) => {\n    const { status, input, inputETag, output } = mainData\n\n    let computedStatus\n    if (status === \"valid\") {\n      const invalidAsset = assetsData.find((assetData) => assetData.status !== \"valid\")\n      computedStatus = invalidAsset ? invalidAsset.status : \"valid\"\n    } else {\n      computedStatus = status\n    }\n\n    return {\n      status: computedStatus,\n      input,\n      inputETag,\n      output,\n      outputAssets: assetsData,\n    }\n  })\n}\n\nconst getFileBranch = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  groupId,\n  compile,\n}) => {\n  const inputRelativeLocation = getInputRelativeLocation({\n    abstractFolderRelativeLocation,\n    filename,\n  })\n\n  const cacheDataLocation = getCacheDataLocation({\n    rootLocation,\n    cacheFolderRelativeLocation,\n    abstractFolderRelativeLocation,\n    filename,\n  })\n\n  return Promise.all([\n    locateFile(inputRelativeLocation, rootLocation),\n    readFile({\n      location: cacheDataLocation,\n      errorHandler: isFileNotFoundError,\n    }).then(({ content, error }) => {\n      if (error) {\n        return {\n          branches: [],\n        }\n      }\n      const cache = JSON.parse(content)\n      if (cache.inputRelativeLocation !== inputRelativeLocation) {\n        throw new Error(\n          `${JSON_FILE} corrupted: unexpected inputRelativeLocation ${\n            cache.inputRelativeLocation\n          }, it must be ${inputRelativeLocation}`,\n        )\n      }\n      return cache\n    }),\n  ])\n    .then(([inputLocation, cache]) => {\n      return {\n        inputLocation,\n        cache,\n      }\n    })\n    .then(({ inputLocation, cache }) => {\n      // here, if readFile returns ENOENT we could/should check is there is something in cache for that file\n      // and take that chance to remove the cached version of that file\n      // but it's not supposed to happen\n      return readFile({\n        location: inputLocation,\n      }).then(({ content }) => {\n        return compile({\n          rootLocation,\n          abstractFolderRelativeLocation,\n          inputRelativeLocation,\n          inputSource: content,\n          filename,\n          groupId,\n          getSourceNameForSourceMap: () => {\n            return filename\n          },\n          getSourceLocationForSourceMap,\n        }).then(({ options, generate }) => {\n          const branchIsValid = (branch) => {\n            return JSON.stringify(branch.outputMeta) === JSON.stringify(options)\n          }\n\n          const cachedBranch = cache.branches.find((branch) => branchIsValid(branch))\n\n          return {\n            inputLocation,\n            cache,\n            options,\n            generate,\n            input: content,\n            branch: cachedBranch,\n          }\n        })\n      })\n    })\n}\n\nconst getFileReport = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  inputETagClient = null,\n  groupId,\n  compile,\n}) => {\n  return getFileBranch({\n    rootLocation,\n    cacheFolderRelativeLocation,\n    abstractFolderRelativeLocation,\n    filename,\n    groupId,\n    compile,\n  }).then(({ inputLocation, cache, options, generate, input, branch }) => {\n    if (!branch) {\n      return {\n        inputLocation,\n        status: \"missing\",\n        cache,\n        options,\n        generate,\n        branch: {\n          name: cuid(),\n        },\n        input,\n      }\n    }\n\n    return readBranch({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n      inputLocation,\n      inputETagClient,\n      cache,\n      branch,\n    }).then(({ status, input, output, outputAssets }) => {\n      return {\n        inputLocation,\n        status,\n        cache,\n        options,\n        generate,\n        branch,\n        input,\n        output,\n        outputAssets,\n      }\n    })\n  })\n}\n\nconst compareBranch = (branchA, branchB) => {\n  const lastMatchDiff = branchA.lastMatchMs - branchB.lastMatchMs\n\n  if (lastMatchDiff === 0) {\n    return branchA.matchCount - branchB.matchCount\n  }\n  return lastMatchDiff\n}\n\nconst updateBranch = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  inputLocation,\n  status,\n  cache,\n  options,\n  branch,\n  inputETag,\n  output,\n  outputAssets,\n  cacheAutoClean,\n  cacheTrackHit,\n}) => {\n  const { branches } = cache\n  const isCached = status === \"cached\"\n  const isNew = status === \"created\"\n  const isUpdated = status === \"updated\"\n\n  const promises = []\n\n  if (isNew || isUpdated) {\n    const mainLocation = getOutputLocation({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n      branch,\n    })\n\n    promises.push(\n      writeFileFromString(mainLocation, output),\n      ...outputAssets.map((asset) => {\n        const assetLocation = getOutputAssetLocation({\n          rootLocation,\n          cacheFolderRelativeLocation,\n          abstractFolderRelativeLocation,\n          filename,\n          branch,\n          asset,\n        })\n\n        return writeFileFromString(assetLocation, asset.content)\n      }),\n    )\n  }\n\n  if (isNew || isUpdated || (isCached && cacheTrackHit)) {\n    if (cacheAutoClean) {\n      if (inputETag !== cache.inputETag) {\n        const branchesToRemove = branches.slice()\n\n        // no need to remove the updated branch\n        const index = branchesToRemove.indexOf(branch)\n        branchesToRemove.splice(index, 1)\n\n        branches.length = 0\n        branchesToRemove.forEach((branch) => {\n          const branchLocation = getBranchLocation({\n            rootLocation,\n            cacheFolderRelativeLocation,\n            abstractFolderRelativeLocation,\n            filename,\n            branch,\n          })\n          console.log(`file changed, remove ${branchLocation}`)\n          // the line below is async but non blocking\n          removeFolderDeep(branchLocation)\n        })\n      }\n    }\n\n    if (isNew) {\n      branches.push(branch)\n    }\n\n    const updatedBranches = branches\n      .map((branchToUpdate) => {\n        if (branchToUpdate.name !== branch.name) {\n          return { ...branchToUpdate }\n        }\n        if (isCached) {\n          return {\n            ...branchToUpdate,\n            matchCount: branch.matchCount + 1,\n            lastMatchMs: Number(Date.now()),\n          }\n        }\n        if (isUpdated) {\n          return {\n            ...branchToUpdate,\n            matchCount: branch.matchCount + 1,\n            lastMatchMs: Number(Date.now()),\n            lastModifiedMs: Number(Date.now()),\n            outputAssets: outputAssets.map(({ name, content }) => {\n              return { name, eTag: createETag(content) }\n            }),\n          }\n        }\n        // new branch\n        return {\n          name: branch.name,\n          matchCount: 1,\n          createdMs: Number(Date.now()),\n          lastModifiedMs: Number(Date.now()),\n          lastMatchMs: Number(Date.now()),\n          outputMeta: options,\n          outputAssets: outputAssets.map(({ name, content }) => {\n            return { name, eTag: createETag(content) }\n          }),\n        }\n      })\n      .sort(compareBranch)\n\n    const inputRelativeLocation = getInputRelativeLocation({\n      abstractFolderRelativeLocation,\n      filename,\n    })\n\n    const updatedCache = {\n      inputRelativeLocation,\n      inputETag: isCached ? cache.inputETag : inputETag,\n      inputLocation:\n        inputLocation === getSourceAbstractLocation({ rootLocation, inputRelativeLocation })\n          ? undefined\n          : inputLocation,\n      branches: updatedBranches,\n    }\n\n    const cacheDataLocation = getCacheDataLocation({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n    })\n\n    promises.push(writeFileFromString(cacheDataLocation, JSON.stringify(updatedCache, null, \"  \")))\n  }\n\n  return Promise.all(promises)\n}\n\nconst getFileCompiled = ({\n  rootLocation,\n  cacheFolderRelativeLocation,\n  abstractFolderRelativeLocation,\n  filename,\n  compile,\n  inputETagClient,\n  groupId,\n  getBabelPlugins,\n  cacheEnabled,\n  cacheAutoClean,\n  cacheTrackHit,\n}) => {\n  const fileLock = lockForRessource(\n    getCacheDataLocation({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n    }),\n  )\n\n  return fileLock.chain(() => {\n    return getFileReport({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n      inputETagClient,\n      groupId,\n      compile,\n    })\n      .then(\n        ({\n          inputLocation,\n          status,\n          cache,\n          options,\n          generate,\n          branch,\n          input,\n          inputETag,\n          output,\n          outputAssets,\n        }) => {\n          const outputRelativeLocation = getOutputRelativeLocation({\n            cacheFolderRelativeLocation,\n            abstractFolderRelativeLocation,\n            filename,\n            branch,\n          })\n\n          if (cacheEnabled && status === \"valid\") {\n            return {\n              inputLocation,\n              status: \"cached\",\n              cache,\n              options,\n              branch,\n              input,\n              inputETag,\n              outputRelativeLocation,\n              output,\n              outputAssets,\n            }\n          }\n\n          return Promise.resolve(generate({ outputRelativeLocation, getBabelPlugins })).then(\n            ({ output, outputAssets }) => {\n              return {\n                inputLocation,\n                status: status === \"missing\" ? \"created\" : \"updated\",\n                cache,\n                options,\n                branch,\n                input,\n                inputETag: createETag(input),\n                outputRelativeLocation,\n                output,\n                outputAssets,\n              }\n            },\n          )\n        },\n      )\n      .then(\n        ({\n          inputLocation,\n          status,\n          cache,\n          options,\n          branch,\n          input,\n          inputETag,\n          outputRelativeLocation,\n          output,\n          outputAssets,\n        }) => {\n          return updateBranch({\n            rootLocation,\n            cacheFolderRelativeLocation,\n            abstractFolderRelativeLocation,\n            filename,\n            inputLocation,\n            status,\n            cache,\n            options,\n            branch,\n            input,\n            inputETag,\n            output,\n            outputAssets,\n            cacheTrackHit,\n            cacheAutoClean,\n          }).then(() => {\n            return {\n              status,\n              inputETag,\n              output,\n              outputRelativeLocation,\n            }\n          })\n        },\n      )\n  })\n}\n\nexport const createCompileService = ({\n  rootLocation,\n  cacheFolderRelativeLocation = \"build\",\n  abstractFolderRelativeLocation = \"compiled\",\n  compile = createCompile(),\n  cacheEnabled = false,\n  cacheAutoClean = true,\n  cacheTrackHit = false,\n}) => {\n  const fileService = createFileService()\n\n  const { getGroupIdForPlatform, getPluginsFromGroupId } = buildGroup({\n    root: rootLocation,\n  })\n\n  const service = ({ method, url, headers }) => {\n    const pathname = url.pathname\n    // '/compiled/folder/file.js' -> 'compiled/folder/file.js'\n    const filename = pathname.slice(1)\n\n    // je crois, que, normalement\n    // il faudrait \"aider\" le browser pour que tout ça ait du sens\n    // genre lui envoyer une redirection vers le fichier en cache\n    // genre renvoyer 201 vers le cache lorsqu'il a été update ou créé\n    // https://developer.mozilla.org/fr/docs/Web/HTTP/Status/201\n    // renvoyer 302 ou 307 lorsque le cache existe\n    // l'intérêt c'est que si jamais le browser fait une requête vers le cache\n    // il sait à quoi ça correspond vraiment\n    // par contre ça fait 2 requête http\n\n    if (filename.endsWith(\".map\")) {\n      const fileLock = lockForRessource(\n        getCacheDataLocation({\n          rootLocation,\n          cacheFolderRelativeLocation,\n          abstractFolderRelativeLocation,\n          filename,\n        }),\n      )\n\n      return fileLock.chain(() => {\n        const script = filename.slice(0, -4) // 'folder/file.js.map' -> 'folder.file.js'\n\n        // if we receive something like compiled/folder/file.js.map\n        // we redirect to build/folder/file.js/jqjcijjojio/file.js.map\n\n        return getFileBranch({\n          rootLocation,\n          cacheFolderRelativeLocation,\n          abstractFolderRelativeLocation,\n          filename: script,\n          compile,\n        }).then(\n          ({ branch }) => {\n            if (!branch) {\n              return {\n                status: 404,\n              }\n            }\n\n            const outputLocation = getOutputLocation({\n              rootLocation,\n              cacheFolderRelativeLocation,\n              abstractFolderRelativeLocation,\n              filename,\n              branch,\n            })\n\n            return fileService({\n              method,\n              url: new URL(`file:///${outputLocation}${url.search}`),\n              headers,\n            })\n          },\n          (error) => {\n            if (error && error.reason === \"Unexpected directory operation\") {\n              return {\n                status: 403,\n              }\n            }\n            return Promise.reject(error)\n          },\n        )\n      })\n    }\n\n    const { platformName, platformVersion } = getPlatformAndVersionFromHeaders(headers)\n    const groupId = getGroupIdForPlatform({\n      platformName,\n      platformVersion,\n    })\n\n    return getFileCompiled({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename,\n      compile,\n      inputETagClient: headers.has(\"if-none-match\") ? headers.get(\"if-none-match\") : undefined,\n      groupId,\n      getBabelPlugins: () => getPluginsFromGroupId(groupId),\n      cacheEnabled,\n      cacheAutoClean,\n      cacheTrackHit,\n    }).then(\n      ({ status, inputETag, outputRelativeLocation, output }) => {\n        // here status can be \"created\", \"updated\", \"cached\"\n\n        // c'est un peu optimiste ici de se dire que si c'est cached et qu'on a\n        // if-none-match c'est forcément le etag du client qui a match\n        // faudra changer ça non?\n        if (headers.has(\"if-none-match\") && status === \"cached\") {\n          return {\n            status: 304,\n            headers: {\n              \"cache-control\": \"no-store\",\n              \"x-location\": outputRelativeLocation,\n            },\n          }\n        }\n\n        return {\n          status: 200,\n          headers: {\n            Etag: inputETag,\n            \"content-length\": Buffer.byteLength(output),\n            \"content-type\": \"application/javascript\",\n            \"cache-control\": \"no-store\",\n            \"x-location\": outputRelativeLocation,\n          },\n          body: output,\n        }\n      },\n      (error) => {\n        if (error && error.reason === \"Unexpected directory operation\") {\n          return {\n            status: 403,\n          }\n        }\n        return Promise.reject(error)\n      },\n    )\n  }\n\n  const compileFile = (relativeLocation) =>\n    getFileCompiled({\n      rootLocation,\n      cacheFolderRelativeLocation,\n      abstractFolderRelativeLocation,\n      filename: `${abstractFolderRelativeLocation}/${relativeLocation}`,\n      compile,\n      cacheEnabled,\n      cacheAutoClean,\n      cacheTrackHit,\n    })\n\n  return { service, compileFile }\n}\n"
  ]
}