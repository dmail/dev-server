{"version":3,"sources":["../../../src/createCompileService/helpers.js"],"names":["createETag","string","length","hash","createHash","update","result","digest","replace","toString","isFileNotFoundError","error","code","normalizeSeparation","filename","resolvePath","from","paths","join","isFolder","Promise","resolve","reject","lstat","stat","isDirectory","readFolder","location","readdir","filenames","removeFile","unlink","removeFolderDeep"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMA,kCAAa,SAAbA,UAAa,CAACC,MAAD,EAAY;AACpC,MAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB;AACvB;AACA,WAAO,iCAAP;AACD;;AAED,MAAMC,OAAO,oBAAOC,UAAP,CAAkB,MAAlB,CAAb;AACAD,OAAKE,MAAL,CAAYJ,MAAZ,EAAoB,MAApB;AACA,MAAIK,SAASH,KAAKI,MAAL,CAAY,QAAZ,CAAb;AACAD,WAASA,OAAOE,OAAP,CAAe,MAAf,EAAuB,EAAvB,CAAT;;AAEA,gBAAWP,OAAOC,MAAP,CAAcO,QAAd,CAAuB,EAAvB,CAAX,SAAyCH,MAAzC;AACD,CAZM;;AAcA,IAAMI,oDAAsB,SAAtBA,mBAAsB,CAACC,KAAD;AAAA,SAAWA,SAASA,MAAMC,IAAN,KAAe,QAAnC;AAAA,CAA5B;;AAEA,IAAMC,oDAAsB,SAAtBA,mBAAsB,CAACC,QAAD;AAAA,SAAcA,SAASN,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAAd;AAAA,CAA5B;;AAEA,IAAMO,oCAAc,SAAdA,WAAc,CAACC,IAAD,EAAoB;AAAA,oCAAVC,KAAU;AAAVA,SAAU;AAAA;;AAC7C,SAAOJ,oBAAoB,kBAAKK,IAAL,2BAAUF,IAAV,SAAmBC,KAAnB,EAApB,CAAP;AACD,CAFM;;AAIA,IAAME,8BAAW,SAAXA,QAAW,CAACL,QAAD,EAAc;AACpC,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oBAAGC,KAAH,CAAST,QAAT,EAAmB,UAACH,KAAD,EAAQa,IAAR,EAAiB;AAClC,UAAIb,KAAJ,EAAW;AACTW,eAAOX,KAAP;AACD,OAFD,MAEO;AACLU,gBAAQG,KAAKC,WAAL,EAAR;AACD;AACF,KAND;AAOD,GARM,CAAP;AASD,CAVM;;AAYA,IAAMC,kCAAa,SAAbA,UAAa,CAACC,QAAD,EAAc;AACtC,SAAO,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oBAAGM,OAAH,CAAWD,QAAX,EAAqB,UAAChB,KAAD,EAAQkB,SAAR,EAAsB;AACzC,UAAIlB,KAAJ,EAAW;AACTW,eAAOX,KAAP;AACD,OAFD,MAEO;AACLU,gBAAQQ,SAAR;AACD;AACF,KAND;AAOD,GARM,CAAP;AASD,CAVM;;AAYA,IAAMC,kCAAa,SAAbA,UAAa,CAACH,QAAD,EAAc;AACtC,SAAO,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oBAAGS,MAAH,CAAUJ,QAAV,EAAoB,UAAChB,KAAD,EAAW;AAC7B,UAAIA,KAAJ,EAAW;AACTW,eAAOX,KAAP;AACD,OAFD,MAEO;AACLU;AACD;AACF,KAND;AAOD,GARM,CAAP;AASD,CAVM;;AAYA,IAAMW,8CAAmB,SAAnBA,gBAAmB,CAACL,QAAD,EAAc;AAC5C,SAAO,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,6BAAOK,QAAP,EAAiB,UAAChB,KAAD,EAAW;AAC1B,UAAIA,KAAJ,EAAW;AACTW,eAAOX,KAAP;AACD,OAFD,MAEO;AACLU;AACD;AACF,KAND;AAOD,GARM,CAAP;AASD,CAVM","file":"helpers.js","sourcesContent":["import crypto from \"crypto\"\nimport fs from \"fs\"\nimport path from \"path\"\nimport rimraf from \"rimraf\"\n\nexport const createETag = (string) => {\n  if (string.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  const hash = crypto.createHash(\"sha1\")\n  hash.update(string, \"utf8\")\n  let result = hash.digest(\"base64\")\n  result = result.replace(/\\=+$/, \"\")\n\n  return `\"${string.length.toString(16)}-${result}\"`\n}\n\nexport const isFileNotFoundError = (error) => error && error.code === \"ENOENT\"\n\nexport const normalizeSeparation = (filename) => filename.replace(/\\\\/g, \"/\")\n\nexport const resolvePath = (from, ...paths) => {\n  return normalizeSeparation(path.join(from, ...paths))\n}\n\nexport const isFolder = (filename) => {\n  return new Promise((resolve, reject) => {\n    fs.lstat(filename, (error, stat) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(stat.isDirectory())\n      }\n    })\n  })\n}\n\nexport const readFolder = (location) => {\n  return new Promise((resolve, reject) => {\n    fs.readdir(location, (error, filenames) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(filenames)\n      }\n    })\n  })\n}\n\nexport const removeFile = (location) => {\n  return new Promise((resolve, reject) => {\n    fs.unlink(location, (error) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\nexport const removeFolderDeep = (location) => {\n  return new Promise((resolve, reject) => {\n    rimraf(location, (error) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n"]}