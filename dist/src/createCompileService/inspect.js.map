{
  "version": 3,
  "sources": [
    "../../../src/createCompileService/inspect.js"
  ],
  "names": [
    "inspect",
    "rootLocation",
    "cacheFolderRelativeLocation",
    "cacheFolderLocation",
    "then",
    "folders",
    "Promise",
    "all",
    "map",
    "folder",
    "location",
    "JSON_FILE",
    "JSON",
    "parse",
    "cache",
    "inputLocation",
    "inputRelativeLocation",
    "errorHandler",
    "isFileNotFoundError",
    "content",
    "actual",
    "expected",
    "inputETag",
    "resolve",
    "foldersStatus",
    "status",
    "index"
  ],
  "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAAmD;AAAA,MAAhDC,YAAgD,QAAhDA,YAAgD;AAAA,MAAlCC,2BAAkC,QAAlCA,2BAAkC;AACxE,MAAMC,mBAAmB,GAAG,0BAAYF,YAAZ,EAA0BC,2BAA1B,CAA5B;AAEA,SAAO,gBAAK;AAAED,IAAAA,YAAY,EAAZA,YAAF;AAAgBC,IAAAA,2BAA2B,EAA3BA;AAAhB,GAAL,EAAoDE,IAApD,CAAyD,UAACC,OAAD,EAAa;AAC3E,WAAOC,OAAO,CAACC,GAAR,CACLF,OAAO,CAACG,GAAR,CAAY,UAACC,MAAD,EAAY;AACtB,aAAO,wBAAS;AAAEC,QAAAA,QAAQ,EAAE,0BAAYP,mBAAZ,EAAiCM,MAAjC,EAAyCE,gBAAzC;AAAZ,OAAT,EACJP,IADI,CACCQ,IAAI,CAACC,KADN,EAEJT,IAFI,CAEC,UAACU,KAAD,EAAW;AACf,YAAMC,aAAa,GAAG,4BAAWD,KAAK,CAACE,qBAAjB,EAAwCf,YAAxC,CAAtB;AACA,eAAO,wBAAS;AACdS,UAAAA,QAAQ,EAAEK,aADI;AAEdE,UAAAA,YAAY,EAAEC;AAFA,SAAT,EAGJd,IAHI,CAIL,UAACe,OAAD,EAAa;AACX,cAAMC,MAAM,GAAG,yBAAWD,OAAX,CAAf;AACA,cAAME,QAAQ,GAAGP,KAAK,CAACQ,SAAvB;;AACA,cAAIF,MAAM,KAAKC,QAAf,EAAyB;AACvB,mBAAO,qBAAP;AACD;;AACD,iBAAO,OAAP;AACD,SAXI,EAYL;AAAA,iBAAMf,OAAO,CAACiB,OAAR,CAAgB,oBAAhB,CAAN;AAAA,SAZK,CAAP;AAcD,OAlBI,CAAP;AAmBD,KApBD,CADK,EAsBLnB,IAtBK,CAsBA,UAACoB,aAAD,EAAmB;AACxB,aAAOA,aAAa,CAAChB,GAAd,CAAkB,UAACiB,MAAD,EAASC,KAAT,EAAmB;AAC1C,eAAO;AAAEjB,UAAAA,MAAM,EAAEJ,OAAO,CAACqB,KAAD,CAAjB;AAA0BD,UAAAA,MAAM,EAANA;AAA1B,SAAP;AACD,OAFM,CAAP;AAGD,KA1BM,CAAP;AA2BD,GA5BM,CAAP;AA6BD,CAhCM",
  "sourcesContent": [
    "import { JSON_FILE } from \"./cache.js\"\nimport { createETag, isFileNotFoundError, resolvePath } from \"./helpers.js\"\nimport { list } from \"./list.js\"\nimport { locateFile } from \"./locateFile.js\"\nimport { readFile } from \"./readFile.js\"\n\nexport const inspect = ({ rootLocation, cacheFolderRelativeLocation }) => {\n  const cacheFolderLocation = resolvePath(rootLocation, cacheFolderRelativeLocation)\n\n  return list({ rootLocation, cacheFolderRelativeLocation }).then((folders) => {\n    return Promise.all(\n      folders.map((folder) => {\n        return readFile({ location: resolvePath(cacheFolderLocation, folder, JSON_FILE) })\n          .then(JSON.parse)\n          .then((cache) => {\n            const inputLocation = locateFile(cache.inputRelativeLocation, rootLocation)\n            return readFile({\n              location: inputLocation,\n              errorHandler: isFileNotFoundError,\n            }).then(\n              (content) => {\n                const actual = createETag(content)\n                const expected = cache.inputETag\n                if (actual !== expected) {\n                  return \"input-file-modified\"\n                }\n                return \"valid\"\n              },\n              () => Promise.resolve(\"input-file-missing\"),\n            )\n          })\n      }),\n    ).then((foldersStatus) => {\n      return foldersStatus.map((status, index) => {\n        return { folder: folders[index], status }\n      })\n    })\n  })\n}\n"
  ]
}