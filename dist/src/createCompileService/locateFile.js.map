{"version":3,"sources":["../../../src/createCompileService/locateFile.js"],"names":["locateNodeModule","moduleLocation","location","requireContext","paths","_nodeModulePaths","_resolveFilename","getNodeDependentAndRelativeDependency","fileLocation","prefixedLocation","pattern","lastNodeModulesIndex","lastIndexOf","dependent","relativeDependency","slice","length","locateFile","relativeLocation","absoluteLocation","startsWith","nodeLocation","Promise","resolve","e","code","reject","status","reason"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,CAACC,cAAD,EAAiBC,QAAjB,EAA8B;AACrD,MAAMC,iBAAiB,wBAAWD,QAAX,CAAvB;AACAC,iBAAeC,KAAf,GAAuB,oBAAOC,gBAAP,CAAwBH,QAAxB,CAAvB;AACA,SAAO,oBAAOI,gBAAP,CAAwBL,cAAxB,EAAwCE,cAAxC,EAAwD,IAAxD,CAAP;AACD,CAJD;;AAMA;AACA;;AAEA;AACA;AACA,IAAMI,wCAAwC,SAAxCA,qCAAwC,CAACC,YAAD,EAAkB;AAC9D,MAAMC,mBAAmBD,aAAa,CAAb,MAAoB,GAApB,GAA0BA,YAA1B,SAA6CA,YAAtE;AACA,MAAME,UAAU,gBAAhB;AACA,MAAMC,uBAAuBF,iBAAiBG,WAAjB,CAA6BF,OAA7B,CAA7B;;AAEA,MAAIC,yBAAyB,CAA7B,EAAgC;AAC9B,QAAME,aAAY,EAAlB;AACA,QAAMC,sBAAqBN,aAAaO,KAAb,CAAmBL,QAAQM,MAAR,GAAiB,CAApC,CAA3B;AACA;AACA,WAAO;AACLH,2BADK;AAELC;AAFK,KAAP;AAID;;AAED,MAAMD,YAAYL,aAAaO,KAAb,CAAmB,CAAnB,EAAsBJ,uBAAuB,CAA7C,CAAlB;AACA,MAAMG,qBAAqBN,aAAaO,KAAb,CAAmBJ,uBAAuBD,QAAQM,MAA/B,GAAwC,CAA3D,CAA3B;AACA;AACA,SAAO;AACLH,wBADK;AAELC;AAFK,GAAP;AAID,CAtBD;;AAwBO,IAAMG,kCAAa,SAAbA,UAAa,CAACC,gBAAD,EAAmBC,gBAAnB,EAAwC;AAChE,MAAID,iBAAiBE,UAAjB,CAA4B,eAA5B,CAAJ,EAAkD;AAAA,gCACNb,sCACxCW,gBADwC,CADM;AAAA,QACxCL,SADwC,yBACxCA,SADwC;AAAA,QAC7BC,kBAD6B,yBAC7BA,kBAD6B;;AAKhD,QAAIO,eAAeF,gBAAnB;AACA,QAAIN,SAAJ,EAAe;AACbQ,4BAAoBR,SAApB;AACD;AACDQ;;AAEA,QAAI;AACF,aAAOC,QAAQC,OAAR,CAAgBvB,iBAAiBc,kBAAjB,EAAqCO,YAArC,CAAhB,CAAP;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU;AACV,UAAIA,KAAKA,EAAEC,IAAF,KAAW,kBAApB,EAAwC;AACtC,eAAOH,QAAQI,MAAR,CAAe,EAAEC,QAAQ,GAAV,EAAeC,QAAQ,kBAAvB,EAAf,CAAP;AACD;AACD,YAAMJ,CAAN;AACD;AACF;;AAED,SAAOF,QAAQC,OAAR,CAAgB,0BAAYJ,gBAAZ,EAA8BD,gBAA9B,CAAhB,CAAP;AACD,CAvBM","file":"locateFile.js","sourcesContent":["import Module from \"module\"\nimport { resolvePath } from \"./helpers.js\"\n\nconst locateNodeModule = (moduleLocation, location) => {\n  const requireContext = new Module(location)\n  requireContext.paths = Module._nodeModulePaths(location)\n  return Module._resolveFilename(moduleLocation, requireContext, true)\n}\n\n// \"node_modules/aaa/main.js\"\n// returns { dependent: \"\": relativeDependency: \"aaa/main.js\"}\n\n// \"node_modules/bbb/node_modules/aaa/index.js\"\n// returns { dependent: \"node_modules/bbb\", relativeDependency: \"aaa/index.js\"}\nconst getNodeDependentAndRelativeDependency = (fileLocation) => {\n  const prefixedLocation = fileLocation[0] === \"/\" ? fileLocation : `/${fileLocation}`\n  const pattern = \"/node_modules/\"\n  const lastNodeModulesIndex = prefixedLocation.lastIndexOf(pattern)\n\n  if (lastNodeModulesIndex === 0) {\n    const dependent = \"\"\n    const relativeDependency = fileLocation.slice(pattern.length - 1)\n    // console.log(\"node location\", location, \"means\", { dependent, relativeDependency })\n    return {\n      dependent,\n      relativeDependency,\n    }\n  }\n\n  const dependent = fileLocation.slice(0, lastNodeModulesIndex - 1)\n  const relativeDependency = fileLocation.slice(lastNodeModulesIndex + pattern.length - 1)\n  // console.log(\"node location\", location, \"means\", { dependent, relativeDependency })\n  return {\n    dependent,\n    relativeDependency,\n  }\n}\n\nexport const locateFile = (relativeLocation, absoluteLocation) => {\n  if (relativeLocation.startsWith(\"node_modules/\")) {\n    const { dependent, relativeDependency } = getNodeDependentAndRelativeDependency(\n      relativeLocation,\n    )\n\n    let nodeLocation = absoluteLocation\n    if (dependent) {\n      nodeLocation += `/${dependent}`\n    }\n    nodeLocation += `/node_modules`\n\n    try {\n      return Promise.resolve(locateNodeModule(relativeDependency, nodeLocation))\n    } catch (e) {\n      if (e && e.code === \"MODULE_NOT_FOUND\") {\n        return Promise.reject({ status: 404, reason: \"MODULE_NOT_FOUND\" })\n      }\n      throw e\n    }\n  }\n\n  return Promise.resolve(resolvePath(absoluteLocation, relativeLocation))\n}\n"]}