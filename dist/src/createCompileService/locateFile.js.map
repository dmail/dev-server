{
  "version": 3,
  "sources": [
    "../../../src/createCompileService/locateFile.js"
  ],
  "names": [
    "locateNodeModule",
    "moduleLocation",
    "location",
    "requireContext",
    "Module",
    "paths",
    "_nodeModulePaths",
    "_resolveFilename",
    "getNodeDependentAndRelativeDependency",
    "fileLocation",
    "prefixedLocation",
    "pattern",
    "lastNodeModulesIndex",
    "lastIndexOf",
    "dependent",
    "relativeDependency",
    "slice",
    "length",
    "locateFile",
    "relativeLocation",
    "absoluteLocation",
    "startsWith",
    "nodeLocation",
    "Promise",
    "resolve",
    "e",
    "code",
    "reject",
    "status",
    "reason"
  ],
  "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,gBAAgB,GAAG,CAACC,cAAD,EAAiBC,QAAjB,KAA8B;AACrD,QAAMC,cAAc,GAAG,IAAIC,eAAJ,CAAWF,QAAX,CAAvB;AACAC,EAAAA,cAAc,CAACE,KAAf,GAAuBD,gBAAOE,gBAAP,CAAwBJ,QAAxB,CAAvB;AACA,SAAOE,gBAAOG,gBAAP,CAAwBN,cAAxB,EAAwCE,cAAxC,EAAwD,IAAxD,CAAP;AACD,CAJD,C,CAMA;AACA;AAEA;AACA;;;AACA,MAAMK,qCAAqC,GAAIC,YAAD,IAAkB;AAC9D,QAAMC,gBAAgB,GAAGD,YAAY,CAAC,CAAD,CAAZ,KAAoB,GAApB,GAA0BA,YAA1B,GAA0C,IAAGA,YAAa,EAAnF;AACA,QAAME,OAAO,GAAG,gBAAhB;AACA,QAAMC,oBAAoB,GAAGF,gBAAgB,CAACG,WAAjB,CAA6BF,OAA7B,CAA7B;;AAEA,MAAIC,oBAAoB,KAAK,CAA7B,EAAgC;AAC9B,UAAME,SAAS,GAAG,EAAlB;AACA,UAAMC,kBAAkB,GAAGN,YAAY,CAACO,KAAb,CAAmBL,OAAO,CAACM,MAAR,GAAiB,CAApC,CAA3B,CAF8B,CAG9B;;AACA,WAAO;AACLH,MAAAA,SADK;AAELC,MAAAA;AAFK,KAAP;AAID;;AAED,QAAMD,SAAS,GAAGL,YAAY,CAACO,KAAb,CAAmB,CAAnB,EAAsBJ,oBAAoB,GAAG,CAA7C,CAAlB;AACA,QAAMG,kBAAkB,GAAGN,YAAY,CAACO,KAAb,CAAmBJ,oBAAoB,GAAGD,OAAO,CAACM,MAA/B,GAAwC,CAA3D,CAA3B,CAhB8D,CAiB9D;;AACA,SAAO;AACLH,IAAAA,SADK;AAELC,IAAAA;AAFK,GAAP;AAID,CAtBD;;AAwBO,MAAMG,UAAU,GAAG,CAACC,gBAAD,EAAmBC,gBAAnB,KAAwC;AAChE,MAAID,gBAAgB,CAACE,UAAjB,CAA4B,eAA5B,CAAJ,EAAkD;AAChD,UAAM;AAAEP,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAoCP,qCAAqC,CAC7EW,gBAD6E,CAA/E;AAIA,QAAIG,YAAY,GAAGF,gBAAnB;;AACA,QAAIN,SAAJ,EAAe;AACbQ,MAAAA,YAAY,IAAK,IAAGR,SAAU,EAA9B;AACD;;AACDQ,IAAAA,YAAY,IAAK,eAAjB;;AAEA,QAAI;AACF,aAAOC,OAAO,CAACC,OAAR,CAAgBxB,gBAAgB,CAACe,kBAAD,EAAqBO,YAArB,CAAhC,CAAP;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU;AACV,UAAIA,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAApB,EAAwC;AACtC,eAAOH,OAAO,CAACI,MAAR,CAAe;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,MAAM,EAAE;AAAvB,SAAf,CAAP;AACD;;AACD,YAAMJ,CAAN;AACD;AACF;;AAED,SAAOF,OAAO,CAACC,OAAR,CAAgB,0BAAYJ,gBAAZ,EAA8BD,gBAA9B,CAAhB,CAAP;AACD,CAvBM",
  "sourcesContent": [
    "import Module from \"module\"\nimport { resolvePath } from \"./helpers.js\"\n\nconst locateNodeModule = (moduleLocation, location) => {\n  const requireContext = new Module(location)\n  requireContext.paths = Module._nodeModulePaths(location)\n  return Module._resolveFilename(moduleLocation, requireContext, true)\n}\n\n// \"node_modules/aaa/main.js\"\n// returns { dependent: \"\": relativeDependency: \"aaa/main.js\"}\n\n// \"node_modules/bbb/node_modules/aaa/index.js\"\n// returns { dependent: \"node_modules/bbb\", relativeDependency: \"aaa/index.js\"}\nconst getNodeDependentAndRelativeDependency = (fileLocation) => {\n  const prefixedLocation = fileLocation[0] === \"/\" ? fileLocation : `/${fileLocation}`\n  const pattern = \"/node_modules/\"\n  const lastNodeModulesIndex = prefixedLocation.lastIndexOf(pattern)\n\n  if (lastNodeModulesIndex === 0) {\n    const dependent = \"\"\n    const relativeDependency = fileLocation.slice(pattern.length - 1)\n    // console.log(\"node location\", location, \"means\", { dependent, relativeDependency })\n    return {\n      dependent,\n      relativeDependency,\n    }\n  }\n\n  const dependent = fileLocation.slice(0, lastNodeModulesIndex - 1)\n  const relativeDependency = fileLocation.slice(lastNodeModulesIndex + pattern.length - 1)\n  // console.log(\"node location\", location, \"means\", { dependent, relativeDependency })\n  return {\n    dependent,\n    relativeDependency,\n  }\n}\n\nexport const locateFile = (relativeLocation, absoluteLocation) => {\n  if (relativeLocation.startsWith(\"node_modules/\")) {\n    const { dependent, relativeDependency } = getNodeDependentAndRelativeDependency(\n      relativeLocation,\n    )\n\n    let nodeLocation = absoluteLocation\n    if (dependent) {\n      nodeLocation += `/${dependent}`\n    }\n    nodeLocation += `/node_modules`\n\n    try {\n      return Promise.resolve(locateNodeModule(relativeDependency, nodeLocation))\n    } catch (e) {\n      if (e && e.code === \"MODULE_NOT_FOUND\") {\n        return Promise.reject({ status: 404, reason: \"MODULE_NOT_FOUND\" })\n      }\n      throw e\n    }\n  }\n\n  return Promise.resolve(resolvePath(absoluteLocation, relativeLocation))\n}\n"
  ]
}