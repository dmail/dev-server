{
  "version": 3,
  "sources": [
    "../../../src/createCompileService/locaters.js"
  ],
  "names": [
    "getInputRelativeLocation",
    "abstractFolderRelativeLocation",
    "filename",
    "slice",
    "length",
    "getCacheFolderLocation",
    "rootLocation",
    "cacheFolderRelativeLocation",
    "rest",
    "getCacheDataLocation",
    "param",
    "JSON_FILE",
    "getBranchRelativeLocation",
    "branch",
    "name",
    "getOutputRelativeLocation",
    "path",
    "basename",
    "getBranchLocation",
    "getOutputLocation",
    "getOutputAssetLocation",
    "asset",
    "getSourceAbstractLocation",
    "inputRelativeLocation",
    "getSourceMapLocation",
    "outputRelativeLocation",
    "outputSourceMapName",
    "dirname",
    "getSourceMapAbstractLocation",
    "sourceMapKnowsExactLocation",
    "sourceMapUseAbsoluteLocation",
    "getSourceLocationForSourceMap",
    "context",
    "sourceLocation",
    "sourceMapLocation",
    "relative"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import { JSON_FILE } from \"./cache.js\"\nimport { resolvePath, normalizeSeparation } from \"./helpers.js\"\nimport path from \"path\"\n\nexport const getInputRelativeLocation = ({ abstractFolderRelativeLocation, filename }) => {\n  // 'compiled/folder/file.js' -> 'folder/file.js'\n  return filename.slice(abstractFolderRelativeLocation.length + 1)\n}\n\nexport const getCacheFolderLocation = ({ rootLocation, cacheFolderRelativeLocation, ...rest }) => {\n  return resolvePath(rootLocation, cacheFolderRelativeLocation, getInputRelativeLocation(rest))\n}\n\nexport const getCacheDataLocation = (param) => {\n  return resolvePath(getCacheFolderLocation(param), JSON_FILE)\n}\n\nexport const getBranchRelativeLocation = ({ cacheFolderRelativeLocation, branch, ...rest }) => {\n  return resolvePath(cacheFolderRelativeLocation, getInputRelativeLocation(rest), branch.name)\n}\n\nexport const getOutputRelativeLocation = ({ filename, ...rest }) => {\n  return resolvePath(getBranchRelativeLocation({ filename, ...rest }), path.basename(filename))\n}\n\nexport const getBranchLocation = ({ rootLocation, ...rest }) => {\n  return resolvePath(rootLocation, getBranchRelativeLocation(rest))\n}\n\nexport const getOutputLocation = ({ rootLocation, ...rest }) => {\n  return resolvePath(rootLocation, getOutputRelativeLocation(rest))\n}\n\nexport const getOutputAssetLocation = ({ asset, ...rest }) => {\n  return resolvePath(getBranchLocation(rest), asset.name)\n}\n\nexport const getSourceAbstractLocation = ({ rootLocation, inputRelativeLocation }) =>\n  resolvePath(rootLocation, inputRelativeLocation)\n\nexport const getSourceMapLocation = ({\n  rootLocation,\n  outputRelativeLocation,\n  outputSourceMapName,\n}) => resolvePath(rootLocation, path.dirname(outputRelativeLocation), outputSourceMapName)\n\nexport const getSourceMapAbstractLocation = ({\n  rootLocation,\n  abstractFolderRelativeLocation,\n  inputRelativeLocation,\n  outputSourceMapName,\n}) =>\n  resolvePath(\n    rootLocation,\n    abstractFolderRelativeLocation,\n    path.dirname(inputRelativeLocation),\n    outputSourceMapName,\n  )\n\nconst sourceMapKnowsExactLocation = false\nconst sourceMapUseAbsoluteLocation = true\n\nexport const getSourceLocationForSourceMap = (context) => {\n  if (sourceMapUseAbsoluteLocation) {\n    return `/${context.inputRelativeLocation}`\n  }\n\n  const sourceLocation = getSourceAbstractLocation(context)\n  const sourceMapLocation = sourceMapKnowsExactLocation\n    ? getSourceMapLocation(context)\n    : getSourceMapAbstractLocation(context)\n\n  return normalizeSeparation(path.relative(path.dirname(sourceMapLocation), sourceLocation))\n}\n"
  ]
}