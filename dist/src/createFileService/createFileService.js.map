{
  "version": 3,
  "sources": [
    "../../../src/createFileService/createFileService.js"
  ],
  "names": [
    "mimetype",
    "pathname",
    "defaultMimetype",
    "mimetypes",
    "txt",
    "html",
    "css",
    "appcache",
    "js",
    "json",
    "map",
    "xml",
    "gz",
    "zip",
    "pdf",
    "png",
    "gif",
    "jpg",
    "mp3",
    "suffix",
    "path",
    "extname",
    "slice",
    "stat",
    "location",
    "Promise",
    "resolve",
    "reject",
    "fs",
    "error",
    "readFile",
    "buffer",
    "String",
    "listDirectoryContent",
    "readdir",
    "ressourceNames",
    "createFileService",
    "canReadDirectory",
    "getFileStat",
    "getFileContentAsString",
    "method",
    "url",
    "headers",
    "status",
    "fileURL",
    "URL",
    "fileLocation",
    "os",
    "platform",
    "then",
    "isDirectory",
    "reason",
    "mtime",
    "toUTCString",
    "JSON",
    "stringify",
    "directoryListAsJSON",
    "length",
    "body",
    "cachedModificationDate",
    "Date",
    "e",
    "actualModificationDate",
    "Number",
    "cachedETag",
    "content",
    "eTag",
    "size",
    "ETag",
    "convertFileSystemErrorToResponseProperties",
    "createReadStream"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import fs from \"fs\"\nimport os from \"os\"\nimport path from \"path\"\nimport { URL } from \"url\"\nimport { createETag } from \"../createCompileService/helpers.js\"\nimport { convertFileSystemErrorToResponseProperties } from \"./convertFileSystemErrorToResponseProperties.js\"\n\nconst mimetype = (pathname) => {\n  const defaultMimetype = \"application/octet-stream\"\n\n  const mimetypes = {\n    // text\n    txt: \"text/plain\",\n    html: \"text/html\",\n    css: \"text/css\",\n    appcache: \"text/cache-manifest\",\n    // application\n    js: \"application/javascript\",\n    json: \"application/json\",\n    map: \"application/json\",\n    xml: \"application/xml\",\n    gz: \"application/x-gzip\",\n    zip: \"application/zip\",\n    pdf: \"application/pdf\",\n    // image\n    png: \"image/png\",\n    gif: \"image/gif\",\n    jpg: \"image/jpeg\",\n    // audio\n    mp3: \"audio/mpeg\",\n  }\n\n  const suffix = path.extname(pathname).slice(1)\n  if (suffix in mimetypes) {\n    return mimetypes[suffix]\n  }\n\n  return defaultMimetype\n}\n\nconst stat = (location) => {\n  return new Promise((resolve, reject) => {\n    fs.stat(location, (error, stat) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(stat)\n      }\n    })\n  })\n}\n\nconst readFile = (location) => {\n  return new Promise((resolve, reject) => {\n    fs.readFile(location, (error, buffer) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(String(buffer))\n      }\n    })\n  })\n}\n\nconst listDirectoryContent = (location) => {\n  return new Promise((resolve, reject) => {\n    fs.readdir(location, (error, ressourceNames) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(ressourceNames)\n      }\n    })\n  })\n}\n\nexport const createFileService = (\n  { canReadDirectory = false, getFileStat = stat, getFileContentAsString = readFile } = {},\n) => ({ method, url, headers }) => {\n  if (method !== \"GET\" && method !== \"HEAD\") {\n    return {\n      status: 501,\n    }\n  }\n\n  const fileURL = new URL(url)\n  // since https://github.com/nodejs/node/pull/10739\n  // fs methods supports url as path\n  // otherwise keep in mind that\n  // new URL('file:///path/to/file.js').pathname returns 'path/to/file.js' on MAC\n  // new URL('file:///C:/path/to/file.js').pathname returns '/C:/path/to/file.js' on WINDOWS\n  // in order words you have to remove the leading '/' on windows\n  // it does not work let's go path removing leading '/' on windows\n  // const fileLocation = fileURL.toString()\n  const fileLocation = os.platform() === \"win32\" ? fileURL.pathname.slice(1) : fileURL.pathname\n\n  return Promise.resolve()\n    .then(() => getFileStat(fileLocation))\n    .then((stat) => {\n      if (stat.isDirectory()) {\n        if (canReadDirectory === false) {\n          return {\n            status: 403,\n            reason: \"not allowed to read directory\",\n            headers: {\n              \"cache-control\": \"no-store\",\n              \"last-modified\": stat.mtime.toUTCString(),\n            },\n          }\n        }\n\n        return Promise.resolve()\n          .then(() => listDirectoryContent(fileLocation))\n          .then(JSON.stringify)\n          .then((directoryListAsJSON) => {\n            return {\n              status: 200,\n              headers: {\n                \"cache-control\": \"no-store\",\n                \"content-type\": \"application/json\",\n                \"content-length\": directoryListAsJSON.length,\n              },\n              body: directoryListAsJSON,\n            }\n          })\n      }\n\n      if (\"if-modified-since\" in headers) {\n        let cachedModificationDate\n        try {\n          cachedModificationDate = new Date(headers[\"if-modified-since\"])\n        } catch (e) {\n          return {\n            status: 400,\n            reason: \"if-modified-since header is not a valid date\",\n          }\n        }\n\n        const actualModificationDate = stat.mtime\n        if (Number(cachedModificationDate) < Number(actualModificationDate)) {\n          return {\n            status: 304,\n            headers: {\n              \"cache-control\": \"no-store\",\n            },\n          }\n        }\n      }\n\n      if (\"if-none-match\" in headers) {\n        const cachedETag = headers[\"if-none-match\"]\n        return Promise.resolve()\n          .then(() => getFileContentAsString(fileLocation))\n          .then((content) => {\n            const eTag = createETag(content)\n            if (cachedETag === eTag) {\n              return {\n                status: 304,\n                headers: {\n                  \"cache-control\": \"no-store\",\n                },\n              }\n            }\n            return {\n              status: 200,\n              headers: {\n                \"cache-control\": \"no-store\",\n                \"content-length\": stat.size,\n                \"content-type\": mimetype(url.pathname),\n                ETag: eTag,\n              },\n              body: content,\n            }\n          }, convertFileSystemErrorToResponseProperties)\n      }\n\n      return {\n        status: 200,\n        headers: {\n          \"cache-control\": \"no-store\",\n          \"content-length\": stat.size,\n          \"content-type\": mimetype(url.pathname),\n        },\n        body: fs.createReadStream(fileLocation),\n      }\n    }, convertFileSystemErrorToResponseProperties)\n}\n"
  ]
}