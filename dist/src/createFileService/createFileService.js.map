{
  "version": 3,
  "sources": [
    "../../../src/createFileService/createFileService.js"
  ],
  "names": [
    "mimetype",
    "pathname",
    "defaultMimetype",
    "mimetypes",
    "txt",
    "html",
    "css",
    "appcache",
    "js",
    "json",
    "map",
    "xml",
    "gz",
    "zip",
    "pdf",
    "png",
    "gif",
    "jpg",
    "mp3",
    "suffix",
    "path",
    "extname",
    "slice",
    "isErrorWithCode",
    "error",
    "code",
    "convertFileSystemErrorToResponseProperties",
    "status",
    "reason",
    "headers",
    "stat",
    "location",
    "Promise",
    "resolve",
    "reject",
    "fs",
    "readFile",
    "buffer",
    "String",
    "listDirectoryContent",
    "readdir",
    "ressourceNames",
    "createFileService",
    "include",
    "locate",
    "url",
    "canReadDirectory",
    "method",
    "requestHeaders",
    "body",
    "promise",
    "then",
    "fileURL",
    "URL",
    "fileLocation",
    "os",
    "platform",
    "cachedModificationDate",
    "has",
    "Date",
    "get",
    "e",
    "actualModificationDate",
    "mtime",
    "toUTCString",
    "isDirectory",
    "JSON",
    "stringify",
    "directoryListAsJSON",
    "length",
    "Number",
    "size",
    "cachedETag",
    "content",
    "eTag",
    "ETag",
    "createReadStream",
    "responseStatus",
    "responseReason",
    "responseHeaders",
    "responseBody",
    "Object",
    "assign"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import fs from \"fs\"\nimport os from \"os\"\nimport path from \"path\"\nimport { URL } from \"url\"\nimport { createETag } from \"../createCompileService/helpers.js\"\n\nconst mimetype = (pathname) => {\n  const defaultMimetype = \"application/octet-stream\"\n\n  const mimetypes = {\n    // text\n    txt: \"text/plain\",\n    html: \"text/html\",\n    css: \"text/css\",\n    appcache: \"text/cache-manifest\",\n    // application\n    js: \"application/javascript\",\n    json: \"application/json\",\n    map: \"application/json\",\n    xml: \"application/xml\",\n    gz: \"application/x-gzip\",\n    zip: \"application/zip\",\n    pdf: \"application/pdf\",\n    // image\n    png: \"image/png\",\n    gif: \"image/gif\",\n    jpg: \"image/jpeg\",\n    // audio\n    mp3: \"audio/mpeg\",\n  }\n\n  const suffix = path.extname(pathname).slice(1)\n  if (suffix in mimetypes) {\n    return mimetypes[suffix]\n  }\n\n  return defaultMimetype\n}\n\nconst isErrorWithCode = (error, code) => {\n  return typeof error === \"object\" && error.code === code\n}\n\nexport const convertFileSystemErrorToResponseProperties = (error) => {\n  // https://iojs.org/api/errors.html#errors_eacces_permission_denied\n  if (isErrorWithCode(error, \"EACCES\")) {\n    return {\n      status: 403,\n      reason: \"no permission to read file\",\n    }\n  }\n\n  if (isErrorWithCode(error, \"EPERM\")) {\n    return {\n      status: 403,\n      reason: \"no permission to read file\",\n    }\n  }\n\n  if (isErrorWithCode(error, \"ENOENT\")) {\n    return {\n      status: 404,\n      reason: \"file not found\",\n    }\n  }\n\n  // file access may be temporarily blocked\n  // (by an antivirus scanning it because recently modified for instance)\n  if (isErrorWithCode(error, \"EBUSY\")) {\n    return {\n      status: 503,\n      reason: \"file is busy\",\n      headers: {\n        \"retry-after\": 0.01, // retry in 10ms\n      },\n    }\n  }\n\n  // emfile means there is too many files currently opened\n  if (isErrorWithCode(error, \"EMFILE\")) {\n    return {\n      status: 503,\n      reason: \"too many file opened\",\n      headers: {\n        \"retry-after\": 0.1, // retry in 100ms\n      },\n    }\n  }\n\n  if (isErrorWithCode(error, \"EISDIR\")) {\n    return {\n      status: 500,\n      reason: \"Unexpected directory operation\",\n    }\n  }\n\n  return {\n    status: 500,\n    reason: \"unknown file system error\",\n  }\n}\n\nconst stat = (location) => {\n  return new Promise((resolve, reject) => {\n    fs.stat(location, (error, stat) => {\n      if (error) {\n        reject(convertFileSystemErrorToResponseProperties(error))\n      } else {\n        resolve(stat)\n      }\n    })\n  })\n}\n\nconst readFile = (location) => {\n  return new Promise((resolve, reject) => {\n    fs.readFile(location, (error, buffer) => {\n      if (error) {\n        reject(convertFileSystemErrorToResponseProperties(error))\n      } else {\n        resolve(String(buffer))\n      }\n    })\n  })\n}\n\nconst listDirectoryContent = (location) => {\n  return new Promise((resolve, reject) => {\n    fs.readdir(location, (error, ressourceNames) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(ressourceNames)\n      }\n    })\n  })\n}\n\nexport const createFileService = (\n  { include = () => true, locate = ({ url }) => url, canReadDirectory = false } = {},\n) => ({ method, url, headers: requestHeaders }) => {\n  if (!include(url)) {\n    return false\n  }\n\n  let status\n  let reason\n  const headers = {}\n  let body\n\n  headers[\"cache-control\"] = \"no-store\"\n\n  let promise\n\n  if (method === \"GET\" || method === \"HEAD\") {\n    promise = Promise.resolve(locate({ method, url })).then((fileURL) => {\n      fileURL = new URL(fileURL)\n      // since https://github.com/nodejs/node/pull/10739\n      // fs methods supports url as path\n      // otherwise keep in mind that\n      // new URL('file:///path/to/file.js').pathname returns 'path/to/file.js' on MAC\n      // new URL('file:///C:/path/to/file.js').pathname returns '/C:/path/to/file.js' on WINDOWS\n      // in order words you have to remove the leading '/' on windows\n      // it does not work let's go path removing leading '/' on windows\n      // const fileLocation = fileURL.toString()\n      const fileLocation = os.platform() === \"win32\" ? fileURL.pathname.slice(1) : fileURL.pathname\n\n      let cachedModificationDate\n      if (requestHeaders.has(\"if-modified-since\")) {\n        try {\n          cachedModificationDate = new Date(requestHeaders.get(\"if-modified-since\"))\n        } catch (e) {\n          status = 400\n          reason = \"if-modified-since header is not a valid date\"\n          return {\n            status,\n            reason,\n            headers,\n            body,\n          }\n        }\n      }\n\n      return stat(fileLocation).then(\n        (stat) => {\n          const actualModificationDate = stat.mtime\n\n          headers[\"last-modified\"] = actualModificationDate.toUTCString()\n\n          if (stat.isDirectory()) {\n            if (canReadDirectory === false) {\n              status = 403\n              reason = \"not allowed to read directory\"\n              return\n            }\n\n            return listDirectoryContent(fileLocation)\n              .then(JSON.stringify)\n              .then((directoryListAsJSON) => {\n                status = 200\n                headers[\"content-type\"] = \"application/json\"\n                headers[\"content-length\"] = directoryListAsJSON.length\n                body = directoryListAsJSON\n              })\n          }\n\n          if (\n            cachedModificationDate &&\n            Number(cachedModificationDate) < Number(actualModificationDate)\n          ) {\n            status = 304\n            return\n          }\n\n          headers[\"content-length\"] = stat.size\n\n          const cachedETag = requestHeaders.get(\"if-none-match\")\n          if (cachedETag) {\n            return readFile(fileLocation).then((content) => {\n              const eTag = createETag(content)\n              if (cachedETag === eTag) {\n                status = 304\n              } else {\n                status = 200\n                headers[\"content-type\"] = mimetype(url.pathname)\n                headers.ETag = eTag\n                body = content\n              }\n            })\n          }\n\n          status = 200\n          headers[\"content-type\"] = mimetype(url.pathname)\n          body = fs.createReadStream(fileLocation)\n        },\n        ({\n          status: responseStatus,\n          reason: responseReason,\n          headers: responseHeaders = {},\n          body: responseBody,\n        }) => {\n          status = responseStatus\n          reason = responseReason\n          Object.assign(headers, responseHeaders)\n          body = responseBody\n          return Promise.resolve()\n        },\n      )\n    })\n  } else {\n    status = 501\n    promise = Promise.resolve()\n  }\n\n  return promise.then(() => {\n    return {\n      status,\n      reason,\n      headers,\n      body,\n    }\n  })\n}\n"
  ]
}