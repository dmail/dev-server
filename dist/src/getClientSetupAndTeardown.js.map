{"version":3,"sources":["../../src/getClientSetupAndTeardown.js"],"names":["teardownForOutputAndCoverage","namespace","Promise","resolve","output","then","globalObject","window","global","coverage","__coverage__","teardownForOutput","getTeardown","collectCoverage","collectTest","getBrowserSetupAndTeardowm","setup","teardown","getNodeSetupAndTeardowm"],"mappings":";;;;;AAAA;AACA;;AAEA,IAAMA,+BAA+B,SAA/BA,4BAA+B,CAACC,SAAD,EAAe;AAClD,SAAOC,QAAQC,OAAR,CAAgBF,UAAUG,MAA1B,EAAkCC,IAAlC,CAAuC,UAACD,MAAD,EAAY;AACxD,QAAME,eAAe,OAAOC,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCC,MAA3D;;AAEA,WAAO;AACLJ,oBADK;AAELK,gBAAU,kBAAkBH,YAAlB,GAAiCA,aAAaI,YAA9C,GAA6D;AAFlE,KAAP;AAID,GAPM,CAAP;AAQD,CATD;;AAWA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACV,SAAD,EAAe;AACvC,SAAOC,QAAQC,OAAR,CAAgBF,UAAUG,MAA1B,CAAP;AACD,CAFD;;AAIA,IAAMQ,cAAc,SAAdA,WAAc,OAAsC;AAAA,MAAnCC,eAAmC,QAAnCA,eAAmC;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AACxD,MAAIA,WAAJ,EAAiB;AACf,WAAOD,kBAAkBb,4BAAlB,GAAiDW,iBAAxD;AACD;AACD,SAAOE,kBAAkBb,4BAAlB,GAAiDW,iBAAxD;AACD,CALD;;AAOO,IAAMI,kEAA6B,SAA7BA,0BAA6B,QAAsC;AAAA,MAAnCF,eAAmC,SAAnCA,eAAmC;AAAA,MAAlBC,WAAkB,SAAlBA,WAAkB;;AAC9E,MAAME,QAAQ,SAARA,KAAQ,GAAM,CAAE,CAAtB;;AAEA,SAAO;AACLA,gBADK;AAELC,cAAUL,YAAY,EAAEC,gCAAF,EAAmBC,wBAAnB,EAAZ;AAFL,GAAP;AAID,CAPM;;AASA,IAAMI,4DAA0B,SAA1BA,uBAA0B,QAAsC;AAAA,MAAnCL,eAAmC,SAAnCA,eAAmC;AAAA,MAAlBC,WAAkB,SAAlBA,WAAkB;;AAC3E,MAAME,QAAQ,SAARA,KAAQ,GAAM,CAAE,CAAtB;;AAEA,SAAO;AACLA,gBADK;AAELC,cAAUL,YAAY,EAAEC,gCAAF,EAAmBC,wBAAnB,EAAZ;AAFL,GAAP;AAID,CAPM","file":"getClientSetupAndTeardown.js","sourcesContent":["// keep in mind that setup and teardown will be stringified and evaluated client side\n// you cannot use any variable from server\n\nconst teardownForOutputAndCoverage = (namespace) => {\n  return Promise.resolve(namespace.output).then((output) => {\n    const globalObject = typeof window === \"object\" ? window : global\n\n    return {\n      output,\n      coverage: \"__coverage__\" in globalObject ? globalObject.__coverage__ : null,\n    }\n  })\n}\n\nconst teardownForOutput = (namespace) => {\n  return Promise.resolve(namespace.output)\n}\n\nconst getTeardown = ({ collectCoverage, collectTest }) => {\n  if (collectTest) {\n    return collectCoverage ? teardownForOutputAndCoverage : teardownForOutput\n  }\n  return collectCoverage ? teardownForOutputAndCoverage : teardownForOutput\n}\n\nexport const getBrowserSetupAndTeardowm = ({ collectCoverage, collectTest }) => {\n  const setup = () => {}\n\n  return {\n    setup,\n    teardown: getTeardown({ collectCoverage, collectTest }),\n  }\n}\n\nexport const getNodeSetupAndTeardowm = ({ collectCoverage, collectTest }) => {\n  const setup = () => {}\n\n  return {\n    setup,\n    teardown: getTeardown({ collectCoverage, collectTest }),\n  }\n}\n"]}