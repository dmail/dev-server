{
  "version": 3,
  "sources": [
    "../../src/getClientSetupAndTeardown.js"
  ],
  "names": [
    "teardownForOutputAndCoverage",
    "namespace",
    "Promise",
    "resolve",
    "output",
    "then",
    "globalObject",
    "window",
    "global",
    "coverage",
    "__coverage__",
    "teardownForOutput",
    "getTeardown",
    "collectCoverage",
    "collectTest",
    "getBrowserSetupAndTeardowm",
    "setup",
    "teardown",
    "getNodeSetupAndTeardowm"
  ],
  "mappings": ";;;;;;;AAAA;AACA;AAEA,MAAMA,4BAA4B,GAAIC,SAAD,IAAe;AAClD,SAAOC,OAAO,CAACC,OAAR,CAAgBF,SAAS,CAACG,MAA1B,EAAkCC,IAAlC,CAAwCD,MAAD,IAAY;AACxD,UAAME,YAAY,GAAG,OAAOC,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCC,MAA3D;AAEA,WAAO;AACLJ,MAAAA,MADK;AAELK,MAAAA,QAAQ,EAAE,kBAAkBH,YAAlB,GAAiCA,YAAY,CAACI,YAA9C,GAA6D;AAFlE,KAAP;AAID,GAPM,CAAP;AAQD,CATD;;AAWA,MAAMC,iBAAiB,GAAIV,SAAD,IAAe;AACvC,SAAOC,OAAO,CAACC,OAAR,CAAgBF,SAAS,CAACG,MAA1B,CAAP;AACD,CAFD;;AAIA,MAAMQ,WAAW,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAsC;AACxD,MAAIA,WAAJ,EAAiB;AACf,WAAOD,eAAe,GAAGb,4BAAH,GAAkCW,iBAAxD;AACD;;AACD,SAAOE,eAAe,GAAGb,4BAAH,GAAkCW,iBAAxD;AACD,CALD;;AAOO,MAAMI,0BAA0B,GAAG,CAAC;AAAEF,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAsC;AAC9E,QAAME,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAAO;AACLA,IAAAA,KADK;AAELC,IAAAA,QAAQ,EAAEL,WAAW,CAAC;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAAD;AAFhB,GAAP;AAID,CAPM;;;;AASA,MAAMI,uBAAuB,GAAG,CAAC;AAAEL,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAsC;AAC3E,QAAME,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAAO;AACLA,IAAAA,KADK;AAELC,IAAAA,QAAQ,EAAEL,WAAW,CAAC;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAAD;AAFhB,GAAP;AAID,CAPM",
  "sourcesContent": [
    "// keep in mind that setup and teardown will be stringified and evaluated client side\n// you cannot use any variable from server\n\nconst teardownForOutputAndCoverage = (namespace) => {\n  return Promise.resolve(namespace.output).then((output) => {\n    const globalObject = typeof window === \"object\" ? window : global\n\n    return {\n      output,\n      coverage: \"__coverage__\" in globalObject ? globalObject.__coverage__ : null,\n    }\n  })\n}\n\nconst teardownForOutput = (namespace) => {\n  return Promise.resolve(namespace.output)\n}\n\nconst getTeardown = ({ collectCoverage, collectTest }) => {\n  if (collectTest) {\n    return collectCoverage ? teardownForOutputAndCoverage : teardownForOutput\n  }\n  return collectCoverage ? teardownForOutputAndCoverage : teardownForOutput\n}\n\nexport const getBrowserSetupAndTeardowm = ({ collectCoverage, collectTest }) => {\n  const setup = () => {}\n\n  return {\n    setup,\n    teardown: getTeardown({ collectCoverage, collectTest }),\n  }\n}\n\nexport const getNodeSetupAndTeardowm = ({ collectCoverage, collectTest }) => {\n  const setup = () => {}\n\n  return {\n    setup,\n    teardown: getTeardown({ collectCoverage, collectTest }),\n  }\n}\n"
  ]
}