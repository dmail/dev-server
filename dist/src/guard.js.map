{"version":3,"sources":["../../src/guard.js"],"names":["guard","fn","shield","shieldAction","isPassed","isFailed","undefined","Error","guardAsync","args","then"],"mappings":";;;;;;;AAAA;;AAEO,IAAMA,wBAAQ,SAARA,KAAQ,CAACC,EAAD,EAAKC,MAAL;AAAA,SAAgB,YAAa;AAChD,QAAMC,eAAe,oBAAOD,kCAAP,CAArB;;AAEA,QAAIC,aAAaC,QAAb,EAAJ,EAA6B;AAC3B,aAAOH,8BAAP;AACD;AACD,QAAIE,aAAaE,QAAb,EAAJ,EAA6B;AAC3B,aAAOC,SAAP;AACD;AACD,UAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACD,GAVoB;AAAA,CAAd;;AAYA,IAAMC,kCAAa,SAAbA,UAAa,CAACP,EAAD,EAAKC,MAAL;AAAA,SAAgB,YAAa;AAAA,sCAATO,IAAS;AAATA,UAAS;AAAA;;AACrD,WAAO,oBAAOP,wBAAUO,IAAV,CAAP,EAAwBC,IAAxB,CAA6B;AAAA,aAAMT,oBAAMQ,IAAN,CAAN;AAAA,KAA7B,CAAP;AACD,GAFyB;AAAA,CAAnB","file":"guard.js","sourcesContent":["import { passed } from \"@dmail/action\"\n\nexport const guard = (fn, shield) => (...args) => {\n  const shieldAction = passed(shield(...args))\n\n  if (shieldAction.isPassed()) {\n    return fn(...args)\n  }\n  if (shieldAction.isFailed()) {\n    return undefined\n  }\n  throw new Error(\"guard expect shield to pass/fail synchronously\")\n}\n\nexport const guardAsync = (fn, shield) => (...args) => {\n  return passed(shield(...args)).then(() => fn(...args))\n}\n"]}