{"version":3,"sources":["../../../src/openChromiumClient/openChromiumClient.js"],"names":["openIndexRequestInterception","url","page","body","setRequestInterception","then","on","interceptedRequest","startsWith","respond","status","contentType","headers","Buffer","byteLength","close","openChromiumClient","server","compileURL","openIndexRequestHandler","headless","mirrorConsole","runFile","serverURL","file","setup","teardown","evaluate","compileRoot","setupSource","teardownSource","evtSource","EventSource","addEventListener","e","console","log","Promise","resolve","eval","window","System","href","toString","Error","openBrowser","launch","ignoreHTTPSErrors","execute","autoClose","autoCloseOnError","collectCoverage","executeTest","closed","emit","promise","browser","listen","newPage","createPageUnexpectedBranch","reject","createPageExpectedBranch","message","_type","_text","title","html","indexRequestHandler","remoteFile","goto","String","race","value","reason"],"mappings":"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","file":"openChromiumClient.js","sourcesContent":["import puppeteer from \"puppeteer\"\nimport { createHTMLForBrowser } from \"../createHTMLForBrowser.js\"\nimport { openIndexServer } from \"../openIndexServer/openIndexServer.js\"\nimport { getRemoteLocation } from \"../getRemoteLocation.js\"\nimport { getBrowserSetupAndTeardowm } from \"../getClientSetupAndTeardown.js\"\nimport { createSignal } from \"@dmail/signal\"\n\nconst openIndexRequestInterception = ({ url, page, body }) => {\n  return page\n    .setRequestInterception(true)\n    .then(() => {\n      page.on(\"request\", (interceptedRequest) => {\n        if (interceptedRequest.url().startsWith(url)) {\n          interceptedRequest.respond({\n            status: 200,\n            contentType: \"text/html\",\n            headers: {\n              \"content-type\": \"text/html\",\n              \"content-length\": Buffer.byteLength(body),\n              \"cache-control\": \"no-store\",\n            },\n            body,\n          })\n          return\n        }\n      })\n    })\n    .then(() => {\n      return {\n        url,\n        close: () => page.setRequestInterception(false),\n      }\n    })\n}\n\nexport const openChromiumClient = ({\n  url = \"https://127.0.0.1:0\",\n  server,\n  compileURL,\n  openIndexRequestHandler = openIndexServer,\n  headless = true,\n  mirrorConsole = false,\n  runFile = ({ serverURL, page, file, setup, teardown }) => {\n    return page.evaluate(\n      (compileRoot, file, setupSource, teardownSource) => {\n        const evtSource = new EventSource(compileRoot)\n        evtSource.addEventListener(\"message\", (e) => {\n          console.log(\"received event\", e)\n        })\n\n        return Promise.resolve(file)\n          .then(eval(setupSource))\n          .then(() => window.System.import(file))\n          .then(eval(teardownSource))\n      },\n      serverURL.href,\n      file,\n      `(${setup.toString()})`,\n      `(${teardown.toString()})`,\n    )\n  },\n}) => {\n  if (openIndexRequestHandler === openIndexRequestInterception && headless === false) {\n    throw new Error(`openIndexRequestInterception work only in headless mode`)\n  }\n\n  const openBrowser = () => {\n    return puppeteer.launch({\n      headless,\n      ignoreHTTPSErrors: true, // because we use a self signed certificate\n      // handleSIGINT: true,\n      // handleSIGTERM: true,\n      // handleSIGHUP: true,\n      // because the 3 above are true by default pupeeter will auto close browser\n      // so we apparently don't have to use listenNodeBeforeExit in order to close browser\n      // as we do for server\n    })\n  }\n\n  // https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md\n  const execute = ({\n    file,\n    autoClose = false,\n    // autoCloseOnError is different than autoClose because you often want to keep browser opened to debug error\n    autoCloseOnError = false,\n    collectCoverage = false,\n    executeTest = false,\n  }) => {\n    const closed = createSignal()\n\n    const close = () => {\n      closed.emit()\n    }\n\n    const promise = openBrowser()\n      .then((browser) => {\n        closed.listen(() => {\n          browser.close()\n        })\n\n        return browser.newPage().then((page) => {\n          closed.listen(() => {\n            // page.close() // commented until https://github.com/GoogleChrome/puppeteer/issues/2269\n          })\n\n          const createPageUnexpectedBranch = (page) => {\n            return new Promise((resolve, reject) => {\n              // https://github.com/GoogleChrome/puppeteer/blob/v1.4.0/docs/api.md#event-error\n              page.on(\"error\", reject)\n              // https://github.com/GoogleChrome/puppeteer/blob/v1.4.0/docs/api.md#event-pageerror\n              page.on(\"pageerror\", reject)\n            })\n          }\n\n          const createPageExpectedBranch = (page) => {\n            if (mirrorConsole) {\n              page.on(\"console\", (message) => {\n                // there is also message._args\n                // which is an array of JSHandle{ _context, _client _remoteObject }\n                console[message._type](message._text)\n              })\n            }\n\n            return createHTMLForBrowser({\n              title: \"Skeleton for Chromium\",\n            }).then((html) => {\n              return openIndexRequestHandler({\n                url,\n                page,\n                body: html,\n              }).then((indexRequestHandler) => {\n                closed.listen(() => {\n                  indexRequestHandler.close()\n                })\n\n                const remoteFile = getRemoteLocation({\n                  compileURL,\n                  file,\n                })\n\n                return page.goto(String(indexRequestHandler.url)).then(() =>\n                  runFile({\n                    serverURL: server.url,\n                    page,\n                    file: remoteFile,\n                    ...getBrowserSetupAndTeardowm({ collectCoverage, executeTest }),\n                  }),\n                )\n              })\n            })\n          }\n\n          return Promise.race([createPageUnexpectedBranch(page), createPageExpectedBranch(page)])\n        })\n      })\n      .then(\n        (value) => {\n          if (autoClose) {\n            close()\n          }\n          return value\n        },\n        (reason) => {\n          if (autoCloseOnError) {\n            close()\n          }\n          return Promise.reject(reason)\n        },\n      )\n\n    return Promise.resolve({\n      promise,\n      close,\n    })\n  }\n\n  return Promise.resolve({ execute })\n}\n"]}