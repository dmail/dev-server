{"version":3,"sources":["../../../src/openChromiumClient/openChromiumClient.test.js"],"names":["url","rootLocation","resolve","__dirname","instrument","then","server","cleanAll","compileURL","headless","chromiumClient","execute","file","autoClose","collectCoverage","promise","close","value","console","log","reason","error"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AAEA;;AAEA;AACA,0CAAkB;AAChBA,OAAK,uBADW;AAEhBC,gBAAc,kBAAKC,OAAL,CAAaC,SAAb,EAAwB,WAAxB,CAFE;AAGhBC,cAAY,KAHI,CAGG;AAHH,CAAlB,EAIGC,IAJH,CAIQ,UAACC,MAAD,EAAY;AAClB,MAAMC,WAAW,KAAjB;;AAEA,SAAO,4CAAmB;AACxBC,gBAAYF,OAAOE,UADK;AAExBC,cAAU;AAFc,GAAnB,EAGJJ,IAHI,CAGC,UAACK,cAAD,EAAoB;AAC1BA,mBACGC,OADH,CACW;AACPC,uCADO;AAEPC,iBAAWN,QAFJ;AAGPO,uBAAiB;AAHV,KADX,EAMGT,IANH,CAMQ,gBAAwB;AAAA,UAArBU,OAAqB,QAArBA,OAAqB;AAAA,UAAZC,KAAY,QAAZA,KAAY;;AAC5BD,cAAQV,IAAR,CACE,UAACY,KAAD,EAAW;AACT,YAAIV,QAAJ,EAAc;AACZS;AACAV,iBAAOU,KAAP;AACD;AACDE,gBAAQC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACD,OAPH,EAQE,UAACG,MAAD,EAAY;AACV,YAAIb,QAAJ,EAAc;AACZS;AACAV,iBAAOU,KAAP;AACD;AACDE,gBAAQG,KAAR,CAAc,iBAAd,EAAiCD,MAAjC;AACD,OAdH;AAgBD,KAvBH;AAwBD,GA5BM,CAAP;AA6BD,CApCD","file":"openChromiumClient.test.js","sourcesContent":["import path from \"path\"\nimport { openCompileServer } from \"../openCompileServer/openCompileServer.js\"\nimport { openChromiumClient } from \"./openChromiumClient.js\"\n\n// System.import('http://127.0.0.1:9656/compiled/src/__test__/file.js')\n\n// retester\nopenCompileServer({\n  url: \"http://127.0.0.1:9656\",\n  rootLocation: path.resolve(__dirname, \"../../../\"),\n  instrument: false, // apparently it breaks sourcempa, to be tested\n}).then((server) => {\n  const cleanAll = false\n\n  return openChromiumClient({\n    compileURL: server.compileURL,\n    headless: false,\n  }).then((chromiumClient) => {\n    chromiumClient\n      .execute({\n        file: `src/__test__/file.test.js`,\n        autoClose: cleanAll,\n        collectCoverage: true,\n      })\n      .then(({ promise, close }) => {\n        promise.then(\n          (value) => {\n            if (cleanAll) {\n              close()\n              server.close()\n            }\n            console.log(\"execution done with\", value)\n          },\n          (reason) => {\n            if (cleanAll) {\n              close()\n              server.close()\n            }\n            console.error(\"execution error\", reason)\n          },\n        )\n      })\n  })\n})\n"]}