{"version":3,"sources":["../../../src/openCompileServer/createSSERoom.js"],"names":["stringifySourceEvent","data","type","id","retry","string","undefined","createEventHistory","limit","events","removedCount","add","push","length","shift","since","index","parseInt","isNaN","TypeError","slice","reset","createSSERoom","keepaliveDuration","retryDuration","historyLength","maxLength","connections","Set","history","lastEventId","state","interval","connect","size","status","joinEvent","Date","toLocaleTimeString","connection","closed","listen","console","log","forEach","event","write","headers","body","sendEvent","keepAlive","open","setInterval","close","clearInterval"],"mappings":"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","file":"createSSERoom.js","sourcesContent":["import { createBody } from \"../openServer/createBody.js\"\n\n// https://github.com/dmail-old/project/commit/da7d2c88fc8273850812972885d030a22f9d7448\n// https://github.com/dmail-old/project/commit/98b3ae6748d461ac4bd9c48944a551b1128f4459\n\n// https://github.com/dmail-old/http-eventsource/blob/master/lib/event-source.js\n\n// http://html5doctor.com/server-sent-events/\nconst stringifySourceEvent = ({ data, type = \"message\", id, retry }) => {\n  let string = \"\"\n\n  if (id !== undefined) {\n    string += `id:${id}\\n`\n  }\n\n  if (retry) {\n    string += `retry:${retry}\\n`\n  }\n\n  if (type !== \"message\") {\n    string += `event:${type}\\n`\n  }\n\n  string += `data:${data}\\n\\n`\n\n  return string\n}\n\nconst createEventHistory = ({ limit } = {}) => {\n  const events = []\n  let removedCount = 0\n\n  const add = (data) => {\n    events.push(data)\n\n    if (events.length >= limit) {\n      events.shift()\n      removedCount++\n    }\n  }\n\n  const since = (index) => {\n    index = parseInt(index)\n    if (isNaN(index)) {\n      throw new TypeError(\"history.since() expect a number\")\n    }\n    index -= removedCount\n    return index < 0 ? [] : events.slice(index)\n  }\n\n  const reset = () => {\n    events.length = 0\n    removedCount = 0\n  }\n\n  return { add, since, reset }\n}\n\n// https://www.html5rocks.com/en/tutorials/eventsource/basics/\nexport const createSSERoom = (\n  {\n    keepaliveDuration = 30000,\n    retryDuration = 1000,\n    historyLength = 1000,\n    maxLength = 100, // max 100 users accepted\n  } = {},\n) => {\n  const connections = new Set()\n  const history = createEventHistory(historyLength)\n  let lastEventId = 0\n  let state = \"closed\"\n  let interval\n\n  const connect = (lastEventId) => {\n    if (connections.size > maxLength) {\n      return {\n        status: 503,\n      }\n    }\n    if (state === \"closed\") {\n      return {\n        status: 204,\n      }\n    }\n\n    const joinEvent = {\n      id: lastEventId,\n      retry: retryDuration,\n      type: \"join\",\n      data: new Date().toLocaleTimeString(),\n    }\n    lastEventId++\n    history.add(joinEvent)\n\n    const events = [\n      joinEvent,\n      // send events which occured between lastEventId & now\n      ...(lastEventId === undefined ? [] : history.since(lastEventId)),\n    ]\n\n    const connection = createBody()\n    connections.add(connection)\n    connection.closed.listen(() => {\n      console.log(\n        `client disconnected, number of client connected to event source: ${connections.size}`,\n      )\n      connections.delete(connection)\n    })\n\n    console.log(\n      `client joined, number of client connected to event source: ${\n        connections.size\n      }, max allowed: ${maxLength}`,\n    )\n\n    events.forEach((event) => {\n      console.log(`send ${event.type} event to this new client`)\n      connection.write(stringifySourceEvent(event))\n    })\n\n    return {\n      status: 200,\n      headers: {\n        \"content-type\": \"text/event-stream\",\n        \"cache-control\": \"no-cache\",\n        connection: \"keep-alive\",\n      },\n      body: connection,\n    }\n  }\n\n  const write = (data) => {\n    connections.forEach((connection) => {\n      connection.write(data)\n    })\n  }\n\n  const sendEvent = (event) => {\n    if (event.type !== \"comment\") {\n      console.log(\n        `send ${event.type} event, number of client listening event source: ${connections.size}`,\n      )\n      event.id = lastEventId\n      lastEventId++\n      history.add(event)\n    }\n\n    write(stringifySourceEvent(event))\n  }\n\n  const keepAlive = () => {\n    // maybe that, when an event occurs, we can delay the keep alive event\n    console.log(\n      `send keep alive event, number of client listening event source: ${connections.size}`,\n    )\n    sendEvent({\n      type: \"comment\",\n      data: new Date().toLocaleTimeString(),\n    })\n  }\n\n  const open = () => {\n    interval = setInterval(keepAlive, keepaliveDuration)\n    state = \"opened\"\n  }\n\n  const close = () => {\n    // it should close every connection no?\n    clearInterval(interval)\n    history.reset()\n    state = \"closed\"\n  }\n\n  return { open, close, connect, sendEvent }\n}\n"]}