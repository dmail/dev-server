{"version":3,"sources":["../../../src/openCompileServer/identifier.js"],"names":["writeSourceLocation","code","location","writeSourceURL","rootLocation","compiledFolderRelativeLocation","inputRelativeLocation","outputRelativeLocation","clientLocation","resolve","serverLocation","relativeLocation","relative","identifier","options","context","rest"],"mappings":";;;;;;;;;AAAA;;;;;;;;AAEA,IAAMA,sBAAsB,SAAtBA,mBAAsB,OAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAClD,SAAUD,IAAV,wBACcC,QADd;AAED,CAHD;;AAKA,IAAMC,iBAAiB,SAAjBA,cAAiB,CACrBF,IADqB,SAGlB;AAAA,MADDG,YACC,SADDA,YACC;AAAA,MADaC,8BACb,SADaA,8BACb;AAAA,MAD6CC,qBAC7C,SAD6CA,qBAC7C;AAAA,MADoEC,sBACpE,SADoEA,sBACpE;;AACH;AACA,MAAMC,iBAAiB,kBAAKC,OAAL,CACrBL,YADqB,EAElBC,8BAFkB,SAEgBC,qBAFhB,CAAvB;AAIA;AACA,MAAMI,iBAAiB,kBAAKD,OAAL,CAAaL,YAAb,EAA2BG,sBAA3B,CAAvB;AACA;AACA,MAAMI,mBAAmB,kBAAKC,QAAL,CAAcJ,cAAd,EAA8BE,cAA9B,CAAzB;;AAEA,SAAOV,oBAAoB,EAAEC,UAAF,EAAQC,UAAUS,gBAAlB,EAApB,CAAP;AACD,CAfD;;AAiBO,IAAME,aAAa,SAAbA,UAAa,QAAoBC,OAApB,EAA6BC,OAA7B,EAAyC;AAAA,MAAtCd,IAAsC,SAAtCA,IAAsC;AAAA,MAA7Be,IAA6B;;AACjE;AACEf,UAAME,eAAeF,IAAf,EAAqBc,OAArB;AADR,KAEKC,IAFL;AAID,CALM","file":"identifier.js","sourcesContent":["import path from \"path\"\n\nconst writeSourceLocation = ({ code, location }) => {\n  return `${code}\n//# sourceURL=${location}`\n}\n\nconst writeSourceURL = (\n  code,\n  { rootLocation, compiledFolderRelativeLocation, inputRelativeLocation, outputRelativeLocation },\n) => {\n  // client thinks we are at compiled/folder/file.js\n  const clientLocation = path.resolve(\n    rootLocation,\n    `${compiledFolderRelativeLocation}/${inputRelativeLocation}`,\n  )\n  // but the file is at build/folder/file.js/sjklqdjkljkljlk/file.js\n  const serverLocation = path.resolve(rootLocation, outputRelativeLocation)\n  // so client can found it at ../../build/folder/file.js/sjklqdjkljkljlk/file.js\n  const relativeLocation = path.relative(clientLocation, serverLocation)\n\n  return writeSourceLocation({ code, location: relativeLocation })\n}\n\nexport const identifier = ({ code, ...rest }, options, context) => {\n  return {\n    code: writeSourceURL(code, context),\n    ...rest,\n  }\n}\n"]}