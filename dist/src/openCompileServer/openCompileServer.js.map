{
  "version": 3,
  "sources": [
    "../../../src/openCompileServer/openCompileServer.js"
  ],
  "names": [
    "guard",
    "fn",
    "shield",
    "args",
    "undefined",
    "openCompileServer",
    "url",
    "autoCloseOnExit",
    "autoCloseOnCrash",
    "autoCloseOnError",
    "watch",
    "rootLocation",
    "cacheFolderRelativeLocation",
    "abstractFolderRelativeLocation",
    "cors",
    "transpile",
    "sourceMap",
    "sourceURL",
    "minify",
    "optimize",
    "instrument",
    "then",
    "addRequestHandler",
    "close",
    "closed",
    "createWatchServices",
    "fileChangedSSE",
    "open",
    "watchedFiles",
    "Map",
    "listenOnce",
    "forEach",
    "closeWatcher",
    "clear",
    "watchPredicate",
    "relativeFilename",
    "endsWith",
    "headers",
    "get",
    "connect",
    "pathname",
    "slice",
    "dirname",
    "indexOf",
    "length",
    "filename",
    "has",
    "fileWatcher",
    "sendEvent",
    "type",
    "data",
    "set",
    "compileFileFromCompileService",
    "createCompileServiceCustom",
    "compile",
    "createOptions",
    "remap",
    "remapMethod",
    "identify",
    "identifyMethod",
    "service",
    "compileService",
    "compileFile",
    "trackHit",
    "method",
    "createFileServiceCustom",
    "fileService",
    "previousFileService",
    "props",
    "fileURL",
    "URL",
    "handler",
    "services",
    "response",
    "compileURL"
  ],
  "mappings": "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",
  "sourcesContent": [
    "// https://github.com/jsenv/core/blob/master/src/api/util/transpiler.js\n\n/* eslint-disable import/max-dependencies */\nimport { URL } from \"url\"\nimport { createCompile } from \"../createCompile/createCompile.js\"\nimport { createCompileService } from \"../createCompileService/index.js\"\nimport { createFileService } from \"../createFileService/index.js\"\nimport { createResponseGenerator } from \"../openServer/createResponseGenerator.js\"\nimport { enableCORS } from \"../openServer/createNodeRequestHandler.js\"\nimport { openServer } from \"../openServer/openServer.js\"\nimport { createSSERoom } from \"./createSSERoom.js\"\nimport { watchFile } from \"../watchFile.js\"\n\nconst guard = (fn, shield) => (...args) => {\n  return shield(...args) ? fn(...args) : undefined\n}\n\nexport const openCompileServer = ({\n  // server options\n  url,\n  autoCloseOnExit,\n  autoCloseOnCrash,\n  autoCloseOnError,\n  watch = false,\n  // compile options\n  rootLocation,\n  cacheFolderRelativeLocation = \"build\",\n  abstractFolderRelativeLocation = \"compiled\",\n  cors = true,\n  transpile = true,\n  sourceMap = \"comment\", // can be \"comment\", \"inline\", \"none\"\n  sourceURL = true,\n  minify = false,\n  optimize = false,\n  instrument = false,\n}) => {\n  return openServer({\n    url,\n    autoCloseOnExit,\n    autoCloseOnCrash,\n    autoCloseOnError,\n  }).then(({ url, addRequestHandler, close, closed }) => {\n    const createWatchServices = () => {\n      // https://github.com/dmail-old/http-eventsource/tree/master/lib\n\n      const fileChangedSSE = createSSERoom()\n      fileChangedSSE.open()\n      const watchedFiles = new Map()\n      closed.listenOnce(() => {\n        watchedFiles.forEach((closeWatcher) => closeWatcher())\n        watchedFiles.clear()\n        fileChangedSSE.close()\n      })\n      const watchPredicate = (relativeFilename) => {\n        // for now watch only js files (0 not favicon or .map files)\n        return relativeFilename.endsWith(\".js\")\n      }\n\n      return [\n        ({ headers }) => {\n          if (headers.get(\"accept\") === \"text/event-stream\") {\n            return fileChangedSSE.connect(headers.get(\"last-event-id\"))\n          }\n        },\n        ({ url }) => {\n          let relativeFilename = url.pathname.slice(1)\n          const dirname = relativeFilename.slice(0, relativeFilename.indexOf(\"/\"))\n          if (dirname === abstractFolderRelativeLocation) {\n            // when I ask for a compiled file, watch the corresponding file on filesystem\n            relativeFilename = relativeFilename.slice(abstractFolderRelativeLocation.length + 1)\n          }\n\n          const filename = `${rootLocation}/${relativeFilename}`\n\n          if (watchedFiles.has(filename) === false && watchPredicate(relativeFilename)) {\n            const fileWatcher = watchFile(filename, () => {\n              fileChangedSSE.sendEvent({\n                type: \"file-changed\",\n                data: relativeFilename,\n              })\n            })\n            watchedFiles.set(url, fileWatcher)\n          }\n        },\n      ]\n    }\n\n    let compileFileFromCompileService\n    const createCompileServiceCustom = () => {\n      const compile = createCompile({\n        createOptions: () => {\n          // we should use a token or something to prevent a browser from being taken for nodejs\n          // because will have security impact as we are going to trust this\n          // const isNodeClient =\n          //   request.headers.has(\"user-agent\") &&\n          //   request.headers.get(\"user-agent\").startsWith(\"node-fetch\")\n\n          const remap = sourceMap === \"comment\" || sourceMap === \"inline\"\n          const remapMethod = sourceMap\n\n          const identify = sourceURL\n          const identifyMethod = \"relative\"\n\n          return {\n            identify,\n            identifyMethod,\n            transpile,\n            instrument,\n            remap,\n            remapMethod,\n            minify,\n            optimize,\n          }\n        },\n      })\n      const { service: compileService, compileFile } = createCompileService({\n        rootLocation,\n        cacheFolderRelativeLocation,\n        abstractFolderRelativeLocation,\n        trackHit: true,\n        compile,\n      })\n      compileFileFromCompileService = compileFile\n\n      return guard(compileService, ({ method, url }) => {\n        if (method !== \"GET\" && method !== \"HEAD\") {\n          return false\n        }\n\n        const pathname = url.pathname\n        // '/compiled/folder/file.js' -> 'compiled/folder/file.js'\n        const filename = pathname.slice(1)\n        const dirname = filename.slice(0, filename.indexOf(\"/\"))\n\n        if (dirname !== abstractFolderRelativeLocation) {\n          return false\n        }\n\n        return true\n      })\n    }\n\n    const createFileServiceCustom = () => {\n      const fileService = createFileService()\n      const previousFileService = fileService\n      return ({ url, ...props }) => {\n        const fileURL = new URL(url.pathname.slice(1), `file:///${rootLocation}/`)\n\n        return previousFileService({\n          url: fileURL,\n          ...props,\n        })\n      }\n    }\n\n    const handler = createResponseGenerator({\n      services: [\n        ...(watch ? createWatchServices() : []),\n        createCompileServiceCustom(),\n        createFileServiceCustom(),\n      ],\n    })\n\n    addRequestHandler(handler, (response) => (cors ? enableCORS(response) : response))\n\n    return {\n      close,\n      closed,\n      url,\n      compileURL: `${url}${abstractFolderRelativeLocation}`,\n      rootLocation,\n      abstractFolderRelativeLocation,\n      compileFile: compileFileFromCompileService,\n    }\n  })\n}\n\n// if we want to use react we must start a compileServer like that\n/*\nimport { startCompileServer, defaultTransformer, createBabelOptions } from \"@dmail/dev-server\"\n\nstartCompileServer({\n\ttransformer: (result, options, context) => {\n\t\tconst { inputRelativeLocation } = context\n\t\tif (inputRelativeLocation.endsWith('.jsx')) {\n\t\t\tconst babelOptions = createBabelOptions(result, options, context)\n\t\t\tconst babelOptionWithReact = {\n\t\t\t\t...babelOptions,\n\t\t\t\tplugins: [\n\t\t\t\t\t['babel-plugin-syntax-jsx', {}],\n\t\t\t\t\t['babel-plugin-transform-react-jsx', { \"pragma\": \"React.createElement\" }],\n\t\t\t\t\t...babelOptions.plugins\n\t\t\t\t],\n\t\t\t}\n\t\t\treturn babel.transform(result.code, babelOptionWithReact)\n\t\t]\n\t\treturn defaultTransformer(result, options, context)\n\t}\n})\n*/\n\n// in order to support a build specific to a given browser we could\n/*\nstartCompileServer({\n\tcreateOptions: ({ request }) => {\n\t\t// we could run something client side to decide which\n\t\t// profile the client belongs to between a,b,c and send it by cookie or header\n\t\t// or decide this using user-agent\n\t\tconst profile = request.headers.get('x-client-feature-profile')\n\t\treturn {\n\t\t\tprofile\n\t\t}\n\t},\n\ttransformer: (result, options, context) => {\n\t\tif (options.profile === 'c') {\n\t\t\treturn transformFewThings(result, options, context)\n\t\t}\n\t\tif (options.profile === 'b') {\n\t\t\treturn transformSomeThings(result, options, context)\n\t\t}\n\t\treturn transformAllThings(result, options, context)\n\t}\n})\n*/\n\n// hot reloading https://github.com/dmail-old/es6-project/blob/master/lib/start.js#L62\n// and https://github.com/dmail-old/project/blob/master/lib/sse.js\n"
  ]
}