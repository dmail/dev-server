{
  "version": 3,
  "sources": [
    "../../../src/openNodeClient/openNodeClient.js"
  ],
  "names": [
    "openNodeClient",
    "compileURL",
    "remoteRoot",
    "localRoot",
    "detached",
    "execute",
    "file",
    "collectCoverage",
    "executeTest",
    "close",
    "promise",
    "Promise",
    "resolve",
    "then",
    "remoteFile",
    "setup",
    "teardown",
    "import",
    "clientFile",
    "path",
    "__dirname",
    "previousID",
    "autoClose",
    "autoCloseOnError",
    "closed",
    "emit",
    "reject",
    "id",
    "child",
    "execArgv",
    "kill",
    "listen",
    "on",
    "code",
    "remove",
    "Error",
    "onmessage",
    "message",
    "type",
    "data",
    "removeListener",
    "value",
    "console",
    "log",
    "send",
    "setupSource",
    "toString",
    "teardownSource",
    "reason"
  ],
  "mappings": "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",
  "sourcesContent": [
    "// faut vraiment que je teste ça avec https://github.com/GoogleChromeLabs/ndb\n// en gros voir si ndb va fonctionner\n// pour debug l'éxécution de nodejs avec chrome devtools\n// en utilisant system.import\n\nimport { fork } from \"child_process\"\nimport path from \"path\"\nimport { ensureSystem } from \"./ensureSystem.js\"\nimport \"./global-fetch.js\"\nimport { getRemoteLocation } from \"../getRemoteLocation.js\"\nimport { getNodeSetupAndTeardowm } from \"../getClientSetupAndTeardown.js\"\nimport { createSignal } from \"@dmail/signal\"\n\nexport const openNodeClient = ({ compileURL, remoteRoot, localRoot, detached = false }) => {\n  if (detached === false) {\n    const execute = ({ file, collectCoverage = false, executeTest = false }) => {\n      const close = () => {}\n\n      const promise = Promise.resolve().then(() => {\n        const remoteFile = getRemoteLocation({\n          compileURL,\n          file,\n        })\n\n        const { setup, teardown } = getNodeSetupAndTeardowm({ collectCoverage, executeTest })\n\n        Promise.resolve(remoteFile)\n          .then(setup)\n          .then(() => {\n            return ensureSystem({ remoteRoot, localRoot })\n              .import(remoteFile)\n              .then(teardown)\n          })\n      })\n\n      return Promise.resolve({ promise, close })\n    }\n\n    return Promise.resolve({ execute })\n  }\n\n  const clientFile = path.resolve(__dirname, \"./client.js\")\n  let previousID = 0\n\n  const execute = ({\n    file,\n    autoClose = false,\n    autoCloseOnError = false,\n    executeTest = false,\n    collectCoverage = false,\n  }) => {\n    const closed = createSignal()\n\n    const close = () => {\n      closed.emit()\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      const id = previousID + 1\n      previousID = id\n\n      const child = fork(clientFile, {\n        execArgv: [\n          // allow vscode to debug else you got port already used\n          `--inspect-brk`,\n        ],\n      })\n\n      const kill = closed.listen(() => {\n        child.kill()\n      })\n\n      child.on(\"close\", (code) => {\n        kill.remove()\n\n        if (code === 12) {\n          throw new Error(\n            `child exited with 12: forked child wanted to use a non available port for debug`,\n          )\n        }\n        if (code !== 0) {\n          reject(`exited with code ${code}`)\n        }\n      })\n\n      const onmessage = (message) => {\n        if (message.id !== id) {\n          return\n        }\n\n        const { type, data } = message\n        if (type === \"execute-result\") {\n          child.removeListener(\"message\", onmessage)\n          if (data.code === 0) {\n            resolve(data.value)\n          } else {\n            console.log(\"rejecting\")\n            reject(data.value)\n          }\n        }\n      }\n\n      child.on(\"message\", onmessage)\n\n      const remoteFile = getRemoteLocation({\n        compileURL,\n        file,\n      })\n      const { setup, teardown } = getNodeSetupAndTeardowm({ collectCoverage, executeTest })\n\n      child.send({\n        type: \"execute\",\n        id,\n        data: {\n          remoteRoot,\n          localRoot,\n          file: remoteFile,\n          setupSource: `(${setup.toString()})`,\n          teardownSource: `(${teardown.toString()})`,\n        },\n      })\n    }).then(\n      (value) => {\n        if (autoClose) {\n          close()\n        }\n        return value\n      },\n      (reason) => {\n        if (autoCloseOnError) {\n          close()\n        }\n        return Promise.reject(reason)\n      },\n    )\n\n    return Promise.resolve({ promise, close })\n  }\n\n  return Promise.resolve({ execute })\n}\n"
  ]
}