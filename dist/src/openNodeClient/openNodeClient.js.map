{"version":3,"sources":["../../../src/openNodeClient/openNodeClient.js"],"names":["openNodeClient","compileURL","remoteRoot","localRoot","detached","execute","file","collectCoverage","executeTest","close","promise","Promise","resolve","then","remoteFile","setup","teardown","clientFile","__dirname","previousID","autoClose","autoCloseOnError","closed","emit","reject","id","child","execArgv","kill","listen","on","code","remove","Error","onmessage","message","type","data","removeListener","value","console","log","send","setupSource","toString","teardownSource","reason"],"mappings":"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","file":"openNodeClient.js","sourcesContent":["// faut vraiment que je teste ça avec https://github.com/GoogleChromeLabs/ndb\n// en gros voir si ndb va fonctionner\n// pour debug l'éxécution de nodejs avec chrome devtools\n// en utilisant system.import\n\nimport { fork } from \"child_process\"\nimport path from \"path\"\nimport { ensureSystem } from \"./ensureSystem.js\"\nimport \"./global-fetch.js\"\nimport { getRemoteLocation } from \"../getRemoteLocation.js\"\nimport { getNodeSetupAndTeardowm } from \"../getClientSetupAndTeardown.js\"\nimport { createSignal } from \"@dmail/signal\"\n\nexport const openNodeClient = ({ compileURL, remoteRoot, localRoot, detached = false }) => {\n  if (detached === false) {\n    const execute = ({ file, collectCoverage = false, executeTest = false }) => {\n      const close = () => {}\n\n      const promise = Promise.resolve().then(() => {\n        const remoteFile = getRemoteLocation({\n          compileURL,\n          file,\n        })\n\n        const { setup, teardown } = getNodeSetupAndTeardowm({ collectCoverage, executeTest })\n\n        Promise.resolve(remoteFile)\n          .then(setup)\n          .then(() => {\n            return ensureSystem({ remoteRoot, localRoot })\n              .import(remoteFile)\n              .then(teardown)\n          })\n      })\n\n      return Promise.resolve({ promise, close })\n    }\n\n    return Promise.resolve({ execute })\n  }\n\n  const clientFile = path.resolve(__dirname, \"./client.js\")\n  let previousID = 0\n\n  const execute = ({\n    file,\n    autoClose = false,\n    autoCloseOnError = false,\n    executeTest = false,\n    collectCoverage = false,\n  }) => {\n    const closed = createSignal()\n\n    const close = () => {\n      closed.emit()\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      const id = previousID + 1\n      previousID = id\n\n      const child = fork(clientFile, {\n        execArgv: [\n          // allow vscode to debug else you got port already used\n          `--inspect-brk`,\n        ],\n      })\n\n      const kill = closed.listen(() => {\n        child.kill()\n      })\n\n      child.on(\"close\", (code) => {\n        kill.remove()\n\n        if (code === 12) {\n          throw new Error(\n            `child exited with 12: forked child wanted to use a non available port for debug`,\n          )\n        }\n        if (code !== 0) {\n          reject(`exited with code ${code}`)\n        }\n      })\n\n      const onmessage = (message) => {\n        if (message.id !== id) {\n          return\n        }\n\n        const { type, data } = message\n        if (type === \"execute-result\") {\n          child.removeListener(\"message\", onmessage)\n          if (data.code === 0) {\n            resolve(data.value)\n          } else {\n            console.log(\"rejecting\")\n            reject(data.value)\n          }\n        }\n      }\n\n      child.on(\"message\", onmessage)\n\n      const remoteFile = getRemoteLocation({\n        compileURL,\n        file,\n      })\n      const { setup, teardown } = getNodeSetupAndTeardowm({ collectCoverage, executeTest })\n\n      child.send({\n        type: \"execute\",\n        id,\n        data: {\n          remoteRoot,\n          localRoot,\n          file: remoteFile,\n          setupSource: `(${setup.toString()})`,\n          teardownSource: `(${teardown.toString()})`,\n        },\n      })\n    }).then(\n      (value) => {\n        if (autoClose) {\n          close()\n        }\n        return value\n      },\n      (reason) => {\n        if (autoCloseOnError) {\n          close()\n        }\n        return Promise.reject(reason)\n      },\n    )\n\n    return Promise.resolve({ promise, close })\n  }\n\n  return Promise.resolve({ execute })\n}\n"]}