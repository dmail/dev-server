{
  "version": 3,
  "sources": [
    "../../../src/openServer/createNodeRequestHandler.js"
  ],
  "names": [
    "createRequestFromNodeRequest",
    "nodeRequest",
    "serverURL",
    "method",
    "url",
    "URL",
    "headers",
    "body",
    "undefined",
    "Object",
    "freeze",
    "populateNodeResponse",
    "nodeResponse",
    "status",
    "reason",
    "headerAsJSON",
    "toJSON",
    "writeHead",
    "pipeTo",
    "willAutoClose",
    "get",
    "close",
    "createResponse",
    "createNodeRequestHandler",
    "handler",
    "transform",
    "response",
    "closed",
    "smart",
    "once",
    "emit",
    "request",
    "console",
    "log",
    "toString",
    "on",
    "error",
    "Promise",
    "resolve",
    "then",
    "responseProperties",
    "catch",
    "stack",
    "finalResponse",
    "listen",
    "enableCORS",
    "corsHeaders",
    "join",
    "headersWithCORS",
    "keys",
    "forEach",
    "corsHeaderName",
    "has",
    "append"
  ],
  "mappings": "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",
  "sourcesContent": [
    "// https://github.com/jsenv/core/tree/master/src/util/rest\n\nimport { URL } from \"url\"\nimport { createBody } from \"./createBody.js\"\nimport { createHeaders } from \"./createHeaders.js\"\nimport { createSignal } from \"@dmail/signal\"\n\n// serverURL pourrait valoir par dÃ©faut `file:///${process.cwd()}` ?\nexport const createRequestFromNodeRequest = (nodeRequest, serverURL) => {\n  const { method } = nodeRequest\n  const url = new URL(nodeRequest.url, serverURL)\n  const headers = createHeaders(nodeRequest.headers)\n  const body = createBody(\n    method === \"POST\" || method === \"PUT\" || method === \"PATCH\" ? nodeRequest : undefined,\n  )\n\n  return Object.freeze({\n    method,\n    url,\n    headers,\n    body,\n  })\n}\n\nexport const populateNodeResponse = (nodeResponse, { status, reason = \"\", headers, body }) => {\n  const headerAsJSON = headers.toJSON()\n  nodeResponse.writeHead(status, reason, headerAsJSON)\n\n  body.pipeTo(nodeResponse)\n  if (body.willAutoClose === false && headers.get(\"connection\") !== \"keep-alive\") {\n    body.close()\n  }\n}\n\nconst createResponse = (\n  { method },\n  { status = 501, reason, headers = createHeaders(), body = createBody() } = {},\n) => {\n  if (method === \"HEAD\") {\n    // don't send body for HEAD requests\n    body = createBody()\n  } else {\n    body = createBody(body)\n  }\n\n  headers = createHeaders(headers)\n\n  return Object.freeze({ status, reason, headers, body })\n}\n\nexport const createNodeRequestHandler = ({ handler, transform = (response) => response, url }) => {\n  return (nodeRequest, nodeResponse) => {\n    const closed = createSignal({ smart: true })\n    nodeResponse.once(\"close\", () => closed.emit())\n\n    // should have some kind of id for a request\n    // so that logs knows whichs request they belong to\n    const request = createRequestFromNodeRequest(nodeRequest, url)\n    console.log(request.method, request.url.toString())\n\n    nodeRequest.on(\"error\", (error) => {\n      console.log(\"error on\", request.url.toString(), error)\n    })\n\n    return Promise.resolve()\n      .then(() => {\n        return handler(request)\n      })\n      .then((responseProperties) => {\n        const response = createResponse(request, responseProperties)\n        return transform(response)\n      })\n      .catch((error) => {\n        return createResponse(request, {\n          status: 500,\n          reason: \"internal error\",\n          body: error && error.stack ? error.stack : error,\n        })\n      })\n      .then((finalResponse) => {\n        console.log(`${finalResponse.status} ${request.url}`)\n        // ensure body is closed when client is closed\n        closed.listen(() => {\n          finalResponse.body.close()\n        })\n        populateNodeResponse(nodeResponse, finalResponse)\n      })\n  }\n}\n\nexport const enableCORS = (response) => {\n  const corsHeaders = {\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-methods\": [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"].join(\", \"),\n    \"access-control-allow-headers\": [\"x-requested-with\", \"content-type\", \"accept\"].join(\", \"),\n    \"access-control-max-age\": 1, // Seconds\n  }\n\n  const headersWithCORS = createHeaders(response.headers)\n  Object.keys(corsHeaders).forEach((corsHeaderName) => {\n    if (response.headers.has(corsHeaderName) === false) {\n      // we should merge any existing response cors headers with the one above\n      headersWithCORS.append(corsHeaderName, corsHeaders[corsHeaderName])\n    }\n  })\n\n  return {\n    ...response,\n    headers: headersWithCORS,\n  }\n}\n"
  ]
}