{
  "version": 3,
  "sources": [
    "../../../src/openServer/openServer.test.js"
  ],
  "names": [
    "url",
    "then",
    "addRequestHandler",
    "agent",
    "close",
    "status",
    "headers",
    "body",
    "assert",
    "equal",
    "String",
    "response",
    "text"
  ],
  "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,gBAAK,YAAM;AACT,SAAO,4BAAW;AAChBA,IAAAA,GAAG,EAAE;AADW,GAAX,EAEJC,IAFI,CAEC,gBAA8C;AAAA,QAA3CC,iBAA2C,QAA3CA,iBAA2C;AAAA,QAAxBF,GAAwB,QAAxBA,GAAwB;AAAA,QAAnBG,KAAmB,QAAnBA,KAAmB;AAAA,QAAZC,KAAY,QAAZA,KAAY;AACpDF,IAAAA,iBAAiB,CAAC,YAAM;AACtB,aAAO;AACLG,QAAAA,MAAM,EAAE,GADH;AAELC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFJ;AAKLC,QAAAA,IAAI,EAAE;AALD,OAAP;AAOD,KARgB,CAAjB;;AAUAC,oBAAOC,KAAP,CAAaC,MAAM,CAACV,GAAD,CAAnB,EAA0B,wBAA1B;;AAEA,WAAO,wBAAMA,GAAN,EAAW;AAAEG,MAAAA,KAAK,EAALA;AAAF,KAAX,EACJF,IADI,CACC,UAACU,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADD,EAEJX,IAFI,CAEC,UAACW,IAAD,EAAU;AACdJ,sBAAOC,KAAP,CAAaG,IAAb,EAAmB,IAAnB;;AACA,aAAOR,KAAK,EAAZ;AACD,KALI,CAAP;AAMD,GArBM,CAAP;AAsBD,CAvBD,E,CAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "import { test } from \"@dmail/test\"\nimport assert from \"assert\"\nimport fetch from \"node-fetch\"\nimport { openServer } from \"./openServer.js\"\n\ntest(() => {\n  return openServer({\n    url: \"http://127.0.0.1:8998\",\n  }).then(({ addRequestHandler, url, agent, close }) => {\n    addRequestHandler(() => {\n      return {\n        status: 200,\n        headers: {\n          \"Content-Type\": \"text/plain\",\n        },\n        body: \"ok\",\n      }\n    })\n\n    assert.equal(String(url), \"http://127.0.0.1:8998/\")\n\n    return fetch(url, { agent })\n      .then((response) => response.text())\n      .then((text) => {\n        assert.equal(text, \"ok\")\n        return close()\n      })\n  })\n})\n\n// ici on testera que quand on kill le child à différent moment\n// on obtient bien la réponse attendu coté client\n// test(() => {\n// \treturn startServer({\n// \t\turl: \"http://localhost:0\",\n// \t}).then(({ nodeServer }) => {\n// \t\tconst { child } = isolateRequestHandler(nodeServer, (request, response) => {})\n// \t\tchild.kill()\n// \t})\n// })\n"
  ]
}