{
  "version": 3,
  "sources": [
    "../../../src/openServer/openServer.test.js"
  ],
  "names": [
    "url",
    "then",
    "addRequestHandler",
    "agent",
    "close",
    "status",
    "headers",
    "body",
    "assert",
    "equal",
    "String",
    "response",
    "text",
    "console",
    "log"
  ],
  "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,4BAAW;AACTA,EAAAA,GAAG,EAAE;AADI,CAAX,EAGGC,IAHH,CAGQ,CAAC;AAAEC,EAAAA,iBAAF;AAAqBF,EAAAA,GAArB;AAA0BG,EAAAA,KAA1B;AAAiCC,EAAAA;AAAjC,CAAD,KAA8C;AAClDF,EAAAA,iBAAiB,CAAC,MAAM;AACtB,WAAO;AACLG,MAAAA,MAAM,EAAE,GADH;AAELC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFJ;AAKLC,MAAAA,IAAI,EAAE;AALD,KAAP;AAOD,GARgB,CAAjB;;AAUAC,kBAAOC,KAAP,CAAaC,MAAM,CAACV,GAAD,CAAnB,EAA0B,wBAA1B;;AAEA,SAAO,wBAAMA,GAAN,EAAW;AAAEG,IAAAA;AAAF,GAAX,EACJF,IADI,CACEU,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJX,IAFI,CAEEW,IAAD,IAAU;AACdJ,oBAAOC,KAAP,CAAaG,IAAb,EAAmB,IAAnB;;AACA,WAAOR,KAAK,EAAZ;AACD,GALI,CAAP;AAMD,CAtBH,EAuBGH,IAvBH,CAuBQ,MAAM;AACVY,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,CAzBH,E,CA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "import assert from \"assert\"\nimport fetch from \"node-fetch\"\nimport { openServer } from \"./openServer.js\"\n\nopenServer({\n  url: \"http://127.0.0.1:8998\",\n})\n  .then(({ addRequestHandler, url, agent, close }) => {\n    addRequestHandler(() => {\n      return {\n        status: 200,\n        headers: {\n          \"Content-Type\": \"text/plain\",\n        },\n        body: \"ok\",\n      }\n    })\n\n    assert.equal(String(url), \"http://127.0.0.1:8998/\")\n\n    return fetch(url, { agent })\n      .then((response) => response.text())\n      .then((text) => {\n        assert.equal(text, \"ok\")\n        return close()\n      })\n  })\n  .then(() => {\n    console.log(\"passed\")\n  })\n\n// ici on testera que quand on kill le child à différent moment\n// on obtient bien la réponse attendu coté client\n// test(() => {\n// \treturn startServer({\n// \t\turl: \"http://localhost:0\",\n// \t}).then(({ nodeServer }) => {\n// \t\tconst { child } = isolateRequestHandler(nodeServer, (request, response) => {})\n// \t\tchild.kill()\n// \t})\n// })\n"
  ]
}