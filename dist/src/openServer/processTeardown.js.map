{
  "version": 3,
  "sources": [
    "../../../src/openServer/processTeardown.js"
  ],
  "names": [
    "hangupOrDeath",
    "emitter",
    "asyncSimultaneousEmitter",
    "installer",
    "emit",
    "triggerHangUpOrDeath",
    "process",
    "on",
    "removeListener",
    "terminate",
    "triggerTerminate",
    "death",
    "triggerDeath",
    "beforeExit",
    "disableWhileCalling",
    "triggerBeforeExit",
    "then",
    "exit",
    "triggerExit",
    "signals",
    "processTeardown",
    "teardownFunction",
    "listeners",
    "map",
    "signal",
    "listen",
    "reason",
    "forEach",
    "listener",
    "remove"
  ],
  "mappings": "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",
  "sourcesContent": [
    "// when any of SIGUP, SIGINT, SIGTERM, beforeExit, exit is emitted\n// call a given function allowed to return a promise in case the teardown is async\n// it's very usefull to ensure a given server is closed when process exits\n\nimport { asyncSimultaneousEmitter, createSignal } from \"@dmail/signal\"\n\nexport const hangupOrDeath = createSignal({\n  emitter: asyncSimultaneousEmitter,\n  installer: ({ emit }) => {\n    // SIGHUP http://man7.org/linux/man-pages/man7/signal.7.html\n    const triggerHangUpOrDeath = () => emit(\"hangupOrDeath\")\n\n    process.on(\"SIGUP\", triggerHangUpOrDeath)\n\n    return () => {\n      process.removeListener(\"SIGUP\", triggerHangUpOrDeath)\n    }\n  },\n})\n\nexport const terminate = createSignal({\n  emitter: asyncSimultaneousEmitter,\n  installer: ({ emit }) => {\n    // SIGINT is CTRL+C from keyboard\n    // http://man7.org/linux/man-pages/man7/signal.7.html\n    // may also be sent by vscode https://github.com/Microsoft/vscode-node-debug/issues/1#issuecomment-405185642\n    const triggerTerminate = () => emit(\"terminate\")\n\n    process.on(\"SIGINT\", triggerTerminate)\n\n    return () => {\n      process.removeListener(\"SIGINT\", triggerTerminate)\n    }\n  },\n})\n\nexport const death = createSignal({\n  emitter: asyncSimultaneousEmitter,\n  installer: ({ emit }) => {\n    // is SIGTERM handled by beforeExit ? ook at terminus module on github\n    // SIGTERM http://man7.org/linux/man-pages/man7/signal.7.html\n    const triggerDeath = () => emit(\"death\")\n\n    process.on(\"SIGTERM\", triggerDeath)\n\n    return () => {\n      process.removeListener(\"SIGTERM\", triggerDeath)\n    }\n  },\n})\n\nexport const beforeExit = createSignal({\n  emitter: asyncSimultaneousEmitter,\n  installer: ({ emit, disableWhileCalling }) => {\n    const triggerBeforeExit = () =>\n      emit(\"beforeExit\").then(() =>\n        disableWhileCalling(() => {\n          process.exit()\n        }),\n      )\n\n    process.on(\"beforeExit\", triggerBeforeExit)\n\n    return () => {\n      process.removeListener(\"beforeExit\", triggerBeforeExit)\n    }\n  },\n})\n\nexport const exit = createSignal({\n  emitter: asyncSimultaneousEmitter,\n  installer: ({ emit }) => {\n    const triggerExit = () => {\n      emit(\"exit\")\n    }\n\n    process.on(\"exit\", triggerExit)\n\n    return () => {\n      process.removeListener(\"exit\", triggerExit)\n    }\n  },\n})\n\nconst signals = [hangupOrDeath, terminate, death, beforeExit, exit]\n\nexport const processTeardown = (teardownFunction) => {\n  const listeners = signals.map((signal) => {\n    return signal.listen((reason) => {\n      listeners.forEach((listener) => {\n        listener.remove()\n      })\n      return teardownFunction(reason)\n    })\n  })\n\n  return () => {\n    listeners.forEach((listener) => {\n      listener.remove()\n    })\n  }\n}\n\n// export const listenBrowserBeforeExit = createListenBeforeExit({\n//   install: (callback) => {\n//     const { onbeforeunload } = window\n//     window.onbeforeunload = callback\n\n//     return () => {\n//       window.onbeforeunload = onbeforeunload\n//     }\n//   },\n//   exit: () => {\n//     // in the browser this may not be called\n//     // because you cannot prevent user from leaving your page\n//   },\n// })\n"
  ]
}