{"version":3,"sources":["../../../src/openServer/processTeardown.js"],"names":["hangupOrDeath","emitter","installer","emit","triggerHangUpOrDeath","process","on","removeListener","terminate","triggerTerminate","death","triggerDeath","beforeExit","disableWhileCalling","triggerBeforeExit","then","exit","triggerExit","signals","processTeardown","teardownFunction","listeners","map","signal","listen","reason","forEach","listener","remove"],"mappings":"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","file":"processTeardown.js","sourcesContent":["// when any of SIGUP, SIGINT, SIGTERM, beforeExit, exit is emitted\n// call a given function allowed to return a promise in case the teardown is async\n// it's very usefull to ensure a given server is closed when process exits\n\nimport { asyncSimultaneousEmitter, createSignal } from \"@dmail/signal\"\n\nexport const hangupOrDeath = createSignal({\n  emitter: asyncSimultaneousEmitter,\n  installer: ({ emit }) => {\n    // SIGHUP http://man7.org/linux/man-pages/man7/signal.7.html\n    const triggerHangUpOrDeath = () => emit(\"hangupOrDeath\")\n\n    process.on(\"SIGUP\", triggerHangUpOrDeath)\n\n    return () => {\n      process.removeListener(\"SIGUP\", triggerHangUpOrDeath)\n    }\n  },\n})\n\nexport const terminate = createSignal({\n  emitter: asyncSimultaneousEmitter,\n  installer: ({ emit }) => {\n    // SIGINT is CTRL+C from keyboard\n    // http://man7.org/linux/man-pages/man7/signal.7.html\n    // may also be sent by vscode https://github.com/Microsoft/vscode-node-debug/issues/1#issuecomment-405185642\n    const triggerTerminate = () => emit(\"terminate\")\n\n    process.on(\"SIGINT\", triggerTerminate)\n\n    return () => {\n      process.removeListener(\"SIGINT\", triggerTerminate)\n    }\n  },\n})\n\nexport const death = createSignal({\n  emitter: asyncSimultaneousEmitter,\n  installer: ({ emit }) => {\n    // is SIGTERM handled by beforeExit ? ook at terminus module on github\n    // SIGTERM http://man7.org/linux/man-pages/man7/signal.7.html\n    const triggerDeath = () => emit(\"death\")\n\n    process.on(\"SIGTERM\", triggerDeath)\n\n    return () => {\n      process.removeListener(\"SIGTERM\", triggerDeath)\n    }\n  },\n})\n\nexport const beforeExit = createSignal({\n  emitter: asyncSimultaneousEmitter,\n  installer: ({ emit, disableWhileCalling }) => {\n    const triggerBeforeExit = () =>\n      emit(\"beforeExit\").then(() =>\n        disableWhileCalling(() => {\n          process.exit()\n        }),\n      )\n\n    process.on(\"beforeExit\", triggerBeforeExit)\n\n    return () => {\n      process.removeListener(\"beforeExit\", triggerBeforeExit)\n    }\n  },\n})\n\nexport const exit = createSignal({\n  emitter: asyncSimultaneousEmitter,\n  installer: ({ emit }) => {\n    const triggerExit = () => {\n      emit(\"exit\")\n    }\n\n    process.on(\"exit\", triggerExit)\n\n    return () => {\n      process.removeListener(\"exit\", triggerExit)\n    }\n  },\n})\n\nconst signals = [hangupOrDeath, terminate, death, beforeExit, exit]\n\nexport const processTeardown = (teardownFunction) => {\n  const listeners = signals.map((signal) => {\n    return signal.listen((reason) => {\n      listeners.forEach((listener) => {\n        listener.remove()\n      })\n      return teardownFunction(reason)\n    })\n  })\n\n  return () => {\n    listeners.forEach((listener) => {\n      listener.remove()\n    })\n  }\n}\n\n// export const listenBrowserBeforeExit = createListenBeforeExit({\n//   install: (callback) => {\n//     const { onbeforeunload } = window\n//     window.onbeforeunload = callback\n\n//     return () => {\n//       window.onbeforeunload = onbeforeunload\n//     }\n//   },\n//   exit: () => {\n//     // in the browser this may not be called\n//     // because you cannot prevent user from leaving your page\n//   },\n// })\n"]}