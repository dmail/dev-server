{
  "version": 3,
  "sources": [
    "../../../src/run/run.js"
  ],
  "names": [
    "run",
    "root",
    "process",
    "cwd",
    "file",
    "port",
    "platform",
    "headless",
    "watch",
    "instrument",
    "relativeFile",
    "openServer",
    "rootLocation",
    "abstractFolderRelativeLocation",
    "url",
    "createClient",
    "server",
    "compileURL",
    "localRoot",
    "detached",
    "mirrorConsole",
    "then",
    "console",
    "log",
    "client",
    "execute",
    "collectCoverage"
  ],
  "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AAEO,IAAMA,GAAG,GAAG,SAANA,GAAM,OAeb;AAAA,uBAdJC,IAcI;AAAA,MAdJA,IAcI,0BAdGC,OAAO,CAACC,GAAR,EAcH;AAAA,MAbJC,IAaI,QAbJA,IAaI;AAAA,uBAZJC,IAYI;AAAA,MAZJA,IAYI,0BAZG,CAYH;AAAA,2BAXJC,QAWI;AAAA,MAXJA,QAWI,8BAXO,MAWP;AAAA,2BAVJC,QAUI;AAAA,MAVJA,QAUI,8BAVO,KAUP;AAAA,wBAFJC,KAEI;AAAA,MAFJA,KAEI,2BAFI,KAEJ;AAAA,6BADJC,UACI;AAAA,MADJA,UACI,gCADS,KACT;AACJ,MAAMC,YAAY,GAAGN,IAArB;;AAEA,MAAMO,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WAAO,0CAAkB;AACvBC,MAAAA,YAAY,EAAEX,IADS;AAEvBY,MAAAA,8BAA8B,EAAE,UAFT;AAGvBC,MAAAA,GAAG,8BAAuBT,IAAvB,CAHoB;AAGW;AAClCI,MAAAA,UAAU,EAAVA,UAJuB;AAKvBD,MAAAA,KAAK,EAALA;AALuB,KAAlB,CAAP;AAOD,GARD;;AAUA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/B,QAAIV,QAAQ,KAAK,MAAjB,EAAyB;AACvB,aAAO,oCAAe;AACpBW,QAAAA,UAAU,EAAED,MAAM,CAACC,UADC;AAEpBC,QAAAA,SAAS,EAAEjB,IAFS;AAGpBkB,QAAAA,QAAQ,EAAE,IAHU,CAIpB;;AAJoB,OAAf,CAAP;AAMD;;AACD,QAAIb,QAAQ,KAAK,UAAjB,EAA6B;AAC3B,aAAO,4CAAmB;AACxBQ,QAAAA,GAAG,8BAAuBT,IAAvB,CADqB;AACU;AAClCW,QAAAA,MAAM,EAANA,MAFwB;AAGxBC,QAAAA,UAAU,EAAED,MAAM,CAACC,UAHK;AAIxBV,QAAAA,QAAQ,EAARA,QAJwB;AAKxBa,QAAAA,aAAa,EAAE;AALS,OAAnB,CAAP;AAOD;AACF,GAlBD;;AAoBA,SAAOT,UAAU,GAAGU,IAAb,CAAkB,UAACL,MAAD,EAAY;AACnCM,IAAAA,OAAO,CAACC,GAAR,+BAAmCP,MAAM,CAACF,GAA1C;AACA,WAAOC,YAAY,CAACC,MAAD,CAAZ,CACJK,IADI,CACC,UAACG,MAAD,EAAY;AAChB,aAAOA,MAAM,CAACC,OAAP,CAAe;AACpBrB,QAAAA,IAAI,EAAEM,YADc;AAEpBgB,QAAAA,eAAe,EAAEjB;AAFG,OAAf,CAAP;AAID,KANI,EAOJY,IAPI,CAOC,YAAM;AACV,UAAIb,KAAK,KAAK,KAAd,EAAqB,CACnB;AACD;AACF,KAXI,CAAP;AAYD,GAdM,CAAP;AAeD,CA/DM",
  "sourcesContent": [
    "import { openCompileServer } from \"../openCompileServer/openCompileServer.js\"\nimport { openNodeClient } from \"../openNodeClient/openNodeClient.js\"\nimport { openChromiumClient } from \"../openChromiumClient/openChromiumClient.js\"\n\nexport const run = ({\n  root = process.cwd(),\n  file,\n  port = 0,\n  platform = \"node\",\n  headless = false,\n  // when watching, if we control how the code runs we need the sse service\n  // in case an external client connects to our server\n  // but we mainly need node to listen for file change\n  // so that we can reexecute code inside chromium or nodejs\n  // from here\n  // for nodejs we would kill the child and restart an other one\n  // for chromium we kill it too and restart a new one to execute our code inside it\n  watch = false,\n  instrument = false,\n}) => {\n  const relativeFile = file\n\n  const openServer = () => {\n    return openCompileServer({\n      rootLocation: root,\n      abstractFolderRelativeLocation: \"compiled\",\n      url: `http://127.0.0.1:0${port}`, // avoid https for now because certificates are self signed\n      instrument,\n      watch,\n    })\n  }\n\n  const createClient = (server) => {\n    if (platform === \"node\") {\n      return openNodeClient({\n        compileURL: server.compileURL,\n        localRoot: root,\n        detached: true,\n        // remoteRoot: \"http://127.0.0.1:3001\",\n      })\n    }\n    if (platform === \"chromium\") {\n      return openChromiumClient({\n        url: `http://127.0.0.1:0${port}`, // force http for now\n        server,\n        compileURL: server.compileURL,\n        headless,\n        mirrorConsole: true,\n      })\n    }\n  }\n\n  return openServer().then((server) => {\n    console.log(`server listening at ${server.url}`)\n    return createClient(server)\n      .then((client) => {\n        return client.execute({\n          file: relativeFile,\n          collectCoverage: instrument,\n        })\n      })\n      .then(() => {\n        if (watch === false) {\n          // server.close()\n        }\n      })\n  })\n}\n"
  ]
}