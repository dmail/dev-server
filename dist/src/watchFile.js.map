{"version":3,"sources":["../../src/watchFile.js"],"names":["getModificationDate","url","Promise","resolve","reject","stat","error","mtime","guardAsync","fn","shield","args","then","shielded","undefined","createChangedAsyncShield","value","get","compare","lastValue","all","previousValue","limitRate","ms","canBeCalled","setTimeout","createWatchSignal","installer","emit","modificationDate","nextModificationDate","Number","guardedEmit","watcher","watch","persistent","eventType","filename","close","memoizedCreateWatchSignal","watchFile","listen"],"mappings":"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","file":"watchFile.js","sourcesContent":["import { createSignal } from \"@dmail/signal\"\nimport fs from \"fs\"\nimport { memoizeSync } from \"./memoize.js\"\n\nconst getModificationDate = (url) => {\n  return new Promise((resolve, reject) => {\n    fs.stat(url, (error, stat) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(stat.mtime)\n      }\n    })\n  })\n}\n\nconst guardAsync = (fn, shield) => (...args) => {\n  return Promise.resolve()\n    .then(() => shield(...args))\n    .then((shielded) => {\n      return shielded ? undefined : fn(...args)\n    })\n}\n\nconst createChangedAsyncShield = ({ value, get, compare }) => {\n  let lastValue\n\n  return (...args) => {\n    return Promise.all([\n      lastValue === undefined ? value : lastValue,\n      Promise.resolve().then(() => get(...args)),\n    ]).then(([previousValue, value]) => {\n      lastValue = value\n      return !compare(previousValue, value)\n    })\n  }\n}\n\nconst limitRate = (fn, ms) => {\n  let canBeCalled = true\n  return (...args) => {\n    if (!canBeCalled) {\n      return undefined\n    }\n\n    canBeCalled = false\n    setTimeout(() => {\n      canBeCalled = true\n    }, ms)\n    return fn(...args)\n  }\n}\n\nconst createWatchSignal = (url) => {\n  // get mtime right now\n  const mtime = getModificationDate(url)\n\n  return createSignal({\n    installer: ({ emit }) => {\n      const shield = createChangedAsyncShield({\n        value: mtime,\n        get: () => getModificationDate(url),\n        compare: (modificationDate, nextModificationDate) => {\n          return Number(modificationDate) !== Number(nextModificationDate)\n        },\n      })\n\n      const guardedEmit = guardAsync(emit, shield)\n      // https://nodejs.org/docs/latest/api/fs.html#fs_fs_watch_filename_options_listener\n      const watcher = fs.watch(\n        url,\n        { persistent: false },\n        limitRate((eventType, filename) => {\n          guardedEmit({ url, eventType, filename })\n        }, 100),\n      )\n      return () => watcher.close()\n    },\n  })\n}\n\nconst memoizedCreateWatchSignal = memoizeSync(createWatchSignal)\n\nexport const watchFile = (url, fn) => {\n  return memoizedCreateWatchSignal(url).listen(fn)\n}\n"]}