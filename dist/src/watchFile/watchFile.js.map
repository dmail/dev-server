{"version":3,"sources":["../../../src/watchFile/watchFile.js"],"names":["getModificationDate","url","action","stat","error","pass","mtime","createChangedAsyncShield","read","compare","currentValueAction","nextValueAction","then","value","nextValue","createWatchSignal","shield","modificationDate","nextModificationDate","Number","installer","emit","guardedEmit","watcher","watch","persistent","eventType","filename","close","memoizedCreateWatchSignal","watchFile","fn","listen"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;AACA;;;;AAEA,IAAMA,sBAAsB,SAAtBA,mBAAsB,CAACC,GAAD,EAAS;AACnC,MAAMC,SAAS,2BAAf;;AAEA,kBAAGC,IAAH,CAAQF,GAAR,EAAa,UAACG,KAAD,EAAQD,IAAR,EAAiB;AAC5B,QAAIC,KAAJ,EAAW;AACT,YAAMA,KAAN;AACD,KAFD,MAEO;AACLF,aAAOG,IAAP,CAAYF,KAAKG,KAAjB;AACD;AACF,GAND;;AAQA,SAAOJ,MAAP;AACD,CAZD;;AAcA,IAAMK,2BAA2B,SAA3BA,wBAA2B,CAACC,IAAD,EAAOC,OAAP,EAAmB;AAClD,MAAIC,qBAAqB,oBAAOF,MAAP,CAAzB;;AAEA,SAAO,YAAM;AACX,QAAMG,kBAAkB,oBAAOH,MAAP,CAAxB;AACA,WAAO,iBAAI,CAACE,kBAAD,EAAqBC,eAArB,CAAJ,EAA2CC,IAA3C,CAAgD,gBAAwB;AAAA;AAAA,UAAtBC,KAAsB;AAAA,UAAfC,SAAe;;AAC7EJ,2BAAqBC,eAArB;AACA,aAAOF,QAAQI,KAAR,EAAeC,SAAf,IAA4B,qBAA5B,GAAuC,qBAA9C;AACD,KAHM,CAAP;AAID,GAND;AAOD,CAVD;;AAYA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACd,GAAD,EAAS;AACjC,MAAMe,SAAST,yBACb;AAAA,WAAMP,oBAAoBC,GAApB,CAAN;AAAA,GADa,EAEb,UAACgB,gBAAD,EAAmBC,oBAAnB;AAAA,WACEC,OAAOF,gBAAP,MAA6BE,OAAOD,oBAAP,CAD/B;AAAA,GAFa,CAAf;;AAMA,SAAO,0BAAa;AAClBE,eAAW,0BAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;;AACvB;AACA,UAAMC,cAAc,uBAAWD,IAAX,EAAiBL,MAAjB,CAApB;AACA,UAAMO,UAAU,gBAAGC,KAAH,CAASvB,GAAT,EAAc,EAAEwB,YAAY,KAAd,EAAd,EAAqC,UAACC,SAAD,EAAYC,QAAZ,EAAyB;AAC5EL,oBAAY,EAAErB,QAAF,EAAOyB,oBAAP,EAAkBC,kBAAlB,EAAZ;AACD,OAFe,CAAhB;AAGA,aAAO;AAAA,eAAMJ,QAAQK,KAAR,EAAN;AAAA,OAAP;AACD;AARiB,GAAb,CAAP;AAUD,CAjBD;;AAmBA,IAAMC,4BAA4B,0BAAYd,iBAAZ,CAAlC;;AAEO,IAAMe,gCAAY,SAAZA,SAAY,CAAC7B,GAAD,EAAM8B,EAAN,EAAa;AACpC,SAAOF,0BAA0B5B,GAA1B,EAA+B+B,MAA/B,CAAsCD,EAAtC,CAAP;AACD,CAFM","file":"watchFile.js","sourcesContent":["import { all, createAction, failed, passed } from \"@dmail/action\"\nimport { createSignal } from \"@dmail/signal\"\nimport fs from \"fs\"\nimport { guardAsync } from \"../guard.js\"\nimport { memoizeSync } from \"../memoize.js\"\n\nconst getModificationDate = (url) => {\n  const action = createAction()\n\n  fs.stat(url, (error, stat) => {\n    if (error) {\n      throw error\n    } else {\n      action.pass(stat.mtime)\n    }\n  })\n\n  return action\n}\n\nconst createChangedAsyncShield = (read, compare) => {\n  let currentValueAction = passed(read())\n\n  return () => {\n    const nextValueAction = passed(read())\n    return all([currentValueAction, nextValueAction]).then(([value, nextValue]) => {\n      currentValueAction = nextValueAction\n      return compare(value, nextValue) ? passed() : failed()\n    })\n  }\n}\n\nconst createWatchSignal = (url) => {\n  const shield = createChangedAsyncShield(\n    () => getModificationDate(url),\n    (modificationDate, nextModificationDate) =>\n      Number(modificationDate) !== Number(nextModificationDate),\n  )\n\n  return createSignal({\n    installer: ({ emit }) => {\n      // https://nodejs.org/docs/latest/api/fs.html#fs_class_fs_fswatcher\n      const guardedEmit = guardAsync(emit, shield)\n      const watcher = fs.watch(url, { persistent: false }, (eventType, filename) => {\n        guardedEmit({ url, eventType, filename })\n      })\n      return () => watcher.close()\n    },\n  })\n}\n\nconst memoizedCreateWatchSignal = memoizeSync(createWatchSignal)\n\nexport const watchFile = (url, fn) => {\n  return memoizedCreateWatchSignal(url).listen(fn)\n}\n"]}