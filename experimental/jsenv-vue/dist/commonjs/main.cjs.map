{
  "version": 3,
  "file": "main.cjs",
  "sources": [
    "../../../../src/internal/import-meta/import-meta-url-commonjs.js",
    "../../../../src/internal/filePathUtils.js",
    "../../../../src/internal/sourceMappingURLUtils.js",
    "../../../../src/internal/compiling/compile-directory/compile-asset.js",
    "../../../../src/internal/compiling/transformResultToCompilationResult.js",
    "../../../../src/internal/require.js",
    "../../../../src/internal/minimalBabelPluginArray.js",
    "../../../../src/internal/babel-plugin-transform-import-meta.js",
    "../../../../src/internal/compiling/js-compilation-service/findAsyncPluginNameInBabelPluginMap.js",
    "../../../../src/internal/compiling/js-compilation-service/ansiToHTML.js",
    "../../../../src/internal/compiling/js-compilation-service/ensureRegeneratorRuntimeImportBabelPlugin.js",
    "../../../../src/internal/compiling/js-compilation-service/ensureGlobalThisImportBabelPlugin.js",
    "../../../../src/internal/compiling/js-compilation-service/babelHelper.js",
    "../../../../src/internal/compiling/js-compilation-service/transformBabelHelperToImportBabelPlugin.js",
    "../../../../src/internal/compiling/js-compilation-service/jsenvTransform.js",
    "../../../../src/internal/compiling/js-compilation-service/transformJs.js",
    "../../../../src/internal/compiling/jsenvCompilerForJavaScript.js",
    "../../src/jsenvCompilerForVue.js"
  ],
  "sourcesContent": [
    "/* global __filename */\n\nconst filenameContainsBackSlashes = __filename.indexOf(\"\\\\\") > -1\n\nconst url = filenameContainsBackSlashes\n  ? `file:///${__filename.replace(/\\\\/g, \"/\")}`\n  : `file://${__filename}`\n\nexport default url\n",
    "export const isWindowsFilePath = (path) => startsWithWindowsDriveLetter(path) && path[2] === \"\\\\\"\n\nexport const startsWithWindowsDriveLetter = (string) => {\n  const firstChar = string[0]\n  if (!/[a-zA-Z]/.test(firstChar)) return false\n\n  const secondChar = string[1]\n  if (secondChar !== \":\") return false\n\n  return true\n}\n\nexport const windowsFilePathToUrl = (windowsFilePath) => {\n  return `file:///${replaceBackSlashesWithSlashes(windowsFilePath)}`\n}\n\nexport const replaceBackSlashesWithSlashes = (string) => string.replace(/\\\\/g, \"/\")\n",
    "export const getJavaScriptSourceMappingUrl = (javaScriptSource) => {\n  let sourceMappingUrl\n  replaceSourceMappingUrl(javaScriptSource, javascriptSourceMappingUrlCommentRegexp, (value) => {\n    sourceMappingUrl = value\n  })\n  return sourceMappingUrl\n}\n\nexport const setJavaScriptSourceMappingUrl = (javaScriptSource, sourceMappingFileUrl) => {\n  let replaced\n  const sourceAfterReplace = replaceSourceMappingUrl(\n    javaScriptSource,\n    javascriptSourceMappingUrlCommentRegexp,\n    () => {\n      replaced = true\n      return sourceMappingFileUrl ? writeJavaScriptSourceMappingURL(sourceMappingFileUrl) : \"\"\n    },\n  )\n  if (replaced) {\n    return sourceAfterReplace\n  }\n\n  return sourceMappingFileUrl\n    ? `${javaScriptSource}\n${writeJavaScriptSourceMappingURL(sourceMappingFileUrl)}`\n    : javaScriptSource\n}\n\nexport const getCssSourceMappingUrl = (cssSource) => {\n  let sourceMappingUrl\n  replaceSourceMappingUrl(cssSource, cssSourceMappingUrlCommentRegExp, (value) => {\n    sourceMappingUrl = value\n  })\n  return sourceMappingUrl\n}\n\nexport const setCssSourceMappingUrl = (cssSource, sourceMappingFileUrl) => {\n  let replaced\n  const sourceAfterReplace = replaceSourceMappingUrl(\n    cssSource,\n    cssSourceMappingUrlCommentRegExp,\n    () => {\n      replaced = true\n      return sourceMappingFileUrl ? writeCssSourceMappingUrl(sourceMappingFileUrl) : \"\"\n    },\n  )\n  if (replaced) {\n    return sourceAfterReplace\n  }\n  return sourceMappingFileUrl\n    ? `${cssSource}\n${writeCssSourceMappingUrl(sourceMappingFileUrl)}`\n    : cssSource\n}\n\nconst javascriptSourceMappingUrlCommentRegexp = /\\/\\/ ?# ?sourceMappingURL=([^\\s'\"]+)/g\nconst cssSourceMappingUrlCommentRegExp = /\\/\\*# ?sourceMappingURL=([^\\s'\"]+) \\*\\//g\n\n// ${\"//#\"} is to avoid a parser thinking there is a sourceMappingUrl for this file\nconst writeJavaScriptSourceMappingURL = (value) => `${\"//#\"} sourceMappingURL=${value}`\nconst writeCssSourceMappingUrl = (value) => `/*# sourceMappingURL=${value} */`\n\nexport const sourcemapToBase64Url = (sourcemap) => {\n  const asBase64 = Buffer.from(JSON.stringify(sourcemap)).toString(\"base64\")\n  return `data:application/json;charset=utf-8;base64,${asBase64}`\n}\n\nconst replaceSourceMappingUrl = (source, regexp, callback) => {\n  let lastSourceMappingUrl\n  let matchSourceMappingUrl\n  while ((matchSourceMappingUrl = regexp.exec(source))) {\n    lastSourceMappingUrl = matchSourceMappingUrl\n  }\n  if (lastSourceMappingUrl) {\n    const index = lastSourceMappingUrl.index\n    const before = source.slice(0, index)\n    const after = source.slice(index)\n    const mappedAfter = after.replace(regexp, (match, firstGroup) => {\n      return callback(firstGroup)\n    })\n    return `${before}${mappedAfter}`\n  }\n  return source\n}\n",
    "import { urlToFilename } from \"@jsenv/util\"\n\nexport const urlIsAsset = (url) => {\n  const filename = urlToFilename(url)\n\n  // sourcemap are not inside the asset folder because\n  // of https://github.com/microsoft/vscode-chrome-debug-core/issues/544\n  if (filename.endsWith(\".map\")) {\n    return true\n  }\n\n  return filename.includes(\"__asset__\")\n}\n\nexport const getMetaJsonFileUrl = (compileFileUrl) =>\n  generateCompiledFileAssetUrl(compileFileUrl, \"meta.json\")\n\nexport const generateCompiledFileAssetUrl = (compiledFileUrl, assetName) => {\n  return `${compiledFileUrl}__asset__${assetName}`\n}\n",
    "import { resolveUrl, urlToRelativeUrl, readFile, ensureWindowsDriveLetter } from \"@jsenv/util\"\nimport {\n  replaceBackSlashesWithSlashes,\n  startsWithWindowsDriveLetter,\n  windowsFilePathToUrl,\n} from \"../filePathUtils.js\"\nimport {\n  setJavaScriptSourceMappingUrl,\n  setCssSourceMappingUrl,\n  sourcemapToBase64Url,\n} from \"../sourceMappingURLUtils.js\"\nimport { generateCompiledFileAssetUrl } from \"./compile-directory/compile-asset.js\"\n\nconst isWindows = process.platform === \"win32\"\n\nexport const transformResultToCompilationResult = async (\n  { code, map, contentType = \"application/javascript\", metadata = {} },\n  {\n    projectDirectoryUrl,\n    originalFileContent,\n    originalFileUrl,\n    compiledFileUrl,\n    sourcemapFileUrl,\n    sourcemapEnabled = true,\n    // removing sourcesContent from map decrease the sourceMap\n    // it also means client have to fetch source from server (additional http request)\n    // some client ignore sourcesContent property such as vscode-chrome-debugger\n    // Because it's the most complex scenario and we want to ensure client is always able\n    // to find source from the sourcemap, we remove map.sourcesContent by default to test this.\n    sourcemapExcludeSources = true,\n    sourcemapMethod = \"comment\", // \"comment\", \"inline\"\n  },\n) => {\n  if (typeof projectDirectoryUrl !== \"string\") {\n    throw new TypeError(`projectDirectoryUrl must be a string, got ${projectDirectoryUrl}`)\n  }\n  if (typeof originalFileContent !== \"string\") {\n    throw new TypeError(`originalFileContent must be a string, got ${originalFileContent}`)\n  }\n  if (typeof originalFileUrl !== \"string\") {\n    throw new TypeError(`originalFileUrl must be a string, got ${originalFileUrl}`)\n  }\n  if (typeof compiledFileUrl !== \"string\") {\n    throw new TypeError(`compiledFileUrl must be a string, got ${compiledFileUrl}`)\n  }\n  if (typeof sourcemapFileUrl !== \"string\") {\n    throw new TypeError(`sourcemapFileUrl must be a string, got ${sourcemapFileUrl}`)\n  }\n\n  const sources = []\n  const sourcesContent = []\n  const assets = []\n  const assetsContent = []\n\n  let output = code\n  if (sourcemapEnabled && map) {\n    if (map.sources.length === 0) {\n      // may happen in some cases where babel returns a wrong sourcemap\n      // there is at least one case where it happens\n      // a file with only import './whatever.js' inside\n      sources.push(originalFileUrl)\n      sourcesContent.push(originalFileContent)\n    } else {\n      await Promise.all(\n        map.sources.map(async (source, index) => {\n          // be careful here we might received C:/Directory/file.js path from babel\n          // also in case we receive relative path like directory\\file.js we replace \\ with slash\n          // for url resolution\n          const sourceFileUrl =\n            isWindows && startsWithWindowsDriveLetter(source)\n              ? windowsFilePathToUrl(source)\n              : ensureWindowsDriveLetter(\n                  resolveUrl(\n                    isWindows ? replaceBackSlashesWithSlashes(source) : source,\n                    sourcemapFileUrl,\n                  ),\n                  sourcemapFileUrl,\n                )\n\n          if (!sourceFileUrl.startsWith(projectDirectoryUrl)) {\n            // do not track dependency outside project\n            // it means cache stays valid for those external sources\n            return\n          }\n\n          map.sources[index] = urlToRelativeUrl(sourceFileUrl, sourcemapFileUrl)\n          sources[index] = sourceFileUrl\n\n          if (map.sourcesContent && map.sourcesContent[index]) {\n            sourcesContent[index] = map.sourcesContent[index]\n          } else {\n            const sourceFileContent = await readFile(sourceFileUrl)\n            sourcesContent[index] = sourceFileContent\n          }\n        }),\n      )\n    }\n\n    if (sourcemapExcludeSources) {\n      delete map.sourcesContent\n    }\n\n    // we don't need sourceRoot because our path are relative or absolute to the current location\n    // we could comment this line because it is not set by babel because not passed during transform\n    delete map.sourceRoot\n\n    const setSourceMappingUrl =\n      contentType === \"application/javascript\"\n        ? setJavaScriptSourceMappingUrl\n        : setCssSourceMappingUrl\n\n    if (sourcemapMethod === \"inline\") {\n      output = setSourceMappingUrl(output, sourcemapToBase64Url(map))\n    } else if (sourcemapMethod === \"comment\") {\n      const sourcemapFileRelativePathForModule = urlToRelativeUrl(sourcemapFileUrl, compiledFileUrl)\n      output = setSourceMappingUrl(output, sourcemapFileRelativePathForModule)\n      assets.push(sourcemapFileUrl)\n      assetsContent.push(stringifyMap(map))\n    }\n  } else {\n    sources.push(originalFileUrl)\n    sourcesContent.push(originalFileContent)\n  }\n\n  const { coverage } = metadata\n  if (coverage) {\n    const coverageAssetFileUrl = generateCompiledFileAssetUrl(compiledFileUrl, \"coverage.json\")\n    assets.push(coverageAssetFileUrl)\n    assetsContent.push(stringifyCoverage(coverage))\n  }\n\n  return {\n    compiledSource: output,\n    contentType,\n    sources,\n    sourcesContent,\n    assets,\n    assetsContent,\n  }\n}\n\nconst stringifyMap = (object) => JSON.stringify(object, null, \"  \")\n\nconst stringifyCoverage = (object) => JSON.stringify(object, null, \"  \")\n",
    "import { createRequire } from \"module\"\n\nexport const require = createRequire(import.meta.url)\n",
    "/**\n\nminimalBabelPluginArray exists so that jsenv support latest js syntax by default.\nOtherwise users have to explicitely enable those syntax when they use it.\n\n*/\n\nimport { require } from \"./require.js\"\n\nconst syntaxDynamicImport = require(\"@babel/plugin-syntax-dynamic-import\")\nconst syntaxImportMeta = require(\"@babel/plugin-syntax-import-meta\")\nconst syntaxNumericSeparator = require(\"@babel/plugin-syntax-numeric-separator\")\n\nexport const minimalBabelPluginArray = [\n  syntaxDynamicImport,\n  syntaxImportMeta,\n  syntaxNumericSeparator,\n]\n",
    "// https://github.com/jamiebuilds/babel-handbook/blob/master/translations/en/plugin-handbook.md#toc-stages-of-babel\n// https://github.com/cfware/babel-plugin-bundled-import-meta/blob/master/index.js\n// https://github.com/babel/babel/blob/f4edf62f6beeab8ae9f2b7f0b82f1b3b12a581af/packages/babel-helper-module-imports/src/index.js#L7\n\nimport { require } from \"@jsenv/core/src/internal/require.js\"\n\nconst { addNamespace, addDefault, addNamed } = require(\"@babel/helper-module-imports\")\nconst { parseExpression } = require(\"@babel/parser\")\n\nexport const babelPluginTransformImportMeta = (api, pluginOptions) => {\n  const { replaceImportMeta } = pluginOptions\n\n  let babelState\n  const jsValueToAst = (jsValue) => {\n    const valueAst = parseExpression(jsValue, babelState.opts)\n    return valueAst\n  }\n\n  return {\n    pre: (state) => {\n      babelState = state\n    },\n\n    // visitor: {\n    //   Program(path) {\n    //     const metas = []\n    //     const identifiers = new Set()\n\n    //     path.traverse({\n    //       MetaProperty(path) {\n    //         const node = path.node\n    //         if (node.meta && node.meta.name === \"import\" && node.property.name === \"meta\") {\n    //           metas.push(path)\n    //           Object.keys(path.scope.getAllBindings()).forEach((name) => {\n    //             identifiers.add(name)\n    //           })\n    //         }\n    //       },\n    //     })\n\n    //     if (metas.length === 0) {\n    //       return\n    //     }\n    //   },\n    // },\n\n    visitor: {\n      Program(programPath) {\n        const metaPropertyPathMap = {}\n\n        programPath.traverse({\n          MemberExpression(path) {\n            const { node } = path\n            const { object } = node\n            if (object.type !== \"MetaProperty\") {\n              return\n            }\n\n            const { property: objectProperty } = object\n            if (objectProperty.name !== \"meta\") {\n              return\n            }\n\n            const { property } = node\n            const { name } = property\n            if (name in metaPropertyPathMap) {\n              metaPropertyPathMap[name].push(path)\n            } else {\n              metaPropertyPathMap[name] = [path]\n            }\n          },\n        })\n\n        Object.keys(metaPropertyPathMap).forEach((importMetaPropertyName) => {\n          replaceImportMeta(importMetaPropertyName, {\n            replaceWithImport: ({ namespace, name, from }) => {\n              let importAst\n              if (namespace) {\n                importAst = addNamespace(programPath, from)\n              } else if (name) {\n                importAst = addNamed(programPath, name, from)\n              } else {\n                importAst = addDefault(programPath, from)\n              }\n              metaPropertyPathMap[importMetaPropertyName].forEach((path) => {\n                path.replaceWith(importAst)\n              })\n            },\n            replaceWithValue: (value) => {\n              const valueAst = jsValueToAst(JSON.stringify(value))\n              metaPropertyPathMap[importMetaPropertyName].forEach((path) => {\n                path.replaceWith(valueAst)\n              })\n            },\n          })\n        })\n      },\n    },\n  }\n}\n",
    "export const findAsyncPluginNameInBabelPluginMap = (babelPluginMap) => {\n  if (\"transform-async-to-promises\" in babelPluginMap) {\n    return \"transform-async-to-promises\"\n  }\n  if (\"transform-async-to-generator\" in babelPluginMap) {\n    return \"transform-async-to-generator\"\n  }\n  return \"\"\n}\n",
    "import { require } from \"../../require.js\"\n\n// https://github.com/rburns/ansi-to-html/blob/master/src/ansi_to_html.js\n// https://github.com/drudru/ansi_up/blob/master/ansi_up.js\n\nexport const ansiToHTML = (ansiString) => {\n  const Convert = require(\"ansi-to-html\")\n  return new Convert().toHtml(ansiString)\n}\n",
    "import { require } from \"../../require.js\"\n\nexport const ensureRegeneratorRuntimeImportBabelPlugin = (api, options) => {\n  const { addSideEffect } = require(\"@babel/helper-module-imports\")\n\n  api.assertVersion(7)\n\n  const {\n    regeneratorRuntimeIdentifierName = \"regeneratorRuntime\",\n    regeneratorRuntimeImportPath = \"@jsenv/core/helpers/regenerator-runtime/regenerator-runtime.js\",\n  } = options\n\n  return {\n    visitor: {\n      Identifier(path, opts) {\n        const { filename } = opts\n        const filepathname = filename.replace(/\\\\/g, \"/\")\n        if (filepathname.endsWith(\"node_modules/regenerator-runtime/runtime.js\")) {\n          return\n        }\n\n        const { node } = path\n        if (node.name === regeneratorRuntimeIdentifierName) {\n          addSideEffect(path.scope.getProgramParent().path, regeneratorRuntimeImportPath)\n        }\n      },\n    },\n  }\n}\n",
    "import { require } from \"../../require.js\"\n\nexport const ensureGlobalThisImportBabelPlugin = (api, options) => {\n  const { addSideEffect } = require(\"@babel/helper-module-imports\")\n\n  api.assertVersion(7)\n\n  const {\n    globalThisIdentifierName = \"globalThis\",\n    globalThisImportPath = \"@jsenv/core/helpers/global-this/global-this.js\",\n  } = options\n\n  return {\n    visitor: {\n      Identifier(path, opts) {\n        const { filename } = opts\n        const filepathname = filename.replace(/\\\\/g, \"/\")\n        if (filepathname.endsWith(\"/helpers/global-this/global-this.js\")) {\n          return\n        }\n\n        const { node } = path\n        if (node.name === globalThisIdentifierName) {\n          addSideEffect(path.scope.getProgramParent().path, globalThisImportPath)\n        }\n      },\n    },\n  }\n}\n",
    "// https://github.com/babel/babel/blob/99f4f6c3b03c7f3f67cf1b9f1a21b80cfd5b0224/packages/babel-core/src/tools/build-external-helpers.js\n// the list of possible helpers:\n// https://github.com/babel/babel/blob/99f4f6c3b03c7f3f67cf1b9f1a21b80cfd5b0224/packages/babel-helpers/src/helpers.js#L13\nimport { fileSystemPathToUrl } from \"@jsenv/util\"\nimport { require } from \"../../require.js\"\n\nconst { list } = require(\"@babel/helpers\")\n\nconst babelHelperNameInsideJsenvCoreArray = [\n  \"applyDecoratedDescriptor\",\n  \"arrayLikeToArray\",\n  \"arrayWithHoles\",\n  \"arrayWithoutHoles\",\n  \"assertThisInitialized\",\n  \"AsyncGenerator\",\n  \"asyncGeneratorDelegate\",\n  \"asyncIterator\",\n  \"asyncToGenerator\",\n  \"awaitAsyncGenerator\",\n  \"AwaitValue\",\n  \"classCallCheck\",\n  \"classNameTDZError\",\n  \"classPrivateFieldDestructureSet\",\n  \"classPrivateFieldGet\",\n  \"classPrivateFieldLooseBase\",\n  \"classPrivateFieldLooseKey\",\n  \"classPrivateFieldSet\",\n  \"classPrivateMethodGet\",\n  \"classPrivateMethodSet\",\n  \"classStaticPrivateFieldSpecGet\",\n  \"classStaticPrivateFieldSpecSet\",\n  \"classStaticPrivateMethodGet\",\n  \"classStaticPrivateMethodSet\",\n  \"construct\",\n  \"createClass\",\n  \"createForOfIteratorHelper\",\n  \"createForOfIteratorHelperLoose\",\n  \"createSuper\",\n  \"decorate\",\n  \"defaults\",\n  \"defineEnumerableProperties\",\n  \"defineProperty\",\n  \"extends\",\n  \"get\",\n  \"getPrototypeOf\",\n  \"inherits\",\n  \"inheritsLoose\",\n  \"initializerDefineProperty\",\n  \"initializerWarningHelper\",\n  \"instanceof\",\n  \"interopRequireDefault\",\n  \"interopRequireWildcard\",\n  \"isNativeFunction\",\n  \"isNativeReflectConstruct\",\n  \"iterableToArray\",\n  \"iterableToArrayLimit\",\n  \"iterableToArrayLimitLoose\",\n  \"jsx\",\n  \"newArrowCheck\",\n  \"nonIterableRest\",\n  \"nonIterableSpread\",\n  \"objectDestructuringEmpty\",\n  \"objectSpread\",\n  \"objectSpread2\",\n  \"objectWithoutProperties\",\n  \"objectWithoutPropertiesLoose\",\n  \"possibleConstructorReturn\",\n  \"readOnlyError\",\n  \"set\",\n  \"setPrototypeOf\",\n  \"skipFirstGeneratorNext\",\n  \"slicedToArray\",\n  \"slicedToArrayLoose\",\n  \"superPropBase\",\n  \"taggedTemplateLiteral\",\n  \"taggedTemplateLiteralLoose\",\n  \"tdz\",\n  \"temporalRef\",\n  \"temporalUndefined\",\n  \"toArray\",\n  \"toConsumableArray\",\n  \"toPrimitive\",\n  \"toPropertyKey\",\n  \"typeof\",\n  \"unsupportedIterableToArray\",\n  \"wrapAsyncGenerator\",\n  \"wrapNativeSuper\",\n  \"wrapRegExp\",\n]\n\nconst babelHelperScope = \"@jsenv/core/helpers/babel/\"\n// maybe we can put back / in front of .jsenv here because we will\n// \"redirect\" or at least transform everything inside .jsenv\n// not only everything inside .dist\nconst babelHelperAbstractScope = `.jsenv/helpers/babel/`\n\nexport const listAbstractBabelHelpers = () => {\n  return list.filter((babelHelperName) => !babelHelperIsInsideJsenvCore(babelHelperName))\n}\n\nexport const babelHelperNameToImportSpecifier = (babelHelperName) => {\n  if (babelHelperNameInsideJsenvCoreArray.includes(babelHelperName)) {\n    return `${babelHelperScope}${babelHelperName}/${babelHelperName}.js`\n  }\n  return `${babelHelperAbstractScope}${babelHelperName}/${babelHelperName}.js`\n}\n\nexport const filePathToBabelHelperName = (filePath) => {\n  const fileUrl = fileSystemPathToUrl(filePath)\n\n  const babelHelperPrefix = \"core/helpers/babel/\"\n  if (fileUrl.includes(babelHelperPrefix)) {\n    const afterBabelHelper = fileUrl.slice(\n      fileUrl.indexOf(babelHelperPrefix) + babelHelperPrefix.length,\n    )\n    return afterBabelHelper.slice(0, afterBabelHelper.indexOf(\"/\"))\n  }\n\n  if (fileUrl.includes(babelHelperAbstractScope)) {\n    const afterBabelHelper = fileUrl.slice(\n      fileUrl.indexOf(babelHelperAbstractScope) + babelHelperAbstractScope.length,\n    )\n    return afterBabelHelper.slice(0, afterBabelHelper.indexOf(\"/\"))\n  }\n\n  return null\n}\n\nexport const babelHelperIsInsideJsenvCore = (babelHelperName) => {\n  return babelHelperNameInsideJsenvCoreArray.includes(babelHelperName)\n}\n",
    "import { require } from \"../../require.js\"\nimport { filePathToBabelHelperName, babelHelperNameToImportSpecifier } from \"./babelHelper.js\"\n\n// https://github.com/babel/babel/tree/master/packages/babel-helper-module-imports\nconst { addDefault } = require(\"@babel/helper-module-imports\")\n\n// named import approach found here:\n// https://github.com/rollup/rollup-plugin-babel/blob/18e4232a450f320f44c651aa8c495f21c74d59ac/src/helperPlugin.js#L1\n\n// for reference this is how it's done to reference\n// a global babel helper object instead of using\n// a named import\n// https://github.com/babel/babel/blob/99f4f6c3b03c7f3f67cf1b9f1a21b80cfd5b0224/packages/babel-plugin-external-helpers/src/index.js\n\nexport const transformBabelHelperToImportBabelPlugin = (api) => {\n  api.assertVersion(7)\n\n  return {\n    pre: (file) => {\n      const cachedHelpers = {}\n      file.set(\"helperGenerator\", (name) => {\n        // the list of possible helpers name\n        // https://github.com/babel/babel/blob/99f4f6c3b03c7f3f67cf1b9f1a21b80cfd5b0224/packages/babel-helpers/src/helpers.js#L13\n\n        if (!file.availableHelper(name)) {\n          return undefined\n        }\n\n        if (cachedHelpers[name]) {\n          return cachedHelpers[name]\n        }\n\n        const filePath = file.opts.filename\n        const babelHelperImportSpecifier = babelHelperNameToImportSpecifier(name)\n\n        if (filePathToBabelHelperName(filePath) === name) {\n          return undefined\n        }\n\n        const helper = addDefault(file.path, babelHelperImportSpecifier, { nameHint: `_${name}` })\n        cachedHelpers[name] = helper\n        return helper\n      })\n    },\n  }\n}\n",
    "/* eslint-disable import/max-dependencies */\nimport { require } from \"@jsenv/core/src/internal/require.js\"\nimport { minimalBabelPluginArray } from \"@jsenv/core/src/internal/minimalBabelPluginArray.js\"\nimport { babelPluginTransformImportMeta } from \"@jsenv/core/src/internal/babel-plugin-transform-import-meta.js\"\n\nimport { findAsyncPluginNameInBabelPluginMap } from \"./findAsyncPluginNameInBabelPluginMap.js\"\nimport { ansiToHTML } from \"./ansiToHTML.js\"\nimport { ensureRegeneratorRuntimeImportBabelPlugin } from \"./ensureRegeneratorRuntimeImportBabelPlugin.js\"\nimport { ensureGlobalThisImportBabelPlugin } from \"./ensureGlobalThisImportBabelPlugin.js\"\nimport { transformBabelHelperToImportBabelPlugin } from \"./transformBabelHelperToImportBabelPlugin.js\"\nimport { filePathToBabelHelperName } from \"./babelHelper.js\"\n\nconst { transformAsync, transformFromAstAsync } = require(\"@babel/core\")\nconst transformModulesSystemJs = require(\"@babel/plugin-transform-modules-systemjs\")\nconst proposalDynamicImport = require(\"@babel/plugin-proposal-dynamic-import\")\n\nexport const jsenvTransform = async ({\n  inputCode,\n  inputPath,\n  inputRelativePath,\n  inputAst,\n  inputMap,\n\n  babelPluginMap,\n  moduleOutFormat,\n  importMetaFormat,\n  importMetaEnvFileSpecifier,\n  importMeta = {},\n\n  allowTopLevelAwait,\n  transformTopLevelAwait,\n  transformGenerator,\n  transformGlobalThis,\n  regeneratorRuntimeImportPath,\n  sourcemapEnabled,\n}) => {\n  // https://babeljs.io/docs/en/options\n  const options = {\n    filename: inputPath,\n    filenameRelative: inputRelativePath,\n    inputSourceMap: inputMap,\n    configFile: false,\n    babelrc: false, // trust only these options, do not read any babelrc config file\n    ast: true,\n    sourceMaps: sourcemapEnabled,\n    sourceFileName: inputPath,\n    // https://babeljs.io/docs/en/options#parseropts\n    parserOpts: {\n      allowAwaitOutsideFunction: allowTopLevelAwait,\n    },\n  }\n\n  const babelHelperName = filePathToBabelHelperName(inputPath)\n  // to prevent typeof circular dependency\n  if (babelHelperName === \"typeof\") {\n    const babelPluginMapWithoutTransformTypeOf = {}\n    Object.keys(babelPluginMap).forEach((key) => {\n      if (key !== \"transform-typeof-symbol\") {\n        babelPluginMapWithoutTransformTypeOf[key] = babelPluginMap[key]\n      }\n    })\n    babelPluginMap = babelPluginMapWithoutTransformTypeOf\n  }\n\n  if (transformGenerator) {\n    babelPluginMap = {\n      ...babelPluginMap,\n      \"ensure-regenerator-runtime-import\": [\n        ensureRegeneratorRuntimeImportBabelPlugin,\n        {\n          regeneratorRuntimeImportPath,\n        },\n      ],\n    }\n  }\n\n  if (transformGlobalThis) {\n    babelPluginMap = {\n      ...babelPluginMap,\n      \"ensure-global-this-import\": [ensureGlobalThisImportBabelPlugin],\n    }\n  }\n\n  babelPluginMap = {\n    \"transform-import-meta\": [\n      babelPluginTransformImportMeta,\n      {\n        replaceImportMeta: (metaPropertyName, { replaceWithImport, replaceWithValue }) => {\n          if (metaPropertyName === \"url\") {\n            if (importMetaFormat === \"esmodule\") {\n              // keep native version\n              return\n            }\n            if (importMetaFormat === \"systemjs\") {\n              // systemjs will handle it\n              return\n            }\n            if (importMetaFormat === \"commonjs\") {\n              replaceWithImport({\n                from: `@jsenv/core/src/internal/import-meta/import-meta-url-commonjs.js`,\n              })\n              return\n            }\n            if (importMetaFormat === \"global\") {\n              replaceWithImport({\n                from: `@jsenv/core/src/internal/import-meta/import-meta-url-global.js`,\n              })\n              return\n            }\n            return\n          }\n\n          if (metaPropertyName === \"resolve\") {\n            if (importMetaFormat === \"esmodule\") {\n              // keep native version\n              return\n            }\n            if (importMetaFormat === \"systemjs\") {\n              // systemjs will handle it\n              return\n            }\n            if (importMetaFormat === \"commonjs\") {\n              replaceWithImport({\n                from: `@jsenv/core/src/internal/import-meta/import-meta-resolve-commonjs.js`,\n              })\n              return\n            }\n            if (importMetaFormat === \"global\") {\n              replaceWithImport({\n                from: `@jsenv/core/src/internal/import-meta/import-meta-resolve-global.js`,\n              })\n              return\n            }\n            return\n          }\n\n          if (metaPropertyName === \"env\") {\n            replaceWithImport({\n              namespace: true,\n              from: importMetaEnvFileSpecifier,\n            })\n            return\n          }\n\n          replaceWithValue(importMeta[metaPropertyName])\n        },\n      },\n    ],\n    ...babelPluginMap,\n    \"transform-babel-helpers-to-import\": [transformBabelHelperToImportBabelPlugin],\n  }\n\n  const asyncPluginName = findAsyncPluginNameInBabelPluginMap(babelPluginMap)\n\n  if (moduleOutFormat === \"systemjs\" && transformTopLevelAwait && asyncPluginName) {\n    const babelPluginArrayWithoutAsync = []\n    Object.keys(babelPluginMap).forEach((name) => {\n      if (name !== asyncPluginName) {\n        babelPluginArrayWithoutAsync.push(babelPluginMap[name])\n      }\n    })\n\n    // put body inside something like (async () => {})()\n    const result = await babelTransform({\n      ast: inputAst,\n      code: inputCode,\n      options: {\n        ...options,\n        plugins: [\n          ...minimalBabelPluginArray,\n          ...babelPluginArrayWithoutAsync,\n          [proposalDynamicImport],\n          [transformModulesSystemJs],\n        ],\n      },\n    })\n\n    // we need to retranspile the await keywords now wrapped\n    // inside Systemjs function.\n    // They are ignored, at least by transform-async-to-promises\n    // see https://github.com/rpetrich/babel-plugin-transform-async-to-promises/issues/26\n\n    const finalResult = await babelTransform({\n      // ast: result.ast,\n      code: result.code,\n      options: {\n        ...options,\n        // about inputSourceMap see\n        // https://github.com/babel/babel/blob/eac4c5bc17133c2857f2c94c1a6a8643e3b547a7/packages/babel-core/src/transformation/file/generate.js#L57\n        // https://github.com/babel/babel/blob/090c364a90fe73d36a30707fc612ce037bdbbb24/packages/babel-core/src/transformation/file/merge-map.js#L6s\n        inputSourceMap: result.map,\n        plugins: [...minimalBabelPluginArray, babelPluginMap[asyncPluginName]],\n      },\n    })\n\n    return {\n      ...result,\n      ...finalResult,\n      metadata: { ...result.metadata, ...finalResult.metadata },\n    }\n  }\n\n  const babelPluginArray = [\n    ...minimalBabelPluginArray,\n    ...Object.keys(babelPluginMap).map((babelPluginName) => babelPluginMap[babelPluginName]),\n    ...(moduleOutFormat === \"systemjs\"\n      ? [[proposalDynamicImport], [transformModulesSystemJs]]\n      : []),\n  ]\n  const result = await babelTransform({\n    ast: inputAst,\n    code: inputCode,\n    options: {\n      ...options,\n      plugins: babelPluginArray,\n    },\n  })\n  return result\n}\n\nconst babelTransform = async ({ ast, code, options }) => {\n  try {\n    if (ast) {\n      const result = await transformFromAstAsync(ast, code, options)\n      return result\n    }\n    return await transformAsync(code, options)\n  } catch (error) {\n    if (error && error.code === \"BABEL_PARSE_ERROR\") {\n      const message = error.message\n      throw createParseError({\n        message: message.replace(ansiRegex, \"\"),\n        messageHTML: ansiToHTML(message),\n        filename: options.filename,\n        lineNumber: error.loc.line,\n        columnNumber: error.loc.column,\n      })\n    }\n    throw error\n  }\n}\n\nconst pattern = [\n  \"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\n  \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\",\n].join(\"|\")\nconst ansiRegex = new RegExp(pattern, \"g\")\n\nconst createParseError = (data) => {\n  const { message } = data\n  const parseError = new Error(message)\n  parseError.code = \"PARSE_ERROR\"\n  parseError.data = data\n\n  return parseError\n}\n",
    "import {\n  resolveUrl,\n  urlToFileSystemPath,\n  urlToRelativeUrl,\n  normalizeStructuredMetaMap,\n  urlToMeta,\n} from \"@jsenv/util\"\nimport { jsenvTransform } from \"./jsenvTransform.js\"\n\nexport const transformJs = async ({\n  projectDirectoryUrl,\n  code,\n  url,\n  urlAfterTransform,\n  map,\n\n  babelPluginMap,\n  convertMap = {},\n  moduleOutFormat = \"esmodule\",\n  importMetaFormat = moduleOutFormat,\n  importMetaEnvFileRelativeUrl,\n  importMeta,\n\n  allowTopLevelAwait = true,\n  transformTopLevelAwait = true,\n  transformGenerator = true,\n  transformGlobalThis = true,\n  sourcemapEnabled = true,\n}) => {\n  if (typeof projectDirectoryUrl !== \"string\") {\n    throw new TypeError(`projectDirectoryUrl must be a string, got ${projectDirectoryUrl}`)\n  }\n  if (typeof babelPluginMap !== \"object\") {\n    throw new TypeError(`babelPluginMap must be an object, got ${babelPluginMap}`)\n  }\n  if (typeof code === \"undefined\") {\n    throw new TypeError(`code missing, received ${code}`)\n  }\n  if (typeof url !== \"string\") {\n    throw new TypeError(`url must be a string, got ${url}`)\n  }\n\n  const { inputCode, inputMap } = await computeInputCodeAndInputMap({\n    code: String(code),\n    url,\n    urlAfterTransform,\n    map,\n    projectDirectoryUrl,\n    convertMap,\n    sourcemapEnabled,\n    allowTopLevelAwait,\n  })\n  const inputPath = computeInputPath(url)\n  const inputRelativePath = computeInputRelativePath(url, projectDirectoryUrl)\n\n  const importMetaEnvFileUrl = resolveUrl(importMetaEnvFileRelativeUrl, projectDirectoryUrl)\n  const importMetaEnvRelativeUrlForInput = urlToRelativeUrl(importMetaEnvFileUrl, url)\n  const importMetaEnvFileSpecifier = relativeUrlToSpecifier(importMetaEnvRelativeUrlForInput)\n\n  return jsenvTransform({\n    inputCode,\n    inputMap,\n    inputPath,\n    inputRelativePath,\n\n    babelPluginMap,\n    convertMap,\n    moduleOutFormat,\n    importMetaFormat,\n    importMetaEnvFileSpecifier,\n    importMeta,\n\n    allowTopLevelAwait,\n    transformTopLevelAwait,\n    transformGenerator,\n    transformGlobalThis,\n    sourcemapEnabled,\n  })\n}\n\nconst computeInputCodeAndInputMap = async ({\n  code,\n  url,\n  urlAfterTransform,\n  map,\n  projectDirectoryUrl,\n  convertMap,\n  remap,\n  allowTopLevelAwait,\n}) => {\n  const structuredMetaMap = normalizeStructuredMetaMap(\n    {\n      convert: convertMap,\n    },\n    projectDirectoryUrl,\n  )\n  const { convert } = urlToMeta({ url, structuredMetaMap })\n  if (!convert) {\n    return { inputCode: code, inputMap: map }\n  }\n\n  if (typeof convert !== \"function\") {\n    throw new TypeError(`convert must be a function, got ${convert}`)\n  }\n  // TODO: handle map when passed\n  const conversionResult = await convert({\n    projectDirectoryUrl,\n    code,\n    url,\n    urlAfterTransform,\n    map,\n    remap,\n    allowTopLevelAwait,\n  })\n  if (typeof conversionResult !== \"object\") {\n    throw new TypeError(`convert must return an object, got ${conversionResult}`)\n  }\n  const inputCode = conversionResult.code\n  if (typeof inputCode !== \"string\") {\n    throw new TypeError(`convert must return { code } string, got { code: ${inputCode} } `)\n  }\n  const inputMap = conversionResult.map\n  return { inputCode, inputMap }\n}\n\nconst computeInputPath = (url) => {\n  if (url.startsWith(\"file://\")) {\n    return urlToFileSystemPath(url)\n  }\n  return url\n}\n\nconst computeInputRelativePath = (url, projectDirectoryUrl) => {\n  if (url.startsWith(projectDirectoryUrl)) {\n    return urlToRelativeUrl(url, projectDirectoryUrl)\n  }\n  return undefined\n}\n\nconst relativeUrlToSpecifier = (relativeUrl) => {\n  if (relativeUrl.startsWith(\"../\")) return relativeUrl\n  if (relativeUrl.startsWith(\"./\")) return relativeUrl\n  return `./${relativeUrl}`\n}\n",
    "import { urlToContentType } from \"@jsenv/server\"\nimport { transformJs } from \"./js-compilation-service/transformJs.js\"\nimport { transformResultToCompilationResult } from \"./transformResultToCompilationResult.js\"\n\nexport const jsenvCompilerForJavaScript = ({\n  projectDirectoryUrl,\n  originalFileUrl,\n  compiledFileUrl,\n  compileId,\n  importMetaEnvFileRelativeUrl,\n  importMeta,\n  groupMap,\n  babelPluginMap,\n  convertMap,\n  transformTopLevelAwait,\n  moduleOutFormat,\n  importMetaFormat,\n  writeOnFilesystem,\n  sourcemapExcludeSources,\n}) => {\n  const contentType = urlToContentType(originalFileUrl)\n\n  if (contentType !== \"application/javascript\" && contentType !== \"text/javascript\") {\n    return null\n  }\n\n  return {\n    compile: async (originalFileContent) => {\n      const transformResult = await transformJs({\n        projectDirectoryUrl,\n        importMetaEnvFileRelativeUrl,\n        importMeta,\n        code: originalFileContent,\n        url: originalFileUrl,\n        urlAfterTransform: compiledFileUrl,\n        babelPluginMap: compileIdToBabelPluginMap(compileId, { groupMap, babelPluginMap }),\n        convertMap,\n        transformTopLevelAwait,\n        moduleOutFormat,\n        importMetaFormat,\n      })\n      const sourcemapFileUrl = `${compiledFileUrl}.map`\n\n      return transformResultToCompilationResult(transformResult, {\n        projectDirectoryUrl,\n        originalFileContent,\n        originalFileUrl,\n        compiledFileUrl,\n        sourcemapFileUrl,\n        sourcemapMethod: writeOnFilesystem ? \"comment\" : \"inline\",\n        sourcemapExcludeSources,\n      })\n    },\n  }\n}\n\nexport const compileIdToBabelPluginMap = (compileId, { babelPluginMap, groupMap }) => {\n  const babelPluginMapForGroupMap = {}\n\n  const groupBabelPluginMap = {}\n  groupMap[compileId].babelPluginRequiredNameArray.forEach((babelPluginRequiredName) => {\n    if (babelPluginRequiredName in babelPluginMap) {\n      groupBabelPluginMap[babelPluginRequiredName] = babelPluginMap[babelPluginRequiredName]\n    }\n  })\n\n  return {\n    ...groupBabelPluginMap,\n    ...babelPluginMapForGroupMap,\n  }\n}\n",
    "import { createRequire } from \"module\"\nimport { urlToRelativeUrl, resolveUrl } from \"@jsenv/util\"\nimport { transformResultToCompilationResult } from \"@jsenv/core/src/internal/compiling/transformResultToCompilationResult.js\"\nimport { transformJs } from \"@jsenv/core/src/internal/compiling/js-compilation-service/transformJs.js\"\nimport { compileIdToBabelPluginMap } from \"@jsenv/core/src/internal/compiling/jsenvCompilerForJavaScript.js\"\n\nconst require = createRequire(import.meta.url)\n\nconst VueComponentCompiler = require(\"@vue/component-compiler\")\n\nconst VueCompiler = VueComponentCompiler.createDefaultCompiler()\n\nexport const jsenvCompilerForVue = ({\n  projectDirectoryUrl,\n  originalFileUrl,\n  compiledFileUrl,\n  compileId,\n\n  importMetaEnvFileRelativeUrl,\n  importMeta,\n  groupMap,\n  babelPluginMap,\n  convertMap,\n  transformTopLevelAwait,\n  moduleOutFormat,\n  importMetaFormat,\n\n  writeOnFilesystem,\n  sourcemapExcludeSources,\n}) => {\n  if (!originalFileUrl.endsWith(\".vue\")) {\n    return null\n  }\n\n  return {\n    compile: async (originalFileContent) => {\n      const vueComponent = VueCompiler.compileToDescriptor(\n        originalFileUrl,\n        originalFileContent,\n        \"utf8\",\n      )\n      const assembledComponent = VueComponentCompiler.assemble(\n        vueComponent,\n        originalFileUrl,\n        vueComponent,\n      )\n      const { code, map } = assembledComponent\n      const sourcemapFileUrl = `${compiledFileUrl}.map`\n      map.sources = map.sources.map((source) => {\n        const sourceUrl = resolveUrl(source, sourcemapFileUrl)\n        return urlToRelativeUrl(sourceUrl, sourcemapFileUrl)\n      })\n\n      const transformResult = await transformJs({\n        projectDirectoryUrl,\n        importMetaEnvFileRelativeUrl,\n        importMeta,\n        code,\n        map,\n        url: originalFileUrl,\n        urlAfterTransform: compiledFileUrl,\n        babelPluginMap: compileIdToBabelPluginMap(compileId, { groupMap, babelPluginMap }),\n        convertMap,\n        transformTopLevelAwait,\n        moduleOutFormat,\n        importMetaFormat,\n      })\n\n      return transformResultToCompilationResult(transformResult, {\n        projectDirectoryUrl,\n        originalFileContent,\n        originalFileUrl,\n        compiledFileUrl,\n        sourcemapFileUrl,\n        sourcemapMethod: writeOnFilesystem ? \"comment\" : \"inline\",\n        sourcemapExcludeSources,\n      })\n    },\n  }\n}\n"
  ],
  "names": [
    "filenameContainsBackSlashes",
    "__filename",
    "indexOf",
    "url",
    "replace",
    "startsWithWindowsDriveLetter",
    "string",
    "firstChar",
    "test",
    "secondChar",
    "windowsFilePathToUrl",
    "windowsFilePath",
    "replaceBackSlashesWithSlashes",
    "setJavaScriptSourceMappingUrl",
    "javaScriptSource",
    "sourceMappingFileUrl",
    "replaced",
    "sourceAfterReplace",
    "replaceSourceMappingUrl",
    "javascriptSourceMappingUrlCommentRegexp",
    "writeJavaScriptSourceMappingURL",
    "setCssSourceMappingUrl",
    "cssSource",
    "cssSourceMappingUrlCommentRegExp",
    "writeCssSourceMappingUrl",
    "value",
    "sourcemapToBase64Url",
    "sourcemap",
    "asBase64",
    "Buffer",
    "from",
    "JSON",
    "stringify",
    "toString",
    "source",
    "regexp",
    "callback",
    "lastSourceMappingUrl",
    "matchSourceMappingUrl",
    "exec",
    "index",
    "before",
    "slice",
    "after",
    "mappedAfter",
    "match",
    "firstGroup",
    "generateCompiledFileAssetUrl",
    "compiledFileUrl",
    "assetName",
    "isWindows",
    "process",
    "platform",
    "transformResultToCompilationResult",
    "code",
    "map",
    "contentType",
    "metadata",
    "projectDirectoryUrl",
    "originalFileContent",
    "originalFileUrl",
    "sourcemapFileUrl",
    "sourcemapEnabled",
    "sourcemapExcludeSources",
    "sourcemapMethod",
    "TypeError",
    "sources",
    "sourcesContent",
    "assets",
    "assetsContent",
    "output",
    "length",
    "push",
    "Promise",
    "all",
    "sourceFileUrl",
    "ensureWindowsDriveLetter",
    "resolveUrl",
    "startsWith",
    "urlToRelativeUrl",
    "sourceFileContent",
    "readFile",
    "sourceRoot",
    "setSourceMappingUrl",
    "sourcemapFileRelativePathForModule",
    "stringifyMap",
    "coverage",
    "coverageAssetFileUrl",
    "stringifyCoverage",
    "compiledSource",
    "object",
    "require",
    "createRequire",
    "syntaxDynamicImport",
    "syntaxImportMeta",
    "syntaxNumericSeparator",
    "minimalBabelPluginArray",
    "addNamespace",
    "addDefault",
    "addNamed",
    "parseExpression",
    "babelPluginTransformImportMeta",
    "api",
    "pluginOptions",
    "replaceImportMeta",
    "babelState",
    "jsValueToAst",
    "jsValue",
    "valueAst",
    "opts",
    "pre",
    "state",
    "visitor",
    "Program",
    "programPath",
    "metaPropertyPathMap",
    "traverse",
    "MemberExpression",
    "path",
    "node",
    "type",
    "property",
    "objectProperty",
    "name",
    "Object",
    "keys",
    "forEach",
    "importMetaPropertyName",
    "replaceWithImport",
    "namespace",
    "importAst",
    "replaceWith",
    "replaceWithValue",
    "findAsyncPluginNameInBabelPluginMap",
    "babelPluginMap",
    "ansiToHTML",
    "ansiString",
    "Convert",
    "toHtml",
    "ensureRegeneratorRuntimeImportBabelPlugin",
    "options",
    "addSideEffect",
    "assertVersion",
    "regeneratorRuntimeIdentifierName",
    "regeneratorRuntimeImportPath",
    "Identifier",
    "filename",
    "filepathname",
    "endsWith",
    "scope",
    "getProgramParent",
    "ensureGlobalThisImportBabelPlugin",
    "globalThisIdentifierName",
    "globalThisImportPath",
    "list",
    "babelHelperNameInsideJsenvCoreArray",
    "babelHelperScope",
    "babelHelperAbstractScope",
    "babelHelperNameToImportSpecifier",
    "babelHelperName",
    "includes",
    "filePathToBabelHelperName",
    "filePath",
    "fileUrl",
    "fileSystemPathToUrl",
    "babelHelperPrefix",
    "afterBabelHelper",
    "transformBabelHelperToImportBabelPlugin",
    "file",
    "cachedHelpers",
    "set",
    "availableHelper",
    "undefined",
    "babelHelperImportSpecifier",
    "helper",
    "nameHint",
    "transformAsync",
    "transformFromAstAsync",
    "transformModulesSystemJs",
    "proposalDynamicImport",
    "jsenvTransform",
    "inputCode",
    "inputPath",
    "inputRelativePath",
    "inputAst",
    "inputMap",
    "moduleOutFormat",
    "importMetaFormat",
    "importMetaEnvFileSpecifier",
    "importMeta",
    "allowTopLevelAwait",
    "transformTopLevelAwait",
    "transformGenerator",
    "transformGlobalThis",
    "filenameRelative",
    "inputSourceMap",
    "configFile",
    "babelrc",
    "ast",
    "sourceMaps",
    "sourceFileName",
    "parserOpts",
    "allowAwaitOutsideFunction",
    "babelPluginMapWithoutTransformTypeOf",
    "key",
    "metaPropertyName",
    "asyncPluginName",
    "babelPluginArrayWithoutAsync",
    "result",
    "babelTransform",
    "plugins",
    "finalResult",
    "babelPluginArray",
    "babelPluginName",
    "error",
    "message",
    "createParseError",
    "ansiRegex",
    "messageHTML",
    "lineNumber",
    "loc",
    "line",
    "columnNumber",
    "column",
    "pattern",
    "join",
    "RegExp",
    "data",
    "parseError",
    "Error",
    "transformJs",
    "urlAfterTransform",
    "convertMap",
    "importMetaEnvFileRelativeUrl",
    "computeInputCodeAndInputMap",
    "String",
    "computeInputPath",
    "computeInputRelativePath",
    "importMetaEnvFileUrl",
    "importMetaEnvRelativeUrlForInput",
    "relativeUrlToSpecifier",
    "remap",
    "structuredMetaMap",
    "normalizeStructuredMetaMap",
    "convert",
    "urlToMeta",
    "conversionResult",
    "urlToFileSystemPath",
    "relativeUrl",
    "compileIdToBabelPluginMap",
    "compileId",
    "groupMap",
    "babelPluginMapForGroupMap",
    "groupBabelPluginMap",
    "babelPluginRequiredNameArray",
    "babelPluginRequiredName",
    "VueComponentCompiler",
    "VueCompiler",
    "createDefaultCompiler",
    "jsenvCompilerForVue",
    "writeOnFilesystem",
    "compile",
    "vueComponent",
    "compileToDescriptor",
    "assembledComponent",
    "assemble",
    "sourceUrl",
    "transformResult"
  ],
  "mappings": "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"
}