# abort signal pending vs aborted
AssertionError: actual and expect are different

actual: AbortSignal
expect: AbortSignal {
  aborted: true,
  reason: "toto",
}

# request url diff
AssertionError: actual and expect are different

actual: Request("https://foo.com/")
expect: Request("https://bar.com/")

# request with custom options
AssertionError: actual and expect are different

actual: Request("http://example.com/")
expect: Request("http://example.com/", {
  body: ReadableStream,
  cache: "no-store",
  credentials: "omit",
  headers: Headers(
    "from" => "developer@example.org",
  ),
  method: "POST",
  mode: "same-origin",
  redirect: "manual",
  referrerPolicy: "strict-origin",
  referrer: "http://google.com/",
})

# request abort signal pending vs aborted
AssertionError: actual and expect are different

actual: Request("http://example.com/")
expect: Request("http://example.com/", {
  signal: AbortSignal {
    aborted: true,
    reason: "toto",
  },
})

# response body diff
AssertionError: actual and expect are different

actual: {
  a: Response(ReadableStream, { status: 200 }),
  b: true,
}
expect: {
  a: Response(ReadableStream, { status: 200 }),
  b: false,
}

# response status diff
AssertionError: actual and expect are different

actual: Response(ReadableStream, {
  status: 200,
})
expect: Response(ReadableStream, {
  status: 400,
})

# response prop diff
AssertionError: actual and expect are different

actual: Response(ReadableStream, {
  headers: Headers(
    "content-type" => "text/plain;charset=UTF-8",
  ),
  status: 200,
})
expect: Response(ReadableStream, {
  headers: Headers(
    "content-length" => "0"
  ),
  status: 400,
  statusText: "Bad request",
})

# redirected response
AssertionError: actual and expect are different

actual: Response(ReadableStream, {
  headers: Headers(
    "content-type" => "text/plain;charset=UTF-8",
  ),
  status: 200,
})
expect: Response(null, {
  headers: Headers(
    "location" => "http://example.com/",
  ),
  status: 302,
})

