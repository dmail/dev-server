# async arrow function vs arrow function
actual: async () => { [source code] }
expect: () => { [source code] }

# arrow function source modified, name same
actual: () => {
  [source code],
}
expect: () => {
  [source code],
}

# async function vs function
actual: async function () { [source code] }
expect: function () { [source code] }

# function vs arrow function
actual: function () {
  [source code],
}
expect: () => {
  [source code],
}

# function source modified, name same
actual: function () {
  [source code],
}
expect: function () {
  [source code],
}

# function source same, name modified
actual: function foo () { [source code] }
expect: function bar () { [source code] }

# anonymous function vs named function
actual: function () { [source code] }
expect: function foo () { [source code] }

# number of diff when comparing async function and function
actual: {
  a: async function () { [source code] },
  b: true,
}
expect: {
  a: function () { [source code] },
  b: false,
}

# function prototype modified
actual: function Foo () {
  prototype: {
    a: true,
    b: false,
  },
  [source code],
}
expect: function Bar () {
  prototype: {
    a: true,
    b: true,
  },
  [source code],
}

# function prototype added
actual: function Foo () {
  [source code],
}
expect: function Bar () {
  prototype: {
    a: true,
  },
  [source code],
}

# class vs function
actual: class actual {
  [source code];
}
expect: function expect () {
  [source code],
}

# class Animal vs class Robot
actual: class Animal { [source code] }
expect: class Robot { [source code] }

# extends Animal vs extend Robot
actual: class Human extends Animal {
  static type = "human_actual";
  [source code];
}
expect: class Human extends Robot {
  static type = "human_expected";
  [source code];
}

# class static property modified
actual: class A {
  static a = true;
  [source code];
}
expect: class A {
  static a = false;
  [source code];
}

# class static property added
actual: class A {
  static a = true;
  [source code];
}
expect: class A {
  [source code];
}

# class static property removed
actual: class A {
  [source code];
}
expect: class A {
  static a = false;
  [source code];
}

