# property are different
actual: {
  a: true,
}
expect: {
  a: {
    b: true,
  },
}

# property removed
actual: { a: true }
expect: {
  a: true,
  should_be_there: true,
}

# property added
actual: {
  a: true,
  should_not_be_there: true,
}
expect: { a: true }

# false should be an object
actual: false
expect: {
  foo: true,
}

# object should be false
actual: {
  foo: {
    a: Object(0),
  },
}
expect: false

# false should be an object at property
actual: {
  foo: false,
}
expect: {
  foo: {
    a: true,
  },
}

# object should be false at property
actual: {
  foo: {
    a: true,
  },
}
expect: {
  foo: false,
}

# max depth inside diff
actual: {
  foo: { foo_a: { foo_a2: Object(1) }, foo_b: { foo_b2: Object(1) } },
  bar: true,
}
expect: {
  foo: { foo_a: { foo_a2: Object(1) }, foo_b: { foo_b2: Object(1) } },
  bar: {
    bar_a: Object(1),
  },
}

# max diff per object
actual: {
  a: true,
  b: {
    a: Object(2),
  },
  c: true,
}
expect: {
  c: true,
  b: {
    a: false,
  },
  a: true,
}

# max prop around diff
actual: {
  ↑ 1 prop ↑
  b: true,
  ↓ 1 prop ↓
}
expect: {
  ↑ 1 prop ↑
  b: false,
  ↓ 1 prop ↓
}

# property should be there and is big
actual: { a: true }
expect: {
  a: true,
  should_be_there: {
    a: true,
    b: true,
    item: Object(3),
    ↓ 5 props ↓
  },
}

# many props should not be there
actual: {
  a: true,
  b: true,
  c: {
    an_object: true,
    and: true,
  },
  d: true,
  ↓ 4 props ↓
}
expect: {
  a: true,
  c: {},
}

# object vs user
actual: {}
expect: User {}

