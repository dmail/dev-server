# named Symbol() property added
actual: {
  Symbol(undefined): true,
}
expect: {}

# named Symbol() property removed
actual: {}
expect: {
  Symbol(undefined): true,
}

# Symbol.for() property value modified
actual: {
  Symbol.for(undefined): true,
}
expect: {
  Symbol.for(undefined): false,
}

# Symbol.for() property no diff
actual: {
  Symbol.for(undefined): true,
  a: true,
}
expect: {
  Symbol.for(undefined): true,
  a: false,
}

# named Symbol() property value modified
actual: {
  Symbol(undefined): true,
}
expect: {
  Symbol(undefined): false,
}

# named Symbol() property no diff
actual: {
  Symbol(undefined): true,
  a: true,
}
expect: {
  Symbol(undefined): true,
  a: false,
}

# anonymous Symbol() property value modified
actual: {
  Symbol(undefined): true,
}
expect: {
  Symbol(undefined): false,
}

# Symbol.iterator property value modified
actual: {
  Symbol.iterator: true,
}
expect: {
  Symbol.iterator: false,
}

# Symbol.toStringTag property value modified
actual: a
expect: b

# well known symbol diff
actual: Symbol.iterator
expect: Symbol.toStringTag

# Symbol() description modified
actual: Symbol(undefined)
expect: Symbol(undefined)

# Symbol.for() key modified
actual: Symbol.for(undefined)
expect: Symbol.for(undefined)

# named Symbol() vs anonymous symbol
actual: Symbol(undefined)
expect: Symbol(undefined)

# anonymous symbol vs named Symbol()
actual: Symbol(undefined)
expect: Symbol(undefined)

# named Symbol() vs Symbol.for()
actual: Symbol(undefined)
expect: Symbol.for(undefined)

# Symbol.for() vs named Symbol()
actual: Symbol.for(undefined)
expect: Symbol(undefined)

# symbol diff comes first
actual: {
  Symbol.for(undefined): true,
  a: true,
}
expect: {
  Symbol.for(undefined): false,
  a: false,
}

