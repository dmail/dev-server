export const createHorizontalBreakpoint=e=>t(n,e);const e=()=>{const e=[];return{listen:n=>(e.push(n),()=>{const t=e.indexOf(n);t>-1&&e.splice(t,1)}),notify:(...n)=>{e.slice().forEach((e=>{e(...n)}))}}},n=(({compute:n,register:t})=>{let o=n();const i=e();let r=()=>{};return t&&(r=t((()=>{const e=n();if(e!==o){const n=e;o=e,i.notify(e,n)}}))),{get:()=>n(),changed:i,unregister:r}})({name:"window-width",compute:()=>window.innerWidth,register:e=>(window.addEventListener("resize",e),window.addEventListener("orientationchange",e),()=>{window.removeEventListener("resize",e),window.removeEventListener("orientationchange",e)})}),t=(n,t)=>{const o=()=>{const e=n.get();return e<t?"below":e>t?"above":"equals"};let i=o();const r=e();return n.changed.listen((()=>{const e=o();if(e!==i){const n=i;i=e,r.notify(e,n)}})),{isAbove:()=>n.get()>t,isBelow:()=>n.get()<t,changed:r}};