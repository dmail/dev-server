import{createPreference as t}from"/js/preferences.js?v=7075848a";import{enableVariant as e}from"/js/variant.js?v=6ddde2cc";const o="function"==typeof window.Notification,i=t("notification"),n=[];export const renderToolbarNotification=()=>{o?c():r()};const c=()=>{const t=Notification.permission;"default"!==t?"denied"!==t?"granted"!==t||d():l():a()},s=document.querySelector("#toggle-notifs"),r=()=>{const t=document.querySelector(".settings-notification");t.setAttribute("data-disabled","true"),t.setAttribute("title","Notification not available in the browser"),s.disabled=!0},a=()=>{u();const t=document.querySelector(".settings-notification");t.removeAttribute("data-disabled"),t.removeAttribute("title")},l=()=>{u();const t=document.querySelector(".settings-notification");t.setAttribute("data-disabled","true"),t.setAttribute("title","Notification denied")},d=()=>{e(document.querySelector(".notification-text"),{notif_granted:"yes"}),s.disabled=!1,s.checked=f(),s.onchange=()=>{b(s.checked),s.checked||n.slice().forEach((t=>{t.close()}))}},u=()=>{e(document.querySelector(".notification-text"),{notif_granted:"no"}),s.disabled=!0,s.checked=!1,document.querySelector("a.request_notification_permission").onclick=()=>{x().then((()=>{b(!0),c()}))}};export const notifyExecutionResult=(t,e,o)=>{if(!f())return;const i={lang:"en",icon:m(),clickToFocus:!0,clickToClose:!0};"errored"===e.status?o?"completed"===o.status?g("Broken",{...i,body:"".concat(t," execution now failing.")}):g("Still failing",{...i,body:"".concat(t," execution still failing.")}):g("Failing",{...i,body:"".concat(t," execution failed.")}):o&&"errored"===o.status&&g("Fixed",{...i,body:"".concat(t," execution fixed.")})};const f=()=>!i.has()||i.get(),b=t=>i.set(t),m=()=>{const t=document.querySelector('link[rel="icon"]');return t?t.href:void 0};let y="default";const g=o?async(t,{clickToFocus:e=!1,clickToClose:o=!1,...i}={})=>{if("granted"!==y)return null;const c=new Notification(t,i);return n.push(c),c.onclick=()=>{e&&window.focus(),o&&c.close()},c.onclose=()=>{const t=n.indexOf(c);t>-1&&n.splice(t,1)},c}:()=>{};let k;const x=o?async()=>k||(k=Notification.requestPermission(),y=await k,k=void 0,y):()=>Promise.resolve("default");