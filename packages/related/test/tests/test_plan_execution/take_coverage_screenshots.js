import { writeFileSync } from "@jsenv/filesystem";
import { chromium as playwrightChromium } from "playwright";

import { reportCoverageAsHtml } from "@jsenv/test";
import { startFileServer } from "@jsenv/core/tests/start_file_server.js";

// take screenshot of coverage generated by istanbul
export const takeCoverageScreenshots = async (
  testPlanResult,
  screenshotDirectoryUrl,
  fileRelativeUrls,
) => {
  if (process.env.CI) {
    return;
  }
  const coverageDirectoryUrl = new URL("./.coverage/", screenshotDirectoryUrl);
  reportCoverageAsHtml(testPlanResult, coverageDirectoryUrl);
  const browser = await playwrightChromium.launch();
  const page = await browser.newPage();
  const fileServer = await startFileServer({
    rootDirectoryUrl: coverageDirectoryUrl,
  });
  for (const fileRelativeUrl of fileRelativeUrls) {
    await page.goto(`${fileServer.origin}/${fileRelativeUrl}.html`);
    await page.setViewportSize({ width: 640, height: 670 }); // generate smaller screenshots
    const screenshotBuffer = await page.screenshot();
    writeFileSync(
      new URL(`${fileRelativeUrl}.png`, screenshotDirectoryUrl),
      screenshotBuffer,
    );
  }

  browser.close();
  fileServer.stop();
};
