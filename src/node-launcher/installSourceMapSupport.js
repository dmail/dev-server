import { readFileSync } from "fs"
import { resolve, dirname } from "path"
import { resolveImport, hrefToPathname } from "@jsenv/module-resolution"
import { readSourceMappingURL } from "../source-mapping-url.js"

const sourceMapSupport = import.meta.require("source-map-support")

/*
 * sourcemap generated by compile server are like that:
 * {
 *   sources: [
 *     '/src/file.js`
 *   ]
 * }
 *
 * to have proper file path it should either be
 * {
 *   sources: [
 *     'Users/src/file.js'
 *   ]
 * }
 *
 * or specify a sourceRoot like
 * {
 *   sourceRoot: 'Users',
 *   sources: [
 *     '/src/file.js'
 *   ]
 * }
 *
 * but it would certainly break sourcemap inside vscode or chrome
 * to fix this I changed the sourcemap readed by source-map-support
 * to ensure sources are absolute.
 * See the following issue which talk about same problem
 * https://github.com/evanw/node-source-map-support/issues/120
 *
 * It works for now but nust be tested on many use case
 * i'm pretty sure it would fail on file inside node_modules for instance
 */
export const installSourceMapSupport = ({ projectFolder }) => {
  sourceMapSupport.install({
    retrieveSourceMap: (source) => {
      let content
      try {
        content = readFileSync(source, "utf8")
      } catch (e) {
        if (e && e.code === "ENOENT") return null
        throw e
      }

      const sourceMappingURL = readSourceMappingURL(content)
      if (!sourceMappingURL) return null
      const sourceMapFile = resolve(dirname(source), sourceMappingURL)

      let sourceMap
      try {
        const sourceMapContent = readFileSync(sourceMapFile, "utf8")
        sourceMap = JSON.parse(sourceMapContent)
      } catch (e) {
        if (e && e.code === "ENOENT") {
          return null
        }
        if (e && e.name === "SyntaxError") {
          return null
        }
        throw e
      }

      const absoluteSourceMap = {
        ...sourceMap,
        sources: sourceMap.sources.map((source) => {
          if (source[0] === "/") {
            return hrefToPathname(`file://${projectFolder}/${source.slice(1)}`)
          }

          const resolvedImport = resolveImport({
            importer: `file://${sourceMapFile}`,
            specifier: source,
          })
          return hrefToPathname(resolvedImport)
        }),
      }

      return {
        url: source,
        map: absoluteSourceMap,
      }
    },
  })
}
