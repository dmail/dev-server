{"version":3,"file":"main.js","sources":["/test/commonjs/import-meta-resolve/importMap.json","/node_modules/@jsenv/core/helpers/babel/typeof/typeof.js","/node_modules/@jsenv/import-map/src/assertImportMap.js","/node_modules/@jsenv/import-map/src/hasScheme.js","/node_modules/@jsenv/href/src/hrefToScheme/hrefToScheme.js","/node_modules/@jsenv/href/src/hrefToPathname/hrefToPathname.js","/node_modules/@jsenv/href/src/hrefToOrigin/hrefToOrigin.js","/node_modules/@jsenv/href/src/pathnameToDirname/pathnameToDirname.js","/node_modules/@jsenv/import-map/src/resolveUrl/resolveUrl.js","/node_modules/@jsenv/import-map/src/tryUrlResolution.js","/node_modules/@jsenv/import-map/src/resolveSpecifier/resolveSpecifier.js","/node_modules/@jsenv/import-map/src/sortImportMap/sortImportMap.js","/node_modules/@jsenv/import-map/src/normalizeImportMap/normalizeImportMap.js","/node_modules/@jsenv/href/src/pathnameToExtension/pathnameToExtension.js","/node_modules/@jsenv/import-map/src/applyImportMap/applyImportMap.js","/node_modules/@jsenv/import-map/src/resolveImport/resolveImport.js","/src/generateBabelPluginMapOption/import-meta-commonjs.js","/test/commonjs/import-meta-resolve/import-meta-resolve.js"],"sourcesContent":["export default {\n  \"imports\": {\n    \"foo\": \"/bar\"\n  }\n}\n","const nativeTypeOf = (obj) => typeof obj\n\nconst customTypeOf = (obj) => {\n  return obj &&\n    typeof Symbol === \"function\" &&\n    obj.constructor === Symbol &&\n    obj !== Symbol.prototype\n    ? \"symbol\"\n    : typeof obj\n}\n\nexport default typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\"\n  ? nativeTypeOf\n  : customTypeOf\n","export const assertImportMap = (value) => {\n  if (value === null) {\n    throw new TypeError(`an importMap must be an object, got null`)\n  }\n\n  const type = typeof value\n  if (type !== \"object\") {\n    throw new TypeError(`an importMap must be an object, received ${value}`)\n  }\n\n  if (Array.isArray(value)) {\n    throw new TypeError(`an importMap must be an object, received array ${value}`)\n  }\n}\n","export const hasScheme = (string) => {\n  return /^[a-zA-Z]{2,}:/.test(string)\n}\n","export const hrefToScheme = (href) => {\n  const colonIndex = href.indexOf(\":\")\n  if (colonIndex === -1) return \"\"\n  return href.slice(0, colonIndex)\n}\n","import { hrefToScheme } from \"../hrefToScheme/hrefToScheme.js\"\n\nexport const hrefToPathname = (href) => {\n  return ressourceToPathname(hrefToRessource(href))\n}\n\nconst hrefToRessource = (href) => {\n  const scheme = hrefToScheme(href)\n\n  if (scheme === \"file\") {\n    return href.slice(\"file://\".length)\n  }\n\n  if (scheme === \"https\" || scheme === \"http\") {\n    // remove origin\n    const afterProtocol = href.slice(scheme.length + \"://\".length)\n    const pathnameSlashIndex = afterProtocol.indexOf(\"/\", \"://\".length)\n    return afterProtocol.slice(pathnameSlashIndex)\n  }\n\n  return href.slice(scheme.length + 1)\n}\n\nconst ressourceToPathname = (ressource) => {\n  const searchSeparatorIndex = ressource.indexOf(\"?\")\n  return searchSeparatorIndex === -1 ? ressource : ressource.slice(0, searchSeparatorIndex)\n}\n","import { hrefToScheme } from \"../hrefToScheme/hrefToScheme.js\"\n\nexport const hrefToOrigin = (href) => {\n  const scheme = hrefToScheme(href)\n\n  if (scheme === \"file\") {\n    return \"file://\"\n  }\n\n  if (scheme === \"http\" || scheme === \"https\") {\n    const secondProtocolSlashIndex = scheme.length + \"://\".length\n    const pathnameSlashIndex = href.indexOf(\"/\", secondProtocolSlashIndex)\n\n    if (pathnameSlashIndex === -1) return href\n    return href.slice(0, pathnameSlashIndex)\n  }\n\n  return href.slice(0, scheme.length + 1)\n}\n","export const pathnameToDirname = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex === -1) return \"\"\n\n  return pathname.slice(0, slashLastIndex)\n}\n","// could be useful: https://url.spec.whatwg.org/#url-miscellaneous\n\nimport { hasScheme } from \"../hasScheme.js\"\nimport { hrefToScheme } from \"@jsenv/href/src/hrefToScheme/hrefToScheme.js\"\nimport { hrefToPathname } from \"@jsenv/href/src/hrefToPathname/hrefToPathname.js\"\nimport { hrefToOrigin } from \"@jsenv/href/src/hrefToOrigin/hrefToOrigin.js\"\nimport { pathnameToDirname } from \"@jsenv/href/src/pathnameToDirname/pathnameToDirname.js\"\n\nexport const resolveUrl = (specifier, baseUrl) => {\n  if (baseUrl) {\n    if (typeof baseUrl !== \"string\") {\n      throw new TypeError(writeBaseUrlMustBeAString({ baseUrl, specifier }))\n    }\n    if (!hasScheme(baseUrl)) {\n      throw new Error(writeBaseUrlMustBeAbsolute({ baseUrl, specifier }))\n    }\n  }\n\n  if (hasScheme(specifier)) {\n    return specifier\n  }\n\n  if (!baseUrl) {\n    throw new Error(writeBaseUrlRequired({ baseUrl, specifier }))\n  }\n\n  // scheme relative\n  if (specifier.slice(0, 2) === \"//\") {\n    return `${hrefToScheme(baseUrl)}:${specifier}`\n  }\n\n  // origin relative\n  if (specifier[0] === \"/\") {\n    return `${hrefToOrigin(baseUrl)}${specifier}`\n  }\n\n  const baseOrigin = hrefToOrigin(baseUrl)\n  const basePathname = hrefToPathname(baseUrl)\n\n  if (specifier === \".\") {\n    const baseDirname = pathnameToDirname(basePathname)\n    return `${baseOrigin}${baseDirname}/`\n  }\n\n  // pathname relative inside\n  if (specifier.slice(0, 2) === \"./\") {\n    const baseDirname = pathnameToDirname(basePathname)\n    return `${baseOrigin}${baseDirname}/${specifier.slice(2)}`\n  }\n\n  // pathname relative outside\n  if (specifier.slice(0, 3) === \"../\") {\n    let unresolvedPathname = specifier\n    const importerFolders = basePathname.split(\"/\")\n    importerFolders.pop()\n\n    while (unresolvedPathname.slice(0, 3) === \"../\") {\n      unresolvedPathname = unresolvedPathname.slice(3)\n      // when there is no folder left to resolved\n      // we just ignore '../'\n      if (importerFolders.length) {\n        importerFolders.pop()\n      }\n    }\n\n    const resolvedPathname = `${importerFolders.join(\"/\")}/${unresolvedPathname}`\n    return `${baseOrigin}${resolvedPathname}`\n  }\n\n  // bare\n  if (basePathname === \"\") {\n    return `${baseOrigin}/${specifier}`\n  }\n  if (basePathname[basePathname.length] === \"/\") {\n    return `${baseOrigin}${basePathname}${specifier}`\n  }\n  return `${baseOrigin}${pathnameToDirname(basePathname)}/${specifier}`\n}\n\nconst writeBaseUrlMustBeAString = ({ baseUrl, specifier }) => `baseUrl must be a string.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst writeBaseUrlMustBeAbsolute = ({ baseUrl, specifier }) => `baseUrl must be absolute.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst writeBaseUrlRequired = ({\n  baseUrl,\n  specifier,\n}) => `baseUrl required to resolve relative specifier.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n","import { hasScheme } from \"./hasScheme.js\"\nimport { resolveUrl } from \"./resolveUrl/resolveUrl.js\"\n\nexport const tryUrlResolution = (string, url) => {\n  const result = resolveUrl(string, url)\n  return hasScheme(result) ? result : null\n}\n","import { hasScheme } from \"../hasScheme.js\"\nimport { resolveUrl } from \"../resolveUrl/resolveUrl.js\"\n\nexport const resolveSpecifier = (specifier, importer) => {\n  if (specifier[0] === \"/\" || specifier.startsWith(\"./\") || specifier.startsWith(\"../\")) {\n    return resolveUrl(specifier, importer)\n  }\n\n  if (hasScheme(specifier)) {\n    return specifier\n  }\n\n  return null\n}\n","import { assertImportMap } from \"../assertImportMap.js\"\n\nexport const sortImportMap = (importMap) => {\n  assertImportMap(importMap)\n\n  const { imports, scopes } = importMap\n  return {\n    imports: imports ? sortImports(imports) : undefined,\n    scopes: scopes ? sortScopes(scopes) : undefined,\n  }\n}\n\nexport const sortImports = (imports) => {\n  const importsSorted = {}\n  Object.keys(imports)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((name) => {\n      importsSorted[name] = imports[name]\n    })\n  return importsSorted\n}\n\nexport const sortScopes = (scopes) => {\n  const scopesSorted = {}\n  Object.keys(scopes)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((scopeName) => {\n      scopesSorted[scopeName] = sortImports(scopes[scopeName])\n    })\n  return scopesSorted\n}\n\nconst compareLengthOrLocaleCompare = (a, b) => {\n  return b.length - a.length || a.localeCompare(b)\n}\n","import { assertImportMap } from \"../assertImportMap.js\"\nimport { tryUrlResolution } from \"../tryUrlResolution.js\"\nimport { resolveSpecifier } from \"../resolveSpecifier/resolveSpecifier.js\"\n\nimport { sortImports, sortScopes } from \"../sortImportMap/sortImportMap.js\"\n\nexport const normalizeImportMap = (importMap, baseUrl) => {\n  assertImportMap(importMap)\n  if (typeof baseUrl !== \"string\") {\n    throw new TypeError(formulateBaseUrlMustBeAString({ baseUrl }))\n  }\n\n  const { imports, scopes } = importMap\n\n  return {\n    imports: imports ? normalizeImports(imports, baseUrl) : undefined,\n    scopes: scopes ? normalizeScopes(scopes, baseUrl) : undefined,\n  }\n}\n\nconst normalizeImports = (imports, baseUrl) => {\n  const importsNormalized = {}\n  Object.keys(imports).forEach((specifier) => {\n    const address = imports[specifier]\n\n    if (typeof address !== \"string\") {\n      console.warn(\n        formulateAddressMustBeAString({\n          address,\n          specifier,\n        }),\n      )\n      return\n    }\n\n    const specifierResolved = resolveSpecifier(specifier, baseUrl) || specifier\n\n    const addressUrl = tryUrlResolution(address, baseUrl)\n    if (addressUrl === null) {\n      console.warn(\n        formulateAdressResolutionFailed({\n          address,\n          baseUrl,\n          specifier,\n        }),\n      )\n      return\n    }\n\n    if (specifier.endsWith(\"/\") && !addressUrl.endsWith(\"/\")) {\n      console.warn(\n        formulateAddressUrlRequiresTrailingSlash({\n          addressUrl,\n          address,\n          specifier,\n        }),\n      )\n      return\n    }\n    importsNormalized[specifierResolved] = addressUrl\n  })\n  return sortImports(importsNormalized)\n}\n\nconst normalizeScopes = (scopes, baseUrl) => {\n  const scopesNormalized = {}\n  Object.keys(scopes).forEach((scope) => {\n    const scopeValue = scopes[scope]\n    const scopeUrl = tryUrlResolution(scope, baseUrl)\n    if (scopeUrl === null) {\n      console.warn(\n        formulateScopeResolutionFailed({\n          scope,\n          baseUrl,\n        }),\n      )\n      return\n    }\n    const scopeValueNormalized = normalizeImports(scopeValue, baseUrl)\n    scopesNormalized[scopeUrl] = scopeValueNormalized\n  })\n  return sortScopes(scopesNormalized)\n}\n\nconst formulateBaseUrlMustBeAString = ({ baseUrl }) => `baseUrl must be a string.\n--- base url ---\n${baseUrl}`\n\nconst formulateAddressMustBeAString = ({ specifier, address }) => `Address must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}`\n\nconst formulateAdressResolutionFailed = ({\n  address,\n  baseUrl,\n  specifier,\n}) => `Address url resolution failed.\n--- address ---\n${address}\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst formulateAddressUrlRequiresTrailingSlash = ({\n  addressURL,\n  address,\n  specifier,\n}) => `Address must end with /.\n--- address url ---\n${addressURL}\n--- address ---\n${address}\n--- specifier ---\n${specifier}`\n\nconst formulateScopeResolutionFailed = ({ scope, baseUrl }) => `Scope url resolution failed.\n--- scope ---\n${scope}\n--- base url ---\n${baseUrl}`\n","export const pathnameToExtension = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex !== -1) {\n    pathname = pathname.slice(slashLastIndex + 1)\n  }\n\n  const dotLastIndex = pathname.lastIndexOf(\".\")\n  if (dotLastIndex === -1) return \"\"\n  // if (dotLastIndex === pathname.length - 1) return \"\"\n  return pathname.slice(dotLastIndex)\n}\n","import { assertImportMap } from \"../assertImportMap.js\"\nimport { hasScheme } from \"../hasScheme.js\"\nimport { tryUrlResolution } from \"../tryUrlResolution.js\"\nimport { resolveSpecifier } from \"../resolveSpecifier/resolveSpecifier.js\"\n\nexport const applyImportMap = ({ importMap, specifier, importer }) => {\n  assertImportMap(importMap)\n  if (typeof specifier !== \"string\") {\n    throw new TypeError(writeSpecifierMustBeAString({ specifier, importer }))\n  }\n  if (importer) {\n    if (typeof importer !== \"string\") {\n      throw new TypeError(writeImporterMustBeAString({ importer, specifier }))\n    }\n    if (!hasScheme(importer)) {\n      throw new Error(writeImporterMustBeAbsolute({ importer, specifier }))\n    }\n  }\n\n  const specifierUrl = resolveSpecifier(specifier, importer)\n  const specifierNormalized = specifierUrl || specifier\n\n  const { scopes } = importMap\n  if (scopes && importer) {\n    const scopeKeyMatching = Object.keys(scopes).find((scopeKey) => {\n      return scopeKey === importer || specifierIsPrefixOf(scopeKey, importer)\n    })\n    if (scopeKeyMatching) {\n      const scopeValue = scopes[scopeKeyMatching]\n      const remappingFromScopeImports = applyImports(specifierNormalized, scopeValue)\n      if (remappingFromScopeImports !== null) {\n        return remappingFromScopeImports\n      }\n    }\n  }\n\n  const { imports } = importMap\n  if (imports) {\n    const remappingFromImports = applyImports(specifierNormalized, imports)\n    if (remappingFromImports !== null) {\n      return remappingFromImports\n    }\n  }\n\n  if (specifierUrl) {\n    return specifierUrl\n  }\n\n  throw new Error(writeBareSpecifierMustBeRemapped({ specifier, importer }))\n}\n\nconst applyImports = (specifier, imports) => {\n  const importKeyArray = Object.keys(imports)\n\n  let i = 0\n  while (i < importKeyArray.length) {\n    const importKey = importKeyArray[i]\n    i++\n    if (importKey === specifier) {\n      const importValue = imports[importKey]\n      return importValue\n    }\n    if (specifierIsPrefixOf(importKey, specifier)) {\n      const importValue = imports[importKey]\n      const afterImportKey = specifier.slice(importKey.length)\n\n      return tryUrlResolution(afterImportKey, importValue)\n    }\n  }\n\n  return null\n}\n\nconst specifierIsPrefixOf = (specifierHref, href) => {\n  return specifierHref[specifierHref.length - 1] === \"/\" && href.startsWith(specifierHref)\n}\n\nconst writeSpecifierMustBeAString = ({ specifier, importer }) => `specifier must be a string.\n--- specifier ---\n${specifier}\n--- importer ---\n${importer}`\n\nconst writeImporterMustBeAString = ({ importer, specifier }) => `importer must be a string.\n--- importer ---\n${importer}\n--- specifier ---\n${specifier}`\n\nconst writeImporterMustBeAbsolute = ({ importer, specifier }) => `importer must be an absolute url.\n--- importer ---\n${importer}\n--- specifier ---\n${specifier}`\n\nconst writeBareSpecifierMustBeRemapped = ({ specifier, importer }) => `Unmapped bare specifier.\n--- specifier ---\n${specifier}\n--- importer ---\n${importer}`\n","// directly target the files because this code\n// will be executed either on node or browser\n// and also we don't want to pull more code than necessary\n// when this one gets bundled\nimport { hrefToPathname } from \"@jsenv/href/src/hrefToPathname/hrefToPathname.js\"\nimport { pathnameToExtension } from \"@jsenv/href/src/pathnameToExtension/pathnameToExtension.js\"\nimport { resolveUrl } from \"../resolveUrl/resolveUrl.js\"\nimport { applyImportMap } from \"../applyImportMap/applyImportMap.js\"\n\nexport const resolveImport = ({ specifier, importer, importMap, defaultExtension = true }) => {\n  return applyDefaultExtension({\n    url: importMap\n      ? applyImportMap({ importMap, specifier, importer })\n      : resolveUrl(specifier, importer),\n    importer,\n    defaultExtension,\n  })\n}\n\nconst applyDefaultExtension = ({ url, importer, defaultExtension }) => {\n  if (hrefToPathname(url) === \"/\") {\n    return url\n  }\n\n  if (url.endsWith(\"/\")) {\n    return url\n  }\n\n  if (typeof defaultExtension === \"string\") {\n    const extension = pathnameToExtension(url)\n    if (extension === \"\") {\n      return `${url}${defaultExtension}`\n    }\n    return url\n  }\n\n  if (defaultExtension === true) {\n    const extension = pathnameToExtension(url)\n    if (extension === \"\" && importer) {\n      const importerPathname = hrefToPathname(importer)\n      const importerExtension = pathnameToExtension(importerPathname)\n      return `${url}${importerExtension}`\n    }\n  }\n  return url\n}\n","// eslint-disable-next-line import/no-unresolved\nimport importMap from \"/importMap.json\"\nimport { normalizeImportMap } from \"@jsenv/import-map/src/normalizeImportMap/normalizeImportMap.js\"\nimport { resolveImport } from \"@jsenv/import-map/src/resolveImport/resolveImport.js\"\n\nconst nodeRequire = require\nexport { nodeRequire as require }\n\nconst filenameContainsBackSlashes = __filename.indexOf(\"\\\\\") > -1\n\nexport const url = filenameContainsBackSlashes\n  ? `file://${__filename.replace(/\\\\/g, \"/\")}`\n  : `file://${__filename}`\n\nexport const resolve = (specifier) => {\n  return resolveImport({\n    specifier,\n    importer: url,\n    importMap: memoizedGetImportMap(),\n    defaultExtension: false,\n  })\n}\n\n// better for perf and helps rollup to tree shake this out\n// when import.meta.resolve is not used\nlet memoizedImportMap\nconst memoizedGetImportMap = () => {\n  if (memoizedImportMap) return memoizedImportMap\n  memoizedImportMap = normalizeImportMap(importMap, url)\n  return memoizedImportMap\n}\n","export const basic = import.meta.resolve(\"./file.js\")\n\nexport const remapped = import.meta.resolve(\"foo\")\n"],"names":["nativeTypeOf","obj","customTypeOf","Symbol","constructor","prototype","iterator","assertImportMap","value","TypeError","type","Array","isArray","hasScheme","string","test","hrefToScheme","href","colonIndex","indexOf","slice","hrefToPathname","ressourceToPathname","hrefToRessource","scheme","length","afterProtocol","pathnameSlashIndex","ressource","searchSeparatorIndex","hrefToOrigin","secondProtocolSlashIndex","pathnameToDirname","pathname","slashLastIndex","lastIndexOf","resolveUrl","specifier","baseUrl","writeBaseUrlMustBeAString","Error","writeBaseUrlMustBeAbsolute","writeBaseUrlRequired","baseOrigin","basePathname","baseDirname","unresolvedPathname","importerFolders","split","pop","resolvedPathname","join","tryUrlResolution","url","result","resolveSpecifier","importer","startsWith","sortImports","imports","importsSorted","Object","keys","sort","compareLengthOrLocaleCompare","forEach","name","sortScopes","scopes","scopesSorted","scopeName","a","b","localeCompare","normalizeImportMap","importMap","formulateBaseUrlMustBeAString","normalizeImports","undefined","normalizeScopes","importsNormalized","address","console","warn","formulateAddressMustBeAString","specifierResolved","addressUrl","formulateAdressResolutionFailed","endsWith","formulateAddressUrlRequiresTrailingSlash","scopesNormalized","scope","scopeValue","scopeUrl","formulateScopeResolutionFailed","scopeValueNormalized","addressURL","pathnameToExtension","dotLastIndex","applyImportMap","writeSpecifierMustBeAString","writeImporterMustBeAString","writeImporterMustBeAbsolute","specifierUrl","specifierNormalized","scopeKeyMatching","find","scopeKey","specifierIsPrefixOf","remappingFromScopeImports","applyImports","remappingFromImports","writeBareSpecifierMustBeRemapped","importKeyArray","i","importKey","importValue","afterImportKey","specifierHref","resolveImport","defaultExtension","applyDefaultExtension","extension","importerPathname","importerExtension","nodeRequire","require","filenameContainsBackSlashes","__filename","replace","resolve","memoizedGetImportMap","memoizedImportMap","basic","_resolve","remapped"],"mappings":"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"}