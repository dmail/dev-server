{"version":3,"sources":["file:///.jsenv/BUNDLE_CONSTANTS.js","/src/generateBabelPluginMapOption/import-meta-global.js"],"names":["chunkId","currentScript","document","url"],"mappings":";;;AAAO,MAAMA,OAAO,GAAb,SAAA,C,CCAP;;AACA,MAAA,SAAA,GAM0BE,QAN1B;AAAA,MAMQD,aAAAA,GAAAA,SAAAA,CAAAA,aANR;AAQO,MAAME,GAAG,GAAIF,aAAa,IAAIA,aAAa,CAA/B,GAACA,IAAuC,IAAA,GAAA,CAAA,OAAA,EAAiBC,QAAQ,CAAzB,OAAA,EAApD,IAAA","sourcesContent":["export const chunkId = \"main.js\"","// eslint-disable-next-line import/no-unresolved\nimport { chunkId } from \"/.jsenv/BUNDLE_CONSTANTS.js\"\n// eslint-disable-next-line import/no-unresolved\nimport importMap from \"/importMap.json\"\nimport { normalizeImportMap } from \"@jsenv/import-map/src/normalizeImportMap/normalizeImportMap.js\"\nimport { resolveImport } from \"@jsenv/import-map/src/resolveImport/resolveImport.js\"\n\nconst { currentScript } = document\n\nexport const url = (currentScript && currentScript.src) || new URL(chunkId, document.baseURI).href\n\nexport const resolve = (specifier) => {\n  return resolveImport({\n    specifier,\n    importer: url,\n    importMap: memoizedGetImportMap(),\n    defaultExtension: false,\n  })\n}\n\n// better for perf and helps rollup to tree shake this out\n// when import.meta.resolve is not used\nlet memoizedImportMap\nconst memoizedGetImportMap = () => {\n  if (memoizedImportMap) return memoizedImportMap\n  memoizedImportMap = normalizeImportMap(importMap, url)\n  return memoizedImportMap\n}\n"]}